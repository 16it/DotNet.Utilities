<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AngleSharp</name>
    </assembly>
    <members>
        <member name="T:AngleSharp.Attributes.Accessors">
            <summary>
            The various DOM object accessor types.
            </summary>
        </member>
        <member name="F:AngleSharp.Attributes.Accessors.None">
            <summary>
            Specifies that the property does not have any special meaning.
            </summary>
        </member>
        <member name="F:AngleSharp.Attributes.Accessors.Getter">
            <summary>
            Specifies that the property or method should be handled as a getter.
            </summary>
        </member>
        <member name="F:AngleSharp.Attributes.Accessors.Setter">
            <summary>
            Specifies that the property or method should be handled as a setter.
            </summary>
        </member>
        <member name="F:AngleSharp.Attributes.Accessors.Deleter">
            <summary>
            Specifies that the property or method should be handled by delete.
            </summary>
        </member>
        <member name="T:AngleSharp.Attributes.DomAccessorAttribute">
            <summary>
            This attribute decorates official DOM objects as specified by the W3C. You could
            use it to check if the given property or method should be placed on special locations,
            e.g. as a getter, setter or handled by a delete call.
            </summary>
        </member>
        <member name="P:AngleSharp.Attributes.DomAccessorAttribute.Type">
            <summary>
            Gets the accessor types for the given property or method.
            </summary>
        </member>
        <member name="T:AngleSharp.Attributes.DomDescriptionAttribute">
            <summary>
            This attribute is used to place a description on some object.
            The description can then be read out at runtime.
            </summary>
        </member>
        <member name="P:AngleSharp.Attributes.DomDescriptionAttribute.Description">
            <summary>
            Gets the official name of the given class,
            method or property.
            </summary>
        </member>
        <member name="T:AngleSharp.Attributes.DomNoInterfaceObjectAttribute">
            <summary>
            This attribute appears on an interfaces, which must not be available in the ECMAScript binding.
            </summary>
        </member>
        <member name="T:AngleSharp.Attributes.DomPutForwardsAttribute">
            <summary>
            Decorates a read only attribute declaration whose type is an interface type.
            It indicates that assigning to the attribute will have specific behavior.
            Namely, the assignment is "forwarded" to the named attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.Attributes.DomPutForwardsAttribute.PropertyName">
            <summary>
            Gets the official name of the property to forward assignments to.
            </summary>
        </member>
        <member name="T:AngleSharp.Configuration">
            <summary>
            Represents context configuration for the AngleSharp library.
            Custom configurations can be made by deriving from this class,
            just implementing IConfiguration or modifying an instance of
            this specific class. To change the default configuration one
            needs to provide a service that implements IConfiguration in
            the dependency resolver.
            </summary>
        </member>
        <member name="T:AngleSharp.IConfiguration">
            <summary>
            Represents the interface for a general setup of AngleSharp
            or a particular AngleSharp request.
            </summary>
        </member>
        <member name="M:AngleSharp.IConfiguration.ReportError(AngleSharp.Parser.ParseErrorEventArgs)">
            <summary>
            Method that is called once parse errors are encountered.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.IsScripting">
            <summary>
            Gets or sets the current scripting mode. If this is set to true,
            then the content of noscript tags will be skipped.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.IsStyling">
            <summary>
            Gets or sets the current CSS mode. If this is set to true,
            then style-sheets will be loaded, parsed and evaluated.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.IsEmbedded">
            <summary>
            Gets or sets the current embedding mode. Enabling embedding will
            emulate the document being rendered in an iframe.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.Culture">
            <summary>
            Gets or sets the culture to use.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.ScriptEngines">
            <summary>
            Gets an enumeration over the available script engines.
            By default no script engine is integrated.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.StyleEngines">
            <summary>
            Gets an enumeration over the available style engines,
            besides the default CSS engine.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.Services">
            <summary>
            Gets an enumeration over the available services.
            </summary>
        </member>
        <member name="P:AngleSharp.IConfiguration.Requesters">
            <summary>
            Gets an enumeration over all available (e.g. http) requesters.
            </summary>
        </member>
        <member name="F:AngleSharp.Configuration.defaultConfiguration">
            <summary>
            A fixed configuration that cannot be changed.
            </summary>
        </member>
        <member name="F:AngleSharp.Configuration.customConfiguration">
            <summary>
            A custom configuration that is user-defined.
            </summary>
        </member>
        <member name="M:AngleSharp.Configuration.#ctor">
            <summary>
            Creates a new default configuration.
            </summary>
        </member>
        <member name="M:AngleSharp.Configuration.Clone(AngleSharp.IConfiguration)">
            <summary>
            Creates a clone of the given configuration. The clone may be used to
            change settings without affecting the originally provided configuration.
            </summary>
            <param name="configuration">The configuration to copy.</param>
            <returns>The copied configuration.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.ReportError(AngleSharp.Parser.ParseErrorEventArgs)">
            <summary>
            Reports an error by writing to the debug console.
            </summary>
            <param name="e">The parse error event arguments.</param>
        </member>
        <member name="M:AngleSharp.Configuration.SetDefault(AngleSharp.IConfiguration)">
            <summary>
            Sets the default configuration to use, when the configuration
            is omitted.
            </summary>
            <param name="configuration">The configuration to set.</param>
        </member>
        <member name="M:AngleSharp.Configuration.Register(AngleSharp.Infrastructure.IService)">
            <summary>
            Adds the provided service.
            </summary>
            <param name="service">The service to register.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Register(AngleSharp.Infrastructure.IScriptEngine)">
            <summary>
            Adds the given script engine.
            </summary>
            <param name="scriptEngine">The engine to register.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Register(AngleSharp.Network.IRequester)">
            <summary>
            Adds the given requester.
            </summary>
            <param name="requester">The requester to register.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Register(AngleSharp.Infrastructure.IStyleEngine)">
            <summary>
            Adds the given styling engine.
            </summary>
            <param name="styleEngine">The engine to register.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Unregister(AngleSharp.Infrastructure.IScriptEngine)">
            <summary>
            Removes the given script engine.
            </summary>
            <param name="scriptEngine">The script engine to unregister.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Unregister(AngleSharp.Infrastructure.IStyleEngine)">
            <summary>
            Removes the given style engine.
            </summary>
            <param name="styleEngine">The style engine to unregister.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Unregister(AngleSharp.Infrastructure.IService)">
            <summary>
            Removes the given service.
            </summary>
            <param name="service">The service to unregister.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Configuration.Unregister(AngleSharp.Network.IRequester)">
            <summary>
            Removes the given requester.
            </summary>
            <param name="requester">The requester to unregister.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="P:AngleSharp.Configuration.Services">
            <summary>
            Gets an enumeration over the registered services.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.ScriptEngines">
            <summary>
            Gets an enumeration over the available script engines.
            By default no script engine is integrated.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.StyleEngines">
            <summary>
            Gets an enumeration over the available style engines,
            besides the default CSS engine.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.Requesters">
            <summary>
            Gets an enumeration over all available (e.g. http) requesters.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.Default">
            <summary>
            Gets the default configuration to use. The default
            configuration can be overriden by placing some
            configuration in the DependencyResolver.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.IsScripting">
            <summary>
            Gets or sets the current scripting mode.
            Default is false.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.IsStyling">
            <summary>
            Gets or sets the current CSS mode.
            Default is true.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.IsEmbedded">
            <summary>
            Gets or sets the current embedding mode. Normally the document is NOT
            embedded. Enabling embedding will emulate the document being rendered
            in an iframe.
            Default is false.
            </summary>
        </member>
        <member name="P:AngleSharp.Configuration.Culture">
            <summary>
            Gets or sets the culture to use.
            Default is the system (UI) culture.
            </summary>
        </member>
        <member name="T:AngleSharp.ContextExtensions">
            <summary>
            A set of extensions for the browsing context.
            </summary>
        </member>
        <member name="M:AngleSharp.ContextExtensions.OpenAsync(AngleSharp.DOM.IBrowsingContext,AngleSharp.Network.IResponse)">
            <summary>
            Opens a new document asynchronously in the given context.
            </summary>
            <param name="context">The browsing context to use.</param>
            <param name="response">The response to examine.</param>
            <returns>The task that creates the document.</returns>
        </member>
        <member name="M:AngleSharp.ContextExtensions.OpenAsync(AngleSharp.DOM.IBrowsingContext,AngleSharp.Network.IResponse,System.Threading.CancellationToken)">
            <summary>
            Opens a new document asynchronously in the given context.
            </summary>
            <param name="context">The browsing context to use.</param>
            <param name="response">The response to examine.</param>
            <param name="cancel">The cancellation token.</param>
            <returns>The task that creates the document.</returns>
        </member>
        <member name="M:AngleSharp.ContextExtensions.OpenAsync(AngleSharp.DOM.IBrowsingContext,AngleSharp.Url)">
            <summary>
            Opens a new document asynchronously in the given context.
            </summary>
            <param name="context">The browsing context to use.</param>
            <param name="url">The URL to load.</param>
            <returns>The task that creates the document.</returns>
        </member>
        <member name="M:AngleSharp.ContextExtensions.OpenAsync(AngleSharp.DOM.IBrowsingContext,AngleSharp.Url,System.Threading.CancellationToken)">
            <summary>
            Opens a new document asynchronously in the given context.
            </summary>
            <param name="context">The browsing context to use.</param>
            <param name="url">The URL to load.</param>
            <param name="cancel">The cancellation token.</param>
            <returns>The task that creates the document.</returns>
        </member>
        <member name="T:AngleSharp.DOM.IElementMap">
            <summary>
            Represents a set of name-element mappings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IElementMap.Remove(System.String)">
            <summary>
            Deletes the element with the given name from the map.
            </summary>
            <param name="name">The name of the element to remove.</param>
        </member>
        <member name="P:AngleSharp.DOM.IElementMap.Item(System.String)">
            <summary>
            Gets or sets an element in the dictionary.
            </summary>
            <param name="name">The name of the element to get or set.</param>
            <returns>The element with the associated name.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Events.ITouchList">
            <summary>
            Represents a list with touch points.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchList.Length">
            <summary>
            Gets the number of contained touch points.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchList.Item(System.Int32)">
            <summary>
            Gets the data of the touch point at the given index.
            </summary>
            <param name="index">The index of the touch point.</param>
            <returns>The touch point at the index.</returns>
        </member>
        <member name="T:AngleSharp.DOM.CacheStatus">
            <summary>
            An enumeration over all possible cache states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.CacheStatus.Uncached">
            <summary>
            The resource is uncached.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.CacheStatus.Idle">
            <summary>
            The cache status checker is idle.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.CacheStatus.Checking">
            <summary>
            The cache status is being checked.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.CacheStatus.Downloading">
            <summary>
            The resource is being downloaded.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.CacheStatus.UpdateReady">
            <summary>
            An update for the resource is available.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.CacheStatus.Obsolete">
            <summary>
            The resource is practically obsolete.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.OverflowMode">
            <summary>
            An enumeration with possible overflow modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.OverflowMode.Auto">
            <summary>
            The overflow-mode is determined by the renderer.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.OverflowMode.Visible">
            <summary>
            The content is allowed to overflow.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.OverflowMode.Hidden">
            <summary>
            The content is cut to prevent overflowing.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.OverflowMode.Scroll">
            <summary>
            The content can be scrolled.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.PositionMode">
            <summary>
            An enumeration with possible position modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PositionMode.Static">
            <summary>
            The position is determined by the renderer.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PositionMode.Relative">
            <summary>
            The position is relative to its determined one.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PositionMode.Absolute">
            <summary>
            The position is relative to the upper drawing context.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PositionMode.Fixed">
            <summary>
            The position is relative to the top drawing context.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PositionMode.Sticky">
            <summary>
            The position is either fixed or static depending on the viewport.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.UnitType">
            <summary>
            Representation of the various primitive types.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Unknown">
            <summary>
            An unknown unit.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Number">
            <summary>
            A number.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Percent">
            <summary>
            A relative (percent) unit.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Em">
            <summary>
            Unit is relative to the size of a M.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Ex">
            <summary>
            Unit is relative to the size of a X.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Px">
            <summary>
            Unit is pixels.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Cm">
            <summary>
            Unit is centimeters. Computed via dpi. 2.54cm = 1in
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Mm">
            <summary>
            Unit is millimeters. Computed via dpi. 25.4mm = 1in
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.In">
            <summary>
            Unit is inches. Computed via dpi. 1in * dpi = px
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Pt">
            <summary>
            Unit is points. 72pt = 1in.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Pc">
            <summary>
            Unit is pica. 6pc = 1in.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Deg">
            <summary>
            Unit is degrees. 360deg = 1turn.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Rad">
            <summary>
            Unit is radiants. 2PIrad = 1turn.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Grad">
            <summary>
            Unit is gradians. 1grad = 400turn.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Ms">
            <summary>
            Unit is milliseconds.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.S">
            <summary>
            Unit is seconds.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Hz">
            <summary>
            Unit is hertz.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Khz">
            <summary>
            Unit is kilohertz.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Dimension">
            <summary>
            An unknown dimension value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.String">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Uri">
            <summary>
            An uri value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Ident">
            <summary>
            An identifier.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Attr">
            <summary>
            An attribute name.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Counter">
            <summary>
            A counter value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Rect">
            <summary>
            A rectangle value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.RgbColor">
            <summary>
            A RGB color definition.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Transition">
            <summary>
            A transition function.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Gradient">
            <summary>
            A gradient function.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.ImageList">
            <summary>
            A list of image urls.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnitType.Transform">
            <summary>
            A transformation rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSShorthandProperty">
            <summary>
            Base class for all shorthand properties
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSProperty">
            <summary>
            Fore more information about CSS properties see:
            http://www.w3.org/TR/CSS21/propidx.html.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssProperty">
            <summary>
            Common interface of all CSS properties.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssProperty.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssProperty.Value">
            <summary>
            Gets the value of the property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssProperty.IsImportant">
            <summary>
            Gets if the !important flag has been set.
            </summary>
        </member>
        <member name="T:AngleSharp.ICssObject">
            <summary>
            Represents an object that can be represented in CSS code.
            </summary>
        </member>
        <member name="M:AngleSharp.ICssObject.ToCss">
            <summary>
            Returns the CSS code representation of the object.
            </summary>
            <returns>The source code snippet.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.#ctor(System.String,AngleSharp.DOM.Css.CSSStyleDeclaration,AngleSharp.Css.PropertyFlags)">
            <summary>
            Creates a new CSS property.
            </summary>
            <param name="name">The name of the property</param>
            <param name="rule">The parent style declaration.</param>
            <param name="flags">The property flags, if any.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.TrySetValue(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Tries to set the given value and returns the status.
            </summary>
            <param name="value">The value that should be set.</param>
            <returns>True if the value is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.Reset">
            <summary>
            Resets the property to its initial state.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Notified once the value changed.
            </summary>
            <param name="value">The value to be checked.</param>
            <returns>True if the value is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.ToCss">
            <summary>
            Returns a CSS code representation of the property.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.SerializeValue">
            <summary>
            Serializes the current value of the CSS property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSProperty.Serialize(System.String,System.String,System.Boolean)">
            <summary>
            Serializes the full CSS declaration.
            </summary>
            <param name="name">The name of the declaration.</param>
            <param name="value">The value of the declaration.</param>
            <param name="important">True if the important flag is set.</param>
            <returns>The string representation of the declaration.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.Rule">
            <summary>
            Gets or sets the assigned rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.HasValue">
            <summary>
            Gets if the property has a value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsHashless">
            <summary>
            Gets if the property supports hashless colors in quirksmode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsUnitless">
            <summary>
            Gets if the property supports unitless lengths in quirksmode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsShorthand">
            <summary>
            Gets if the property is actually only a shorthand.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.Value">
            <summary>
            Gets the value of the property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsInherited">
            <summary>
            Gets if the property is inherited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsAnimatable">
            <summary>
            Gets if the property can be animated, in general.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsInitial">
            <summary>
            Gets if the property is currently in its initial state.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSProperty.IsImportant">
            <summary>
            Gets or sets if the !important flag has been set.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSShorthandProperty.SerializeValue(System.Collections.Generic.IEnumerable{AngleSharp.DOM.Css.CSSProperty})">
            <summary>
            Serializes the shorthand with only the given properties.
            </summary>
            <param name="properties">The properties to use.</param>
            <returns>The serialized value or an empty string, if serialization is not possible.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontSizeAdjustProperty">
            <summary>
            Information:
            http://dev.w3.org/csswg/css-fonts/#propdef-font-size-adjust
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontSizeAdjustProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontSizeAdjustProperty.AspectValue">
            <summary>
            Gets the aspect value specified by the property, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSUnicodeRangeProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en/docs/Web/CSS/@font-face
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSSrcProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en/docs/Web/CSS/@font-face
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.ErrorEvent">
            <summary>
            Represents the error event arguments.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.Event">
            <summary>
            Represents an event argument.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IEvent">
            <summary>
            The Event interface is used to provide contextual information about
            an event to the handler processing the event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IEvent.Stop">
            <summary>
            Prevents further propagation of the event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IEvent.StopImmediately">
            <summary>
            Stops the immediate propagation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IEvent.Cancel">
            <summary>
            Prevents the default behavior.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IEvent.Init(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes the event.
            </summary>
            <param name="type">The type of the event.</param>
            <param name="bubbles">If the event is bubbling.</param>
            <param name="cancelable">If the event is cancelable.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.Type">
            <summary>
            Gets the type of event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.OriginalTarget">
            <summary>
            Gets the original target of the event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.CurrentTarget">
            <summary>
            Gets the current target (if bubbled).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.Phase">
            <summary>
            Gets the phase of the event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.IsBubbling">
            <summary>
            Gets if the event is actually bubbling.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.IsCancelable">
            <summary>
            Gets if the event is cancelable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.IsDefaultPrevented">
            <summary>
            Gets if the default behavior has been prevented.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.IsTrusted">
            <summary>
            Gets if the event is trusted.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IEvent.Time">
            <summary>
            Gets the originating timestamp.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.Event.#ctor">
            <summary>
            Creates a new event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.Event.Stop">
            <summary>
            Prevents further propagation of the event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.Event.StopImmediately">
            <summary>
            Stops the immediate propagation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.Event.Cancel">
            <summary>
            Prevents the default behavior.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.Event.Init(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes the event.
            </summary>
            <param name="type">The type of the event.</param>
            <param name="bubbles">If the event is bubbling.</param>
            <param name="cancelable">If the event is cancelable.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.Flags">
            <summary>
            Gets the associated flags.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.Type">
            <summary>
            Gets the type of event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.OriginalTarget">
            <summary>
            Gets the original target of the event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.CurrentTarget">
            <summary>
            Gets the current target (if bubbled).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.Phase">
            <summary>
            Gets the phase of the event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.IsBubbling">
            <summary>
            Gets if the event is actually bubbling.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.IsCancelable">
            <summary>
            Gets if the event is cancelable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.IsDefaultPrevented">
            <summary>
            Gets if the default behavior has been prevented.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.IsTrusted">
            <summary>
            Gets if the event is trusted.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.Event.Time">
            <summary>
            Gets the originating timestamp.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.FocusEvent">
            <summary>
            Represents the arguments for a focus event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.UiEvent">
            <summary>
            Represents the event args for any UI event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IUiEvent">
            <summary>
            Represents the event arguments for an UI event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IUiEvent.Init(System.String,System.Boolean,System.Boolean,AngleSharp.DOM.IWindow,System.Int32)">
            <summary>
            Initializes the UI event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="view">Sets the associated view for the UI event.</param>
            <param name="detail">Sets the detail id for the UIevent.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IUiEvent.View">
            <summary>
            Gets the associated view.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IUiEvent.Detail">
            <summary>
            Gets the event details.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IFocusEvent">
            <summary>
            Represents the event arguments for a focus event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IFocusEvent.Init(System.String,System.Boolean,System.Boolean,AngleSharp.DOM.IWindow,System.Int32,AngleSharp.DOM.IEventTarget)">
            <summary>
            Initializes the focus event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="view">Sets the associated view for the UI event.</param>
            <param name="detail">Sets the detail id for the UIevent.</param>
            <param name="target">The target that is being focused.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IFocusEvent.Target">
            <summary>
            Gets the target of the event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.HashChangedEvent">
            <summary>
            Represents a custom event that provides an additional details property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IHashChangeEvent">
            <summary>
            Represents the event arguments for a hash changed event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IHashChangeEvent.PreviousUrl">
            <summary>
            Gets the URL before the hash changed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IHashChangeEvent.CurrentUrl">
            <summary>
            Gets the URL after the hash changed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.KeyboardEvent">
            <summary>
            Represents the event arguments for a keyboard event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IKeyboardEvent">
            <summary>
            Represents the event arguments for a keyboard event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IKeyboardEvent.GetModifierState(System.String)">
            <summary>
            Returns the current state of the specified modifier key.
            </summary>
            <param name="key">The modifier key to lookup.</param>
            <returns>True if the key is currently pressed, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Events.IKeyboardEvent.Init(System.String,System.Boolean,System.Boolean,AngleSharp.DOM.IWindow,System.Int32,System.String,AngleSharp.DOM.Events.KeyboardLocation,System.String,System.Boolean)">
            <summary>
            Initializes the keyboard event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="view">Sets the associated view for the UI event.</param>
            <param name="detail">Sets the detail id for the UI event.</param>
            <param name="key">Sets the key that is currently pressed.</param>
            <param name="location">Sets the position of the originating keyboard.</param>
            <param name="modifiersList">A list with keyboard modifiers that have been pressed.</param>
            <param name="repeat">Sets if the key has been pressed again.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.Key">
            <summary>
            Gets string representation of the pressed key.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.Location">
            <summary>
            Gets the location of the keyboard that initiated the event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.IsCtrlPressed">
            <summary>
            Gets if the control key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.IsShiftPressed">
            <summary>
            Gets if the shift key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.IsAltPressed">
            <summary>
            Gets if the alt key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.IsMetaPressed">
            <summary>
            Gets if the meta key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.IsRepeated">
            <summary>
            Gets if the key press was repeated.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IKeyboardEvent.Locale">
            <summary>
            Gets the locale of the keyboard.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.ModifierExtensions">
            <summary>
            A couple of useful extensions for the modifier list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.MouseEvent">
            <summary>
            Represents the event args for a mouse event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IMouseEvent">
            <summary>
            Represents the event arguments for a mouse event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IMouseEvent.GetModifierState(System.String)">
            <summary>
            Returns the current state of the specified modifier key.
            </summary>
            <param name="key">The modifier key to lookup.</param>
            <returns>True if the key is currently pressed, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Events.IMouseEvent.Init(System.String,System.Boolean,System.Boolean,AngleSharp.DOM.IWindow,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,AngleSharp.DOM.Events.MouseButton,AngleSharp.DOM.IEventTarget)">
            <summary>
            Initializes the mouse event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="view">Sets the associated view for the UI event.</param>
            <param name="detail">Sets the detail id for the UIevent.</param>
            <param name="screenX">Sets the screen X coordinate.</param>
            <param name="screenY">Sets the screen Y coordinate.</param>
            <param name="clientX">Sets the client X coordinate.</param>
            <param name="clientY">Sets the client Y coordinate.</param>
            <param name="ctrlKey">Sets if the control key was pressed.</param>
            <param name="altKey">Sets if the alt key was pressed.</param>
            <param name="shiftKey">Sets if the shift key was pressed.</param>
            <param name="metaKey">Sets if the meta key was pressed.</param>
            <param name="button">Sets which button has been pressed.</param>
            <param name="target">The target of the mouse event.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.ScreenX">
            <summary>
            Gets the screen X coordinates.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.ScreenY">
            <summary>
            Gets the screen Y coordinates.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.ClientX">
            <summary>
            Gets the client X coordinates.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.ClientY">
            <summary>
            Gets the client Y coordinates.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.IsCtrlPressed">
            <summary>
            Gets if the control key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.IsShiftPressed">
            <summary>
            Gets if the shift key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.IsAltPressed">
            <summary>
            Gets if the alt key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.IsMetaPressed">
            <summary>
            Gets if the meta key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.Button">
            <summary>
            Gets which button has been pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.Buttons">
            <summary>
            Gets the currently pressed buttons.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMouseEvent.Target">
            <summary>
            Gets the target of the mouse event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.TouchPoint">
            <summary>
            Implements the interface to access the data of a touch point.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.ITouch">
            <summary>
            Represents the interface for the data of a single touch point.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.Id">
            <summary>
            Gets the id of the touch point.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.Target">
            <summary>
            Gets the target of the touch point.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.ScreenX">
            <summary>
            Gets the x-coordinate relative to the screen.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.ScreenY">
            <summary>
            Gets the y-coordinate relative to the screen.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.ClientX">
            <summary>
            Gets the x-coordinate relative to the client.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.ClientY">
            <summary>
            Gets the y-coordinate relative to the client.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.PageX">
            <summary>
            Gets the x-coordinate relative to the page.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouch.PageY">
            <summary>
            Gets the y-coordinate relative to the page.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.WheelEvent">
            <summary>
            Represents the event args for a mouse wheel event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IWheelEvent">
            <summary>
            Represents the event arguments for a mouse wheel event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IWheelEvent.Init(System.String,System.Boolean,System.Boolean,AngleSharp.DOM.IWindow,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngleSharp.DOM.Events.MouseButton,AngleSharp.DOM.IEventTarget,System.String,System.Double,System.Double,System.Double,AngleSharp.DOM.Events.WheelMode)">
            <summary>
            Initializes the mouse wheel event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="view">Sets the associated view for the UI event.</param>
            <param name="detail">Sets the detail id for the UIevent.</param>
            <param name="screenX">Sets the screen X coordinate.</param>
            <param name="screenY">Sets the screen Y coordinate.</param>
            <param name="clientX">Sets the client X coordinate.</param>
            <param name="clientY">Sets the client Y coordinate.</param>
            <param name="button">Sets which button has been pressed.</param>
            <param name="target">The target of the mouse event.</param>
            <param name="modifiersList">A list with keyboard modifiers that have been pressed.</param>
            <param name="deltaX">The mouse wheel delta in X direction.</param>
            <param name="deltaY">The mouse wheel delta in Y direction.</param>
            <param name="deltaZ">The mouse wheel delta in Z direction.</param>
            <param name="deltaMode">The delta mode for the wheel event.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IWheelEvent.DeltaX">
            <summary>
            Gets the mouse wheel delta X.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IWheelEvent.DeltaY">
            <summary>
            Gets the mouse wheel delta Y.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IWheelEvent.DeltaZ">
            <summary>
            Gets the mouse wheel delta Z.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IWheelEvent.DeltaMode">
            <summary>
            Gets the mouse wheel delta mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.EventTarget">
            <summary>
            Event target base of all DOM nodes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IEventTarget">
            <summary>
            EventTarget is a DOM interface implemented by objects that
            can receive DOM events and have listeners for them.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IEventTarget.AddEventListener(System.String,AngleSharp.DOM.DomEventHandler,System.Boolean)">
            <summary>
            Register an event handler of a specific event type on the EventTarget.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="callback">The listener parameter indicates the EventListener function to be added.</param>
            <param name="capture">True indicates that the user wishes to initiate capture. After initiating
            capture, all events of the specified type will be dispatched to the registered listener before being
            dispatched to any EventTarget beneath it in the DOM tree. Events which are bubbling upward through
            the tree will not trigger a listener designated to use capture.</param>
        </member>
        <member name="M:AngleSharp.DOM.IEventTarget.RemoveEventListener(System.String,AngleSharp.DOM.DomEventHandler,System.Boolean)">
            <summary>
            Removes an event listener from the EventTarget.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="callback">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not.</param>
        </member>
        <member name="M:AngleSharp.DOM.IEventTarget.Dispatch(AngleSharp.DOM.Events.IEvent)">
            <summary>
            Dispatch an event to this EventTarget.
            </summary>
            <param name="ev">The event to dispatch.</param>
            <returns>False if at least one of the event handlers, which handled this event called preventDefault(). Otherwise true.</returns>
        </member>
        <member name="M:AngleSharp.DOM.EventTarget.#ctor">
            <summary>
            Creates a new event target in the DOM.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.EventTarget.AddEventListener(System.String,AngleSharp.DOM.DomEventHandler,System.Boolean)">
            <summary>
            Register an event handler of a specific event type on the Node.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="callback">The listener parameter indicates the EventListener function to be added.</param>
            <param name="capture">True indicates that the user wishes to initiate capture. After initiating
            capture, all events of the specified type will be dispatched to the registered listener before being
            dispatched to any Node beneath it in the DOM tree. Events which are bubbling upward through the tree
            will not trigger a listener designated to use capture.</param>
        </member>
        <member name="M:AngleSharp.DOM.EventTarget.RemoveEventListener(System.String,AngleSharp.DOM.DomEventHandler,System.Boolean)">
            <summary>
            Removes an event listener from the Node.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="callback">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not.</param>
        </member>
        <member name="M:AngleSharp.DOM.EventTarget.CallEventListener(AngleSharp.DOM.Events.Event)">
            <summary>
            Calls the listener registered for the given event.
            </summary>
            <param name="ev">The event that asks for the listeners.</param>
        </member>
        <member name="M:AngleSharp.DOM.EventTarget.Dispatch(AngleSharp.DOM.Events.IEvent)">
            <summary>
            Dispatch an event to this Node.
            </summary>
            <param name="ev">The event to dispatch.</param>
            <returns>False if at least one of the event handlers, which handled this event called preventDefault(). Otherwise true.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CssUnitFactory">
            <summary>
            Factory to create unit attached CSS objects.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssUnitFactory.Create(System.String,System.Single)">
            <summary>
            Creates a new value.
            </summary>
            <param name="unit">The unit of the value.</param>
            <param name="data">The data of the value.</param>
            <returns>The created value.</returns>
        </member>
        <member name="T:AngleSharp.Keywords">
            <summary>
            The collection of used CSS value keywords.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Important">
            <summary>
            The important keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Inherit">
            <summary>
            The inherit keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Initial">
            <summary>
            The initial keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.None">
            <summary>
            The none keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Auto">
            <summary>
            The auto keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.To">
            <summary>
            The to keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Always">
            <summary>
            The always keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Avoid">
            <summary>
            The avoid keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Left">
            <summary>
            The left keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Right">
            <summary>
            The right keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Both">
            <summary>
            The both keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Forwards">
            <summary>
            The forwards keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Backwards">
            <summary>
            The backwards keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Page">
            <summary>
            The page keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Column">
            <summary>
            The column keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.AvoidPage">
            <summary>
            The avoid-page keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.AvoidColumn">
            <summary>
            The avoid-column keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.AvoidRegion">
            <summary>
            The avoid-region keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Inset">
            <summary>
            The inset keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Outset">
            <summary>
            The outset keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Ridge">
            <summary>
            The ridge keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Groove">
            <summary>
            The groove keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Fixed">
            <summary>
            The fixed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Local">
            <summary>
            The local keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Scroll">
            <summary>
            The scroll keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NoRepeat">
            <summary>
            The no-repeat keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Repeat">
            <summary>
            The repeat keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.RepeatX">
            <summary>
            The repeat-x keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.RepeatY">
            <summary>
            The repeat-y keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Round">
            <summary>
            The round keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Space">
            <summary>
            The space keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Stretch">
            <summary>
            The stretch keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Inline">
            <summary>
            The stretch keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Block">
            <summary>
            The block keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.InlineBlock">
            <summary>
            The inline-block keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ListItem">
            <summary>
            The list-item keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.InlineTable">
            <summary>
            The inline-table keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Table">
            <summary>
            The table keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableCaption">
            <summary>
            The table-caption keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableCell">
            <summary>
            The table-cell keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableColumn">
            <summary>
            The table-column keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableColumnGroup">
            <summary>
            The table-column-group keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableFooterGroup">
            <summary>
            The table-footer-group keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableHeaderGroup">
            <summary>
            The table-header-group keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableRow">
            <summary>
            The table-row keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TableRowGroup">
            <summary>
            The table-row-group keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Flex">
            <summary>
            The flex keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.InlineFlex">
            <summary>
            The inline-flex keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Grid">
            <summary>
            The grid keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.InlineGrid">
            <summary>
            The inline-grid keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Visible">
            <summary>
            The visible keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Hidden">
            <summary>
            The hidden keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Collapse">
            <summary>
            The collapse keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Static">
            <summary>
            The static keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Relative">
            <summary>
            The relative keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Absolute">
            <summary>
            The absolute keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Sticky">
            <summary>
            The sticky keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Serif">
            <summary>
            The serif keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SansSerif">
            <summary>
            The sans-serif keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Monospace">
            <summary>
            The monospace keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Cursive">
            <summary>
            The cursive keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Fantasy">
            <summary>
            The fantasy keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Caption">
            <summary>
            The caption keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Icon">
            <summary>
            The icon keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Menu">
            <summary>
            The menu keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.MessageBox">
            <summary>
            The message-box keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SmallCaption">
            <summary>
            The small-caption keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.StatusBar">
            <summary>
            The status-bar keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Normal">
            <summary>
            The normal keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Italic">
            <summary>
            The italic keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Oblique">
            <summary>
            The oblique keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.UltraCondensed">
            <summary>
            The ultra-condensed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ExtraCondensed">
            <summary>
            The extra-condensed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Condensed">
            <summary>
            The condensed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SemiCondensed">
            <summary>
            The semi-condensed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SemiExpanded">
            <summary>
            The semi-expanded keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Expanded">
            <summary>
            The expanded keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ExtraExpanded">
            <summary>
            The extra-expanded keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.UltraExpanded">
            <summary>
            The ultra-expanded keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Bold">
            <summary>
            The bold keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Bolder">
            <summary>
            The bolder keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Lighter">
            <summary>
            The lighter keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Center">
            <summary>
            The center keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Justify">
            <summary>
            The justify keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Underline">
            <summary>
            The underline keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Overline">
            <summary>
            The overline keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.LineThrough">
            <summary>
            The line-through keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Blink">
            <summary>
            The blink keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Solid">
            <summary>
            The solid keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Double">
            <summary>
            The double keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Dotted">
            <summary>
            The dotted keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Dashed">
            <summary>
            The dashed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Wavy">
            <summary>
            The wavy keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Capitalize">
            <summary>
            The capitalize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Uppercase">
            <summary>
            The uppercase keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Lowercase">
            <summary>
            The lowercase keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.FullWidth">
            <summary>
            The full-width keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Baseline">
            <summary>
            The baseline keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Sub">
            <summary>
            The sub keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Super">
            <summary>
            The super keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TextTop">
            <summary>
            The text-top keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.TextBottom">
            <summary>
            The text-bottom keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Middle">
            <summary>
            The middle keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Top">
            <summary>
            The top keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Bottom">
            <summary>
            The bottom keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Pre">
            <summary>
            The pre keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Nowrap">
            <summary>
            The nowrap keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.PreWrap">
            <summary>
            The pre-wrap keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.PreLine">
            <summary>
            The pre-line keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.OpenQuote">
            <summary>
            The open-quote keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NoOpenQuote">
            <summary>
            The no-open-quote keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.CloseQuote">
            <summary>
            The close-quote keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NoCloseQuote">
            <summary>
            The no-close-quote keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Embed">
            <summary>
            The embed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Isolate">
            <summary>
            The isolate keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.IsolateOverride">
            <summary>
            The isolate-override keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.BidiOverride">
            <summary>
            The bidi-override keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Plaintext">
            <summary>
            The plaintext keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Default">
            <summary>
            The default keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ContextMenu">
            <summary>
            The context-menu keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Help">
            <summary>
            The help keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Pointer">
            <summary>
            The pointer keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Progress">
            <summary>
            The progress keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Wait">
            <summary>
            The wait keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Cell">
            <summary>
            The cell keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Crosshair">
            <summary>
            The crosshair keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Text">
            <summary>
            The text keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.VerticalText">
            <summary>
            The vertical-text keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Alias">
            <summary>
            The alias keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Copy">
            <summary>
            The copy keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Move">
            <summary>
            The move keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NoDrop">
            <summary>
            The no-drop keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NotAllowed">
            <summary>
            The not-allowed keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.EastResize">
            <summary>
            The e-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NorthResize">
            <summary>
            The n-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NorthEastResize">
            <summary>
            The ne-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NorthWestResize">
            <summary>
            The nw-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SouthResize">
            <summary>
            The s-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SouthEastResize">
            <summary>
            The se-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SouthWestResize">
            <summary>
            The sw-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.WestResize">
            <summary>
            The w-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.EastWestResize">
            <summary>
            The ew-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NorthSouthResize">
            <summary>
            The ns-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NorthEastSouthWestResize">
            <summary>
            The nesw-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.NorthWestSouthEastResize">
            <summary>
            The nwse-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ColResize">
            <summary>
            The col-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.RowResize">
            <summary>
            The row-resize keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.AllScroll">
            <summary>
            The all-scroll keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ZoomIn">
            <summary>
            The zoom-in keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ZoomOut">
            <summary>
            The zoom-out keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Grab">
            <summary>
            The grab keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Grabbing">
            <summary>
            The grabbing keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Thin">
            <summary>
            The thin keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Medium">
            <summary>
            The medium keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Thick">
            <summary>
            The thick keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Inside">
            <summary>
            The inside keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Outside">
            <summary>
            The outside keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.BorderBox">
            <summary>
            The border-box keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.PaddingBox">
            <summary>
            The padding-box keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.ContentBox">
            <summary>
            The content-box keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Reverse">
            <summary>
            The reverse keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Alternate">
            <summary>
            The alternate keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.AlternateReverse">
            <summary>
            The alternate-reverse keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Ease">
            <summary>
            The ease keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.EaseIn">
            <summary>
            The ease-in keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.EaseOut">
            <summary>
            The ease-out keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.EaseInOut">
            <summary>
            The ease-in-out keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Linear">
            <summary>
            The linear keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.StepStart">
            <summary>
            The step-start keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.StepEnd">
            <summary>
            The step-end keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Disc">
            <summary>
            The disc keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Circle">
            <summary>
            The circle keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Square">
            <summary>
            The square keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Decimal">
            <summary>
            The decimal keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.DecimalLeadingZero">
            <summary>
            The decimal-leading-zero keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.LowerRoman">
            <summary>
            The lower-roman keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.UpperRoman">
            <summary>
            The upper-roman keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.LowerGreek">
            <summary>
            The lower-greek keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.LowerLatin">
            <summary>
            The lower-latin keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.UpperLatin">
            <summary>
            The upper-latin keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Armenian">
            <summary>
            The armenian keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Georgian">
            <summary>
            The georgian keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.LowerAlpha">
            <summary>
            The lower-alpha keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.UpperAlpha">
            <summary>
            The upper-alpha keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.XxSmall">
            <summary>
            The xx-small keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.XSmall">
            <summary>
            The x-small keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Small">
            <summary>
            The small keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Large">
            <summary>
            The large keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.XLarge">
            <summary>
            The x-large keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.XxLarge">
            <summary>
            The xx-large keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Larger">
            <summary>
            The larger keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Smaller">
            <summary>
            The smaller keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.And">
            <summary>
            The and keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Not">
            <summary>
            The not keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Only">
            <summary>
            The only keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Show">
            <summary>
            The show keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Hide">
            <summary>
            The hide keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Invert">
            <summary>
            The invert keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Flat">
            <summary>
            The flat keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Preserve3d">
            <summary>
            The preserve-3d keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.SmallCaps">
            <summary>
            The small-caps keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Slice">
            <summary>
            The slice keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Clone">
            <summary>
            The clone keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Running">
            <summary>
            The running keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Paused">
            <summary>
            The paused keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Infinite">
            <summary>
            The infinite keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Cover">
            <summary>
            The cover keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Contain">
            <summary>
            The contain keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Ltr">
            <summary>
            The ltr keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Rtl">
            <summary>
            The rtl keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.All">
            <summary>
            The all keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Balance">
            <summary>
            The balance keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Separate">
            <summary>
            The separate keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Start">
            <summary>
            The start keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.End">
            <summary>
            The end keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Fill">
            <summary>
            The fill keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Screen">
            <summary>
            The screen keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Print">
            <summary>
            The print keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Speech">
            <summary>
            The speech keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.StyleSheet">
            <summary>
            The stylesheet keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.On">
            <summary>
            The on keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Off">
            <summary>
            The off keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Portrait">
            <summary>
            The portrait keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Landscape">
            <summary>
            The landscape keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Progressive">
            <summary>
            The progressive keyword.
            </summary>
        </member>
        <member name="F:AngleSharp.Keywords.Interlace">
            <summary>
            The interlace keyword.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.PropertyFlags">
            <summary>
            Defines some properties of a CSS property.
            Exclusive maximum is 0x100.
            Inclusive maximum is 0x0FF.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyFlags.None">
            <summary>
            No special properties.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyFlags.Inherited">
            <summary>
            The property can be inherited.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyFlags.Hashless">
            <summary>
            The property supports hashless colors in quirks mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyFlags.Unitless">
            <summary>
            The property supports unitless lengths in quirks mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyFlags.Animatable">
            <summary>
            The property is supported in animations.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyFlags.Shorthand">
            <summary>
            The property is actually a shorthand.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Units">
            <summary>
            A collection of units used in CSS.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Khz">
            <summary>
            Kilohertz.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Hz">
            <summary>
            Hertz.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Ms">
            <summary>
            Milliseconds.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.S">
            <summary>
            Seconds.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Turn">
            <summary>
            Turns.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Rad">
            <summary>
            Radiants.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Grad">
            <summary>
            Grads.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Deg">
            <summary>
            Degrees.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Em">
            <summary>
            Big Ms.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Ex">
            <summary>
            Big Xs.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Cm">
            <summary>
            Centimeters.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Mm">
            <summary>
            Millimeters.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.In">
            <summary>
            Inches.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Px">
            <summary>
            Pixels.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Ch">
            <summary>
            Chars.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Vw">
            <summary>
            Viewport-Width.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Vh">
            <summary>
            Viewport-Height.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Vmin">
            <summary>
            Viewport-Minimum (Width / Height).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Vmax">
            <summary>
            Viewport-Maximum (Width / Height).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Dpi">
            <summary>
            Dots per inch.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Dpcm">
            <summary>
            Dots per centimeter.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Dppx">
            <summary>
            Dots per pixel.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Pt">
            <summary>
            Points.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Rem">
            <summary>
            Remainings.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Units.Pc">
            <summary>
            Pieces.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.AttrExtensions">
            <summary>
            Extensions for the list of attributes.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.AttrExtensions.Has(System.Collections.Generic.List{AngleSharp.DOM.IAttr},System.String)">
            <summary>
            Checks if an attribute with the provided local name is given.
            </summary>
            <param name="attributes">The list of attributes.</param>
            <param name="name">The local name to check for.</param>
            <returns>True if an attribute without a prefix and the given local name exists.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.AttrExtensions.Has(System.Collections.Generic.List{AngleSharp.DOM.IAttr},System.String,System.String)">
            <summary>
            Checks if an attribute with the provided local name and namespace URI is given.
            </summary>
            <param name="attributes">The list of attributes.</param>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <param name="localName">The local name to check for.</param>
            <returns>True if an attribute with the provided namespace and the given local name exists.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.AttrExtensions.Get(System.Collections.Generic.List{AngleSharp.DOM.IAttr},System.String)">
            <summary>
            Gets the attribute with the provided name.
            </summary>
            <param name="attributes">The list of attributes.</param>
            <param name="name">The name to get.</param>
            <returns>The attribute with the name or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.AttrExtensions.Get(System.Collections.Generic.List{AngleSharp.DOM.IAttr},System.String,System.String)">
            <summary>
            Gets the an attribute with the provided local name and namespace URI.
            </summary>
            <param name="attributes">The list of attributes.</param>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <param name="localName">The local name to get.</param>
            <returns>The attribute with the local name and namespace or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.AttrExtensions.AreEqual(System.Collections.Generic.List{AngleSharp.DOM.IAttr},System.Collections.Generic.List{AngleSharp.DOM.IAttr})">
            <summary>
            Compares another attribute container to the current container.
            </summary>
            <param name="sourceAttributes">The original attribute list.</param>
            <param name="targetAttributes">The list of attributes to compare to.</param>
            <returns>True if both objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.AttrExtensions.AddAttribute(AngleSharp.DOM.Element,System.String,System.String)">
            <summary>
            Adds a new attribute if the attribute is not yet created.
            Does not fire the changed event.
            </summary>
            <param name="element">The element that gets a new attribute.</param>
            <param name="name">The name of the attribute as a string.</param>
            <param name="value">The desired new value of the attribute.</param>
        </member>
        <member name="T:AngleSharp.Extensions.CollectionExtensions">
            <summary>
            A bunch of methods for getting DOM elements.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.CollectionExtensions.GetElementById(AngleSharp.DOM.INodeList,System.String)">
            <summary>
            Gets an element by its ID.
            </summary>
            <param name="children">The nodelist to investigate.</param>
            <param name="id">The id to find.</param>
            <returns>The element or NULL.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CollectionExtensions.GetElementsByName(AngleSharp.DOM.INodeList,System.String,System.Collections.Generic.List{AngleSharp.DOM.IElement})">
            <summary>
            Gets a list of HTML elements given by their name attribute.
            </summary>
            <param name="children">The list to investigate.</param>
            <param name="name">The name attribute's value.</param>
            <param name="result">The result collection.</param>
        </member>
        <member name="T:AngleSharp.DOM.Collections.HtmlAllCollection">
            <summary>
            A general collection for all elements of type IElement.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IHtmlAllCollection">
            <summary>
            An HTMLAllCollection is always rooted at document and
            matching all elements. It represents the tree of elements
            in a one-dimensional fashion.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IHtmlCollection">
            <summary>
            HTMLCollection is an interface representing a generic collection (array)
            of elements (in document order) and offers methods and properties for selecting
            from the list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IHtmlCollection.Length">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IHtmlCollection.Item(System.Int32)">
            <summary>
            Gets the specific node at the given zero-based index into the list.
            </summary>
            <param name="index">The zero-based index.</param>
            <returns>Returns null if the index is out of range.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IHtmlCollection.Item(System.String)">
            <summary>
            Gets the specific node whose ID or, as a fallback, name matches the
            string specified by name. Matching by name is only done as a last resort,
            only in HTML, and only if the referenced element supports the name attribute.
            </summary>
            <param name="id">The id or name to match.</param>
            <returns>Returns null if no node exists by the given name.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.HtmlAllCollection.#ctor(AngleSharp.DOM.IDocument)">
            <summary>
            Creates a new live collection for the given document.
            </summary>
            <param name="document">The parent of this collection.</param>
        </member>
        <member name="T:AngleSharp.DOM.Collections.HtmlElementCollection">
            <summary>
            A general collection containing elements of type IElement.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.HtmlElementCollection.#ctor(AngleSharp.DOM.INode,System.Boolean,System.Predicate{AngleSharp.DOM.IElement})">
            <summary>
            Creates a new live collection for the given parent.
            </summary>
            <param name="parent">The parent of this collection.</param>
            <param name="deep">[Optional] Determines if recursive search is activated.</param>
            <param name="predicate">[Optional] The predicate function for picking elements.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.HtmlElementCollection.#ctor(System.Collections.Generic.IEnumerable{AngleSharp.DOM.IElement})">
            <summary>
            Creates a new list of elements.
            </summary>
            <param name="elements">The elements to use.</param>
        </member>
        <member name="T:AngleSharp.DOM.Collections.HtmlFormControlsCollection">
            <summary>
            A specialized collection containing elements of type HTMLFormControlElement.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlFormControlsCollection">
            <summary>
            Represents a collection of HTML form controls.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.NodeIterator">
            <summary>
            The iterator through a collection of DOM nodes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.INodeIterator">
            <summary>
            The NodeIterator interface represents an iterator over the members of a
            list of the nodes in a subtree of the DOM. The nodes will be returned in
            document order.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.INodeIterator.Next">
            <summary>
            Returns the next Node in the document, or null if there are none.
            </summary>
            <returns>The next Node, if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INodeIterator.Previous">
            <summary>
            Returns the previous Node in the document, or null if there are none.
            </summary>
            <returns>The previous Node, if any.</returns>
        </member>
        <member name="P:AngleSharp.DOM.INodeIterator.Root">
            <summary>
            Gets a Node representing the root node as specified when the NodeIterator was created.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INodeIterator.Reference">
            <summary>
            Gets the Node to which the iterator is anchored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INodeIterator.IsBeforeReference">
            <summary>
            Gets an indicator whether the NodeFilter is anchored before the reference node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INodeIterator.Settings">
            <summary>
            Gets a description of the types of nodes that must to be presented. Non-matching nodes are
            skipped, but their children may be included, if relevant.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INodeIterator.Filter">
            <summary>
            Gets the NodeFilter used to select the relevant nodes.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.ElementExtensions">
            <summary>
            Useful methods for element objects.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.LocatePrefix(AngleSharp.DOM.IElement,System.String)">
            <summary>
            Locates the prefix of the given namespace.
            </summary>
            <param name="element">The element that might contain the namespace information.</param>
            <param name="namespaceUri">The url of the namespace.</param>
            <returns>The prefix or null, if the namespace could not be found.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.LocateNamespace(AngleSharp.DOM.IElement,System.String)">
            <summary>
            Locates the namespace of the given prefix.
            </summary>
            <param name="element">The element that might contain the namespace information.</param>
            <param name="prefix">The prefix of the namespace to find.</param>
            <returns>The url of the namespace or null, if the prefix could not be found.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsHovered(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently hovered.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently hovered, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsFocused(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently focused.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently focused, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsEnabled(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently enabled.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently enabled, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsDisabled(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently disabled.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently disabled, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsDefault(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is an input element that is currently in its default state.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently in its default state, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsChecked(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently checked.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently checked, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsIndeterminate(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently in its indeterminate state.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently indeterminate, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsUnchecked(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently unchecked.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently unchecked, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsActive(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is currently active.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is currently active, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsVisited(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element has already been visited.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent has been visited, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsLink(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is a link.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is a link, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsOptional(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is only optional and not required.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is optional, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsRequired(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is required and must be filled out.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is required, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsInvalid(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element does not validate.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is invalid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsValid(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element does validate.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsReadOnly(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is readonly.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is readonly, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsEditable(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is editable.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent can be edited, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsOutOfRange(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element's value is out-of-range.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is invalid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsInRange(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element's value is within the range.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ElementExtensions.IsOnlyChild(AngleSharp.DOM.IElement)">
            <summary>
            Checks if the element is its parent's only child.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True if the elemnent has no siblings, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.Extensions.ParentNodeExtensions">
            <summary>
            Useful methods for parent node objects.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.MutationMacro(AngleSharp.DOM.INode[])">
            <summary>
            Runs the mutation macro as defined in 5.2.2 Mutation methods
            of http://www.w3.org/TR/domcore/.
            </summary>
            <param name="nodes">The nodes array to add.</param>
            <returns>A (single) node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.PrependNodes(AngleSharp.DOM.INode,AngleSharp.DOM.INode[])">
            <summary>
            Prepends nodes to the parent node.
            </summary>
            <param name="parent">The parent, where to prepend to.</param>
            <param name="nodes">The nodes to prepend.</param>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.AppendNodes(AngleSharp.DOM.INode,AngleSharp.DOM.INode[])">
            <summary>
            Appends nodes to parent node.
            </summary>
            <param name="parent">The parent, where to append to.</param>
            <param name="nodes">The nodes to append.</param>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.InsertBefore(AngleSharp.DOM.INode,AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes before the given child.
            </summary>
            <param name="child">The context object.</param>
            <param name="nodes">The nodes to insert before.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.InsertAfter(AngleSharp.DOM.INode,AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes after the given child.
            </summary>
            <param name="child">The context object.</param>
            <param name="nodes">The nodes to insert after.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.ReplaceWith(AngleSharp.DOM.INode,AngleSharp.DOM.INode[])">
            <summary>
            Replaces the given child with the nodes.
            </summary>
            <param name="child">The context object.</param>
            <param name="nodes">The nodes to replace.</param>
        </member>
        <member name="M:AngleSharp.Extensions.ParentNodeExtensions.RemoveFromParent(AngleSharp.DOM.INode)">
            <summary>
            Removes the child from its parent.
            </summary>
            <param name="child">The context object.</param>
        </member>
        <member name="T:AngleSharp.Extensions.QueryExtensions">
            <summary>
            Extensions for performing QuerySelector operations.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.QuerySelector(AngleSharp.DOM.INodeList,System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.QuerySelectorAll(AngleSharp.DOM.INodeList,System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that match the specified group of selectors.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>A HTMLCollection with all elements that match the selection.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.QuerySelectorAll(AngleSharp.DOM.INodeList,AngleSharp.DOM.Css.ISelector)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the selector.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="selector">A selector object.</param>
            <returns>A HTMLCollection with all elements that match the selection.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.GetElementsByClassName(AngleSharp.DOM.INodeList,System.String)">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="classNames">A string representing the list of class names to match; class names are separated by whitespace.</param>
            <returns>A collection of HTML elements.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.GetElementsByTagName(AngleSharp.DOM.INodeList,System.String)">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns>A NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.GetElementsByTagNameNS(AngleSharp.DOM.INodeList,System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="namespaceUri">The namespace URI of elements to look for.</param>
            <param name="localName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <returns>A NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.QuerySelector``1(AngleSharp.DOM.INodeList,AngleSharp.DOM.Css.ISelector)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the given selector.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="selectors">A selector object.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.QuerySelector(AngleSharp.DOM.INodeList,AngleSharp.DOM.Css.ISelector)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="selector">A selector object.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.QuerySelectorAll(AngleSharp.DOM.INodeList,AngleSharp.DOM.Css.ISelector,System.Collections.Generic.List{AngleSharp.DOM.IElement})">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that match the specified group of selectors.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="selector">A selector object.</param>
            <param name="result">A reference to the list where to store the results.</param>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.Contains(AngleSharp.DOM.ITokenList,System.String[])">
            <summary>
            Returns true if the underlying string contains all of the tokens, otherwise false.
            </summary>
            <param name="list">The list that is considered.</param>
            <param name="tokens">The tokens to consider.</param>
            <returns>True if the string contained all tokens, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.GetElementsByClassName(AngleSharp.DOM.INodeList,System.String[],System.Collections.Generic.List{AngleSharp.DOM.IElement})">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="classNames">An array with class names to consider.</param>
            <param name="result">A reference to the list where to store the results.</param>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.GetElementsByTagName(AngleSharp.DOM.INodeList,System.String,System.Collections.Generic.List{AngleSharp.DOM.IElement})">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <param name="result">A reference to the list where to store the results.</param>
        </member>
        <member name="M:AngleSharp.Extensions.QueryExtensions.GetElementsByTagNameNS(AngleSharp.DOM.INodeList,System.String,System.String,System.Collections.Generic.List{AngleSharp.DOM.IElement})">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="elements">The elements to take as source.</param>
            <param name="namespaceUri">The namespace URI of elements to look for.</param>
            <param name="localName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <param name="result">A reference to the list where to store the results.</param>
        </member>
        <member name="T:AngleSharp.DOM.Collections.Range">
            <summary>
            A DOM range to gather DOM tree information.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IRange">
            <summary>
            The Range interface represents a fragment of a document that
            can contain nodes and parts of text nodes in a given document.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IRange.StartWith(AngleSharp.DOM.INode,System.Int32)">
            <summary>
            Selects the start of the given range by using the
            given reference node and a relative offset.
            </summary>
            <param name="refNode">The reference node to use.</param>
            <param name="offset">The offset relative to the reference node.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.EndWith(AngleSharp.DOM.INode,System.Int32)">
            <summary>
            Selects the end of the given range by using the
            given reference node and a relative offset.
            </summary>
            <param name="refNode">The reference node to use.</param>
            <param name="offset">The offset relative to the reference node.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.StartBefore(AngleSharp.DOM.INode)">
            <summary>
            Selects the start of the given range by using an
            inclusive reference node.
            </summary>
            <param name="refNode">The reference node to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.EndBefore(AngleSharp.DOM.INode)">
            <summary>
            Selects the end of the given range by using an
            inclusive reference node.
            </summary>
            <param name="refNode">The reference node to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.StartAfter(AngleSharp.DOM.INode)">
            <summary>
            Selects the start of the given range by using an
            exclusive reference node.
            </summary>
            <param name="refNode">The reference node to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.EndAfter(AngleSharp.DOM.INode)">
            <summary>
            Selects the end of the given range by using an
            exclusive reference node.
            </summary>
            <param name="refNode">The referenced node.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Collapse(System.Boolean)">
            <summary>
            Collapses the range to a single level.
            </summary>
            <param name="toStart">Determines if only the first level should be selected.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Select(AngleSharp.DOM.INode)">
            <summary>
            Selects the contained node.
            </summary>
            <param name="refNode">The node to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.SelectContent(AngleSharp.DOM.INode)">
            <summary>
            Selects the contained nodes by taking
            a reference node as origin.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.ClearContent">
            <summary>
            Clears the contained nodes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IRange.ExtractContent">
            <summary>
            Clears the node representation and returns a document fragment
            with the originally contained nodes.
            </summary>
            <returns>The document fragment containing the nodes.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IRange.CopyContent">
            <summary>
            Creates a document fragement of the contained nodes.
            </summary>
            <returns>The created document fragment.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Insert(AngleSharp.DOM.INode)">
            <summary>
            Inserts a node into the range.
            </summary>
            <param name="node">The node to include.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Surround(AngleSharp.DOM.INode)">
            <summary>
            Includes the given node with its siblings in the range.
            </summary>
            <param name="newParent">The range to surround.</param>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Clone">
            <summary>
            Creates a copy of this range.
            </summary>
            <returns>The copy representing the same range.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Detach">
            <summary>
            Detaches the range from the DOM tree.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Contains(AngleSharp.DOM.INode,System.Int32)">
            <summary>
            Checks if the given node is within this range by using a offset.
            </summary>
            <param name="node">The node to check for.</param>
            <param name="offset">The offset to use.</param>
            <returns>True if the point is within the range, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IRange.CompareBoundaryTo(AngleSharp.DOM.RangeType,AngleSharp.DOM.IRange)">
            <summary>
            Compares the boundary points of the range.
            </summary>
            <param name="how">Determines how these points should be compared.</param>
            <param name="sourceRange">The range of the other boundary points.</param>
            <returns>A relative position.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IRange.CompareTo(AngleSharp.DOM.INode,System.Int32)">
            <summary>
            Compares the node to the given offset and returns the relative position.
            </summary>
            <param name="node">The node to use.</param>
            <param name="offset">The offset to use.</param>
            <returns>The relative position in the range.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IRange.Intersects(AngleSharp.DOM.INode)">
            <summary>
            Checks if the given node is contained in this range.
            </summary>
            <param name="node">The node to check for.</param>
            <returns>True if the node is within the range, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IRange.Head">
            <summary>
            Gets the node that starts the container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IRange.Start">
            <summary>
            Gets the offset of the StartContainer in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IRange.Tail">
            <summary>
            Gets the node that ends the container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IRange.End">
            <summary>
            Gets the offset of the EndContainer in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IRange.IsCollapsed">
            <summary>
            Gets a value that indicates if the representation is collapsed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IRange.CommonAncestor">
            <summary>
            Gets the common ancestor node of the contained range.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.TreeWalker">
            <summary>
            The treewalker for walking through the DOM tree.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ITreeWalker">
            <summary>
            The TreeWalker object represents the nodes of a document subtree and a position within them.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToNext">
            <summary>
            Moves the current Node to the next visible node in the document order, and
            returns the found node. It also moves the current node to this one. If no
            such node exists, returns null and the current node is not changed.
            </summary>
            <returns>The next Node, if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToPrevious">
            <summary>
            Moves the current Node to the previous visible node in the document order, and
            returns the found node. It also moves the current node to this one. If no such
            node exists,or if it is before that the root node defined at the object
            construction, returns null and the current node is not changed.
            </summary>
            <returns>The previous Node, if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToParent">
            <summary>
            Moves the current Node to the first visible ancestor node in the document order,
            and returns the found node. It also moves the current node to this one. If no such
            node exists, or if it is before that the root node defined at the object
            construction, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToFirst">
            <summary>
            Moves the current Node to the first visible child of the current node, and returns
            the found child. It also moves the current node to this child. If no such child
            exists, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToLast">
            <summary>
            Moves the current Node to the last visible child of the current node, and returns
            the found child. It also moves the current node to this child. If no such child
            exists, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToPreviousSibling">
            <summary>
            Moves the current Node to its previous sibling, if any, and returns the found
            sibling. I there is no such node, return null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngleSharp.DOM.ITreeWalker.ToNextSibling">
            <summary>
            Moves the current Node to its next sibling, if any, and returns the found sibling.
            I there is no such node, return null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AngleSharp.DOM.ITreeWalker.Root">
            <summary>
            Gets a Node representing the root node as specified when the TreeWalker was created.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ITreeWalker.Current">
            <summary>
            Gets or sets the Node on which the TreeWalker is currently pointing at.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ITreeWalker.Settings">
            <summary>
            Gets a description of the types of nodes that must to be presented. Non-matching nodes are
            skipped, but their children may be included, if relevant.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ITreeWalker.Filter">
            <summary>
            Gets the NodeFilter used to select the relevant nodes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.KeyboardLocation">
            <summary>
            An enumeration over all possible keyboard locations.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.KeyboardLocation.Standard">
            <summary>
            The standard location.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.KeyboardLocation.Left">
            <summary>
            The left location.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.KeyboardLocation.Right">
            <summary>
            The right location.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.KeyboardLocation.NumPad">
            <summary>
            The location of the numpad.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.MouseButton">
            <summary>
            All possible mouse button values that may appear in UI events.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButton.Primary">
            <summary>
            The primary button of the device. In general, the left button or the only button on single-button
            devices, used to activate a user interface control or select text.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButton.Auxiliary">
            <summary>
            The auxiliary button. In general, the middle button, often combined with a mouse wheel.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButton.Secondary">
            <summary>
            The secondary button. In general, the right button, often used to display a context menu.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.MouseButtons">
            <summary>
            All possible mouse button values that are currently pressed.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButtons.None">
            <summary>
            No buttons currently pressed.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButtons.Primary">
            <summary>
            The primary button of the device. In general, the left button or the only button on single-button
            devices, used to activate a user interface control or select text.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButtons.Secondary">
            <summary>
            The secondary button. In general, the right button, often used to display a context menu.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.MouseButtons.Auxiliary">
            <summary>
            The auxiliary button. In general, the middle button, often combined with a mouse wheel.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.WheelMode">
            <summary>
            Enumeration with the various mouse wheel modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.WheelMode.Pixel">
            <summary>
            The unit of change is pixels.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.WheelMode.Line">
            <summary>
            The unit of change is lines.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.WheelMode.Page">
            <summary>
            The unit of change is pages.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.CustomEvent">
            <summary>
            Represents a custom event that provides an additional details property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.ICustomEvent">
            <summary>
            Represents a custom event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.ICustomEvent.Init(System.String,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Initializes the custom event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="details">Sets the details for the custom event.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.ICustomEvent.Details">
            <summary>
            Gets the details that have been associated with the custom event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.TrackEvent">
            <summary>
            Represents a track that provides an additional track information.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.ITrackEvent">
            <summary>
            Represents the event arguments for a track event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITrackEvent.Track">
            <summary>
            Gets the assigned track object, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.EventFactory">
            <summary>
            Provides string to Event instance creation mappings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.EventFactory.Create(System.String)">
            <summary>
            Creates a new event.
            </summary>
            <param name="name">The name of the event.</param>
            <returns>The created event.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLNoFramesElement">
            <summary>
            Represents a noframes HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLElement">
            <summary>
            Represents a standard HTML element in the node tree.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Element">
            <summary>
            Represents an element node.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Node">
            <summary>
            Represents a node in the generated tree.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.INode">
            <summary>
            A Node is an interface from which a number of DOM types inherit, 
            and allows these various types to be treated similarly.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.INode.Clone(System.Boolean)">
            <summary>
            Clones the Node, and optionally, all of its contents.
            By default, it clones the content of the node.
            </summary>
            <param name="deep">Optionally: Sets if all of the content should be cloned as well.</param>
            <returns>The cloned Node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.IsEqualNode(AngleSharp.DOM.INode)">
            <summary>
            Determines if two nodes are equal.
            </summary>
            <param name="otherNode">The node to be compared to the node that is executing the method.</param>
            <returns>True if the node specified in the otherNode parameter is equal to the current node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.CompareDocumentPosition(AngleSharp.DOM.INode)">
            <summary>
            Compares the position of two nodes in a document.
            </summary>
            <param name="otherNode">The node to be compared to the reference node, which is the node executing the method.</param>
            <returns>The relation between the two nodes.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.Normalize">
            <summary>
            Cleans up all the text nodes under this element, i.e. merges
            adjacent and removes empty text nodes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.INode.Contains(AngleSharp.DOM.INode)">
            <summary>
            Returns true if other is an inclusive descendant of the context object,
            and false otherwise (including when other is null).
            </summary>
            <param name="otherNode">The Node to check the childs for.</param>
            <returns>True if the given node is contained within this Node, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.IsDefaultNamespace(System.String)">
            <summary>
            Indicates whether or not a namespace is the default
            namespace for a document.
            </summary>
            <param name="namespaceUri">The namespace to be compared to the default namespace.</param>
            <returns>True if the given namespace URI is the default for the current document.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.LookupNamespaceUri(System.String)">
            <summary>
            Gets the Uniform Resource Identifier (URI) of the
            namespace associated with a namespace prefix, if any.
            </summary>
            <param name="prefix">The namespace prefix.</param>
            <returns>The URI of the namespace.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.LookupPrefix(System.String)">
            <summary>
            Gets the namespace prefix associated with a Uniform
            Resource Identifier (URI), if any.
            </summary>
            <param name="namespaceUri">The URI.</param>
            <returns>The namespace prefix associated with the URI.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.AppendChild(AngleSharp.DOM.INode)">
            <summary>
            Inserts a Node as the last child node of this element.
            </summary>
            <param name="child">The Node to be appended.</param>
            <returns>The appended Node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.InsertBefore(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Inserts the first Node given in a parameter immediately
            before the second, child of this element, Node
            </summary>
            <param name="newElement">The Node to be inserted.</param>
            <param name="referenceElement">The element that will succeed the new element.</param>
            <returns>The inserted Node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.RemoveChild(AngleSharp.DOM.INode)">
            <summary>
            Removes a child node from the current element, which must
            be a child of the current node.
            </summary>
            <param name="child">The child to be removed.</param>
            <returns>The removed Node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.ReplaceChild(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Replaces one child Node of the current one with the second
            one given in the parameters.
            </summary>
            <param name="newChild">The child to be inserted.</param>
            <param name="oldChild">The child to be removed.</param>
            <returns>The old Node, if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.INode.ToHtml">
            <summary>
            Returns the (complete) HTML markup representation of the node.
            </summary>
            <returns>The source code snippet.</returns>
        </member>
        <member name="P:AngleSharp.DOM.INode.BaseUri">
            <summary>
            Gets a string representing the base URL. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.NodeName">
            <summary>
            Gets a string containing the name of the Node. The structure
            of the name will differ with the name type. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.ChildNodes">
            <summary>
            Gets a live NodeList containing all the children of this
            node. NodeList being live means that if the children of
            the Node change, the NodeList object is automatically updated.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.Owner">
            <summary>
            Gets the Document that this node belongs to. If no document
            is associated with it, returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.ParentElement">
            <summary>
            Gets an Element that is the parent of this node. If the node has
            no parent, or if that parent is not an Element, this property
            returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.Parent">
            <summary>
            Gets a Node that is the parent of this node. If there is no such node,
            like if this node is the top of the tree or if doesn't participate in
            a tree, this property returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.FirstChild">
            <summary>
            Gets a Node representing the first direct child node
            of the node, or null if the node has no child.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.LastChild">
            <summary>
            Gets a Node representing the last direct child node
            of the node, or null if the node has no child.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.NextSibling">
            <summary>
            Gets a Node representing the next node in the tree,
            or null if there isn't such node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.PreviousSibling">
            <summary>
            Gets a Node representing the previous node in the tree,
            or null if there isn't such node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.NodeType">
            <summary>
            Gets an unsigned short representing the type of the node. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.NodeValue">
            <summary>
            Gets or sets a string representing the value of an object. For most Node
            type, this returns null and any set operation is ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.TextContent">
            <summary>
            Gets or sets a string representing the textual content of an element and
            all its descendants.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INode.HasChilds">
            <summary>
            Gets a Boolean indicating if the element has any child nodes, or not.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Node.#ctor(System.String,AngleSharp.DOM.NodeType,AngleSharp.Html.NodeFlags)">
            <summary>
            Constructs a new node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Node.AppendText(System.String)">
            <summary>
            Appends the given characters to the node.
            </summary>
            <param name="s">The characters to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.Node.InsertText(System.Int32,System.String)">
            <summary>
            Inserts the given character in the node.
            </summary>
            <param name="index">The index where to insert.</param>
            <param name="s">The characters to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.Node.AppendChild(AngleSharp.DOM.INode)">
            <summary>
            Adds a child to the collection of children.
            </summary>
            <param name="child">The child to add.</param>
            <returns>The added child.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.InsertChild(System.Int32,AngleSharp.DOM.INode)">
            <summary>
            Inserts a child to the collection of children at the specified index.
            </summary>
            <param name="index">The index where to insert.</param>
            <param name="child">The child to insert.</param>
            <returns>The inserted child.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.InsertBefore(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Inserts the specified node before a reference element as a child of the current node.
            </summary>
            <param name="newElement">The node to insert.</param>
            <param name="referenceElement">The node before which newElement is inserted. If
            referenceElement is null, newElement is inserted at the end of the list of child nodes.</param>
            <returns>The inserted node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.ReplaceChild(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Replaces one child node of the specified element with another.
            </summary>
            <param name="newChild">The new node to replace oldChild. If it already exists in the DOM, it is first removed.</param>
            <param name="oldChild">The existing child to be replaced.</param>
            <returns>The replaced node. This is the same node as oldChild.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.RemoveChild(AngleSharp.DOM.INode)">
            <summary>
            Removes a child from the collection of children.
            </summary>
            <param name="child">The child to remove.</param>
            <returns>The removed child.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.CompareDocumentPosition(AngleSharp.DOM.INode)">
            <summary>
            Compares the position of the current node against another node in any other document.
            </summary>
            <param name="otherNode">The node that's being compared against.</param>
            <returns>The relationship that otherNode has with node, given in a bitmask.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.Contains(AngleSharp.DOM.INode)">
            <summary>
            Indicates whether a node is a descendent of this node.
            </summary>
            <param name="otherNode">The node that's being compared against.</param>
            <returns>The return value is true if otherNode is a descendent of node, or node itself. Otherwise the return value is false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.Normalize">
            <summary>
            Puts the specified node and all of its subtree into a "normalized" form. In a normalized subtree, no text nodes in the
            subtree are empty and there are no adjacent text nodes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Node.LookupNamespaceUri(System.String)">
            <summary>
            Takes a prefix and returns the namespaceURI associated with it on the given node if found (and null if not).
            Supplying null for the prefix will return the default namespace.
            </summary>
            <param name="prefix">The prefix to look for.</param>
            <returns>The namespace URI.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.LookupPrefix(System.String)">
            <summary>
            Returns the prefix for a given namespaceURI if present, and null if not. When multiple prefixes are possible,
            the result is implementation-dependent.
            </summary>
            <param name="namespaceUri">The namespaceURI to lookup.</param>
            <returns>The prefix.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.IsDefaultNamespace(System.String)">
            <summary>
            Accepts a namespace URI as an argument and returns true if the namespace is the default namespace on the given node or false if not.
            </summary>
            <param name="namespaceUri">A string representing the namespace against which the element will be checked.</param>
            <returns>True if the given namespaceURI is the default namespace.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.IsEqualNode(AngleSharp.DOM.INode)">
            <summary>
            Tests whether two nodes are equal.
            </summary>
            <param name="otherNode">The node to compare equality with.</param>
            <returns>True if they are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.LocateNamespace(System.String)">
            <summary>
            Tries to locate the namespace of the given prefix.
            </summary>
            <param name="prefix">The prefix of the namespace.</param>
            <returns>The namespace for the prefix.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.LocatePrefix(System.String)">
            <summary>
            Tries to locate the prefix with the namespace.
            </summary>
            <param name="namespaceUri">The namespace assigned to the prefix.</param>
            <returns>The prefix for the namespace.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.ChangeOwner(AngleSharp.DOM.Document)">
            <summary>
            Adopts the current node for the provided document.
            </summary>
            <param name="document">The new owner of the node.</param>
        </member>
        <member name="M:AngleSharp.DOM.Node.ReplaceAll(AngleSharp.DOM.Node,System.Boolean)">
            <summary>
            Replaces all nodes with the given node, if any.
            </summary>
            <param name="node">The node to insert, if any.</param>
            <param name="suppressObservers">If mutation observers should be surpressed.</param>
        </member>
        <member name="M:AngleSharp.DOM.Node.InsertBefore(AngleSharp.DOM.Node,AngleSharp.DOM.Node,System.Boolean)">
            <summary>
            Inserts the specified node before a reference element as a child of the current node.
            </summary>
            <param name="newElement">The node to insert.</param>
            <param name="referenceElement">The node before which newElement is inserted. If
            referenceElement is null, newElement is inserted at the end of the list of child nodes.</param>
            <param name="suppressObservers">If mutation observers should be surpressed.</param>
            <returns>The inserted node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.RemoveChild(AngleSharp.DOM.Node,System.Boolean)">
            <summary>
            Removes a child from the collection of children.
            </summary>
            <param name="node">The child to remove.</param>
            <param name="suppressObservers">If mutation observers should be surpressed.</param>
        </member>
        <member name="M:AngleSharp.DOM.Node.ReplaceChild(AngleSharp.DOM.Node,AngleSharp.DOM.Node,System.Boolean)">
            <summary>
            Replaces one child node of the specified element with another.
            </summary>
            <param name="node">The new node to replace oldChild. If it already exists in the DOM, it is first removed.</param>
            <param name="child">The existing child to be replaced.</param>
            <param name="suppressObservers">If mutation observers should be surpressed.</param>
            <returns>The replaced node. This is the same node as oldChild.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.FireSimpleEvent(System.String,System.Boolean,System.Boolean)">
            <summary>
            Firing a simple event named e means that a trusted event with the name e,
            which does not bubble (except where otherwise stated) and is not cancelable
            (except where otherwise stated), and which uses the Event interface, must
            be created and dispatched at the given target.
            </summary>
            <param name="eventName">The name of the event to be fired.</param>
            <param name="bubble">Optional parameter to enable bubbling.</param>
            <param name="cancelable">Optional parameter to make it cancelable.</param>
            <returns>True if the element was cancelled, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.HyperRef(System.String)">
            <summary>
            Gets the hyperreference of the given URL -
            transforming the given (relative) URL to an absolute URL
            if required.
            </summary>
            <param name="url">The given URL.</param>
            <returns>The absolute URL.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Node.CopyProperties(AngleSharp.DOM.Node,AngleSharp.DOM.Node,System.Boolean)">
            <summary>
            Copies all (Node) properties of the source to the target.
            </summary>
            <param name="source">The source node.</param>
            <param name="target">The target node.</param>
            <param name="deep">Is a deep-copy required?</param>
        </member>
        <member name="M:AngleSharp.DOM.Node.ToHtml">
            <summary>
            Returns an HTML-code representation of the node.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Node.HasChilds">
            <summary>
            Gets a boolean value indicating whether the current Node 
            has child nodes or not.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.BaseUri">
            <summary>
            Gets or sets the absolute base URI of a node or null if
            unable to obtain an absolute URI.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.NodeType">
            <summary>
            Gets the type of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.NodeValue">
            <summary>
            Gets or sets the value of the current node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.TextContent">
            <summary>
            Gets or sets the text content of a node and its descendants.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.ParentElement">
            <summary>
            Gets or sets the parent element of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.NodeName">
            <summary>
            Gets the tag name for this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.PreviousSibling">
            <summary>
            Gets the node immediately preceding this node's parent's list of nodes, 
            null if the specified node is the first in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.NextSibling">
            <summary>
            Gets the node immediately following this node's parent's list of nodes,
            or null if the current node is the last node in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.FirstChild">
            <summary>
            Gets the first child node of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.LastChild">
            <summary>
            Gets the last child node of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.Flags">
            <summary>
            Gets the flags of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.ChildNodes">
            <summary>
            Gets or sets the children of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.Parent">
            <summary>
            Gets the parent node of this node, which is either an Element node,
            a Document node, or a DocumentFragment node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Node.Owner">
            <summary>
            Gets the owner document of the node.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IElement">
            <summary>
            The Element interface represents an object within a DOM document. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IParentNode">
            <summary>
            Defines the ParentNode interface that is implemented by possible parents.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IParentNode.Append(AngleSharp.DOM.INode[])">
            <summary>
            Appends nodes to current document.
            </summary>
            <param name="nodes">The nodes to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.IParentNode.Prepend(AngleSharp.DOM.INode[])">
            <summary>
            Prepends nodes to the current document.
            </summary>
            <param name="nodes">The nodes to prepend.</param>
        </member>
        <member name="M:AngleSharp.DOM.IParentNode.QuerySelector(System.String)">
            <summary>
            Returns the first element within the document (using depth-first
            pre-order traversal of the document's nodes) that matches the
            specified group of selectors.
            </summary>
            <param name="selectors">The group of selectors to use.</param>
            <returns>The found element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IParentNode.QuerySelectorAll(System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first
            pre-order traversal of the document's nodes) that match the specified
            group of selectors.
            </summary>
            <param name="selectors">The group of selectors to use.</param>
            <returns>A non-live NodeList of element objects.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IParentNode.Children">
            <summary>
            Gets the child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IParentNode.FirstElementChild">
            <summary>
            Gets the first child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IParentNode.LastElementChild">
            <summary>
            Gets the last child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IParentNode.ChildElementCount">
            <summary>
            Gets the number of child elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IChildNode">
            <summary>
            The ChildNode interface contains methods that are
            particular to Node objects that can have a parent.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IChildNode.Before(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes just before the current node.
            </summary>
            <param name="nodes">The nodes to insert.</param>
        </member>
        <member name="M:AngleSharp.DOM.IChildNode.After(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes just after the current node.
            </summary>
            <param name="nodes">The nodes to insert.</param>
        </member>
        <member name="M:AngleSharp.DOM.IChildNode.Replace(AngleSharp.DOM.INode[])">
            <summary>
            Replaces the current node with nodes.
            </summary>
            <param name="nodes">The nodes to insert.</param>
        </member>
        <member name="M:AngleSharp.DOM.IChildNode.Remove">
            <summary>
            Removes the current node.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.INonDocumentTypeChildNode">
            <summary>
            Extensions to ChildNode nodes that are not document type nodes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INonDocumentTypeChildNode.NextElementSibling">
            <summary>
            Gets the Element immediately following this ChildNode in its
            parent's children list, or null if there is no Element in the
            list following this ChildNode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INonDocumentTypeChildNode.PreviousElementSibling">
            <summary>
            Gets the Element immediately prior to this ChildNode in its
            parent's children list, or null if there is no Element in the
            list prior to this ChildNode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IElement.Insert(AngleSharp.DOM.AdjacentPosition,System.String)">
            <summary>
            Inserts new HTML elements specified by the given HTML string at
            a position relative to the current element specified by the position.
            </summary>
            <param name="position">The relation to the current element.</param>
            <param name="html">The HTML code to generate elements for.</param>
        </member>
        <member name="M:AngleSharp.DOM.IElement.HasAttribute(System.String)">
            <summary>
            Returns a boolean value indicating whether the specified element has the specified attribute or not.
            </summary>
            <param name="name">The attributes name.</param>
            <returns>The return value of true or false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.HasAttribute(System.String,System.String)">
            <summary>
            Returns a boolean value indicating whether the specified element has the specified attribute or not.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="localName">The attributes name.</param>
            <returns>The return value of true or false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.GetAttribute(System.String)">
            <summary>
            Returns the value of the named attribute on the specified element.
            </summary>
            <param name="name">The name of the attribute whose value you want to get.</param>
            <returns>If the named attribute does not exist, the value returned will be null, otherwise the attribute's value.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.GetAttribute(System.String,System.String)">
            <summary>
            Returns the value of the named attribute on the specified element.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="localName">The name of the attribute whose value you want to get.</param>
            <returns>If the named attribute does not exist, the value returned will be null, otherwise the attribute's value.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.SetAttribute(System.String,System.String)">
            <summary>
            Adds a new attribute or changes the value of an existing attribute on the specified element.
            </summary>
            <param name="name">The name of the attribute as a string.</param>
            <param name="value">The desired new value of the attribute.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.SetAttribute(System.String,System.String,System.String)">
            <summary>
            Adds a new attribute or changes the value of an existing attribute on the specified element.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="name">The name of the attribute as a string.</param>
            <param name="value">The desired new value of the attribute.</param>
        </member>
        <member name="M:AngleSharp.DOM.IElement.RemoveAttribute(System.String)">
            <summary>
            Removes an attribute from the specified element.
            </summary>
            <param name="name">Is a string that names the attribute to be removed.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.RemoveAttribute(System.String,System.String)">
            <summary>
            Removes an attribute from the specified element.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="localName">Is a string that names the attribute to be removed.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.GetElementsByClassName(System.String)">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="classNames">A string representing the list of class names to match; class names are separated by whitespace.</param>
            <returns>A collection of elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.GetElementsByTagName(System.String)">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns>A collection of elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="namespaceUri">The namespace URI of elements to look for.</param>
            <param name="tagName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <returns>A collection of elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IElement.Matches(System.String)">
            <summary>
            Checks if the element is matched by the given selector.
            </summary>
            <param name="selectors">Represents the selector to test.</param>
            <returns>True if the element would be selected by the specified selector, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IElement.Prefix">
            <summary>
            Gets the namespace prefix of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.LocalName">
            <summary>
            Gets the local part of the qualified name of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.NamespaceUri">
            <summary>
            Gets the namespace URI of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.Attributes">
            <summary>
            Gets the sequence of associated attributes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.ClassList">
            <summary>
            Gets the list of class names.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.ClassName">
            <summary>
            Gets or sets the value of the class attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.Id">
            <summary>
            Gets or sets the id value of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.InnerHtml">
            <summary>
            Gets or sets the inner HTML (excluding the current element) of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.OuterHtml">
            <summary>
            Gets or sets the outer HTML (including the current element) of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IElement.TagName">
            <summary>
            Gets the name of the tag that represents the current element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Element.#ctor(System.String,AngleSharp.Html.NodeFlags)">
            <summary>
            Creates a new element node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Element.QuerySelector(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.QuerySelectorAll(System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that match the specified group of selectors.
            </summary>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>A collection of HTML elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.GetElementsByClassName(System.String)">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="classNames">A string representing the list of class names to match; class names are separated by whitespace.</param>
            <returns>A collection of HTML elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.GetElementsByTagName(System.String)">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns>A NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="namespaceURI">The namespace URI of elements to look for.</param>
            <param name="tagName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <returns>A NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.HasAttribute(System.String)">
            <summary>
            Returns a boolean value indicating whether the specified element has the specified attribute or not.
            </summary>
            <param name="name">The attributes name.</param>
            <returns>The return value of true or false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.HasAttribute(System.String,System.String)">
            <summary>
            Returns a boolean value indicating whether the specified element has the specified attribute or not.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="localName">The attributes name.</param>
            <returns>The return value of true or false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.GetAttribute(System.String)">
            <summary>
            Returns the value of the named attribute on the specified element.
            </summary>
            <param name="name">The name of the attribute whose value you want to get.</param>
            <returns>If the named attribute does not exist, the value returned will be null, otherwise the attribute's value.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.GetAttribute(System.String,System.String)">
            <summary>
            Returns the value of the named attribute on the specified element.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="localName">The name of the attribute whose value you want to get.</param>
            <returns>If the named attribute does not exist, the value returned will be null, otherwise the attribute's value.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.SetAttribute(System.String,System.String)">
            <summary>
            Adds a new attribute or changes the value of an existing attribute on the specified element.
            </summary>
            <param name="name">The name of the attribute as a string.</param>
            <param name="value">The desired new value of the attribute.</param>
        </member>
        <member name="M:AngleSharp.DOM.Element.SetAttribute(System.String,System.String,System.String)">
            <summary>
            Adds a new attribute or changes the value of an existing attribute on the specified element.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="name">The name of the attribute as a string.</param>
            <param name="value">The desired new value of the attribute.</param>
        </member>
        <member name="M:AngleSharp.DOM.Element.RemoveAttribute(System.String)">
            <summary>
            Removes an attribute from the specified element.
            </summary>
            <param name="name">Is a string that names the attribute to be removed.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.RemoveAttribute(System.String,System.String)">
            <summary>
            Removes an attribute from the specified element.
            </summary>
            <param name="namespaceUri">A string specifying the namespace of the attribute.</param>
            <param name="localName">Is a string that names the attribute to be removed.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.Prepend(AngleSharp.DOM.INode[])">
            <summary>
            Prepends nodes to the current node.
            </summary>
            <param name="nodes">The nodes to prepend.</param>
        </member>
        <member name="M:AngleSharp.DOM.Element.Append(AngleSharp.DOM.INode[])">
            <summary>
            Appends nodes to current node.
            </summary>
            <param name="nodes">The nodes to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.Element.Before(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes before the current node.
            </summary>
            <param name="nodes">The nodes to insert before.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.After(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes after the current node.
            </summary>
            <param name="nodes">The nodes to insert after.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.Replace(AngleSharp.DOM.INode[])">
            <summary>
            Replaces the current node with the nodes.
            </summary>
            <param name="nodes">The nodes to replace.</param>
        </member>
        <member name="M:AngleSharp.DOM.Element.Remove">
            <summary>
            Removes the current element from the parent.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Element.Insert(AngleSharp.DOM.AdjacentPosition,System.String)">
            <summary>
            Inserts new HTML elements specified by the given HTML string at
            a position relative to the current element specified by the position.
            </summary>
            <param name="position">The relation to the current element.</param>
            <param name="html">The HTML code to generate elements for.</param>
        </member>
        <member name="M:AngleSharp.DOM.Element.ToHtml">
            <summary>
            Returns an HTML-code representation of the node.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Element.CopyAttributes(AngleSharp.DOM.Element,AngleSharp.DOM.Element)">
            <summary>
            Copies the attributes from the source element to the target element.
            Each attribute will be recreated on the target.
            </summary>
            <param name="source">The source of the attributes.</param>
            <param name="target">The target where to create the attributes.</param>
        </member>
        <member name="P:AngleSharp.DOM.Element.Prefix">
            <summary>
            Gets or sets the namespace prefix of the specified node, or null if no prefix is specified.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.LocalName">
            <summary>
            Gets the local part of the qualified name of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.NamespaceUri">
            <summary>
            Gets the namespace URI of this node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.TextContent">
            <summary>
            Gets or sets the text content of a node and its descendants.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.ClassList">
            <summary>
            Gets the list of class names.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.ClassName">
            <summary>
            Gets or sets the value of the class attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.Id">
            <summary>
            Gets or sets the value of the id attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.TagName">
            <summary>
            Gets the tagname of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.PreviousElementSibling">
            <summary>
            Gets the element immediately preceding in this node's parent's list of nodes, 
            null if the current element is the first element in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.NextElementSibling">
            <summary>
            Gets the element immediately following in this node's parent's list of nodes,
            or null if the current element is the last element in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.ChildElementCount">
            <summary>
            Gets the number of child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.Children">
            <summary>
            Gets the child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.FirstElementChild">
            <summary>
            Gets the first child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.LastElementChild">
            <summary>
            Gets the last child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.InnerHtml">
            <summary>
            Gets or sets the HTML syntax describing the element's descendants.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.OuterHtml">
            <summary>
            Gets or sets the HTML syntax describing the element including its descendants. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.AngleSharp#DOM#IElement#Attributes">
            <summary>
            Gets the sequence of associated attributes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Element.Attributes">
            <summary>
            Gets the associated attribute container.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlElement">
            <summary>
            The HTMLElement interface represents any HTML element. Some elements directly
            implement this interface, other implement it via an interface that inherit it.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.IElementCssInlineStyle">
            <summary>
            Used to mark elements that may have inline style,
            usually set and defined over an attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.IElementCssInlineStyle.Style">
            <summary>
            Gets an object representing the declarations of an element's style attributes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlElement.DoClick">
            <summary>
            Simulates a mouse click on an element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlElement.DoFocus">
            <summary>
            Puts the keyboard focus on the given element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlElement.DoBlur">
            <summary>
            Removes the keyboard focus on the given element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlElement.DoSpellCheck">
            <summary>
            Forces the invocation of a spell check on the content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.Language">
            <summary>
            Gets or sets the value of the lang attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.Title">
            <summary>
            Gets or sets the value of the title attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.Direction">
            <summary>
            Gets or sets the value of the dir attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.Dataset">
            <summary>
            Gets access to all the custom data attributes (data-*) set on the element. It is a map of DOMString,
            one entry for each custom data attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.IsTranslated">
            <summary>
            Gets or sets if the element should be translated.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.TabIndex">
            <summary>
            Gets or sets the position of the element in the tabbing order.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.IsSpellChecked">
            <summary>
            Gets or sets if spell-checking is activated.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.ContentEditable">
            <summary>
            Gets or sets whether or not the element is editable. This enumerated
            attribute can have the values true, false and inherited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.IsContentEditable">
            <summary>
            Gets if the element is currently contenteditable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.IsHidden">
            <summary>
            Gets or sets if the element is hidden.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.IsDraggable">
            <summary>
            Gets or sets if the element is draggable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.AccessKey">
            <summary>
            Gets or sets the access key assigned to the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.AccessKeyLabel">
            <summary>
            Gets the element's assigned access key.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.ContextMenu">
            <summary>
            Gets or sets the assigned context menu.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlElement.DropZone">
            <summary>
            Gets the dropzone for this element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLElement.#ctor(System.String,AngleSharp.Html.NodeFlags)">
            <summary>
            Creates a standard HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLElement.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLElement.GetAssignedForm">
            <summary>
            Gets the assigned form if any (use only on selected elements).
            </summary>
            <returns>The parent form OR assigned form if any.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.IsHidden">
            <summary>
            Gets or sets if the element is hidden.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.ContextMenu">
            <summary>
            Gets or sets the assigned context menu.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.DropZone">
            <summary>
            Gets the dropzone for this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.IsDraggable">
            <summary>
            Gets or sets if the element is draggable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.AccessKey">
            <summary>
            Gets or sets the access key assigned to the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.AccessKeyLabel">
            <summary>
            Gets the element's assigned access key.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.Language">
            <summary>
            Gets or sets the value of the lang attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.Title">
            <summary>
            Gets or sets the value of the title attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.Direction">
            <summary>
            Gets or sets the value of the dir attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.IsSpellChecked">
            <summary>
            Gets or sets if spell-checking is activated.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.TabIndex">
            <summary>
            Gets or sets the position of the element in the tabbing order.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.Dataset">
            <summary>
            Gets access to all the custom data attributes (data-*) set on the element. It is a map of DOMString,
            one entry for each custom data attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.Style">
            <summary>
            Gets an object representing the declarations of an element's style attributes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.ContentEditable">
            <summary>
            Gets or sets whether or not the element is editable. This enumerated
            attribute can have the values true, false and inherited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.IsContentEditable">
            <summary>
            Gets if the element is currently contenteditable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLElement.IsTranslated">
            <summary>
            Gets or sets if the element should be translated.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLNoScriptElement">
            <summary>
            Represents a noscript HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLPlaintextElement">
            <summary>
            The plaintext HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLXmpElement">
            <summary>
            The xmp HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableColgroupElement">
            <summary>
            Represents the HTML column group element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableColumnElement">
            <summary>
            Represents the col HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableColumnElement.Span">
            <summary>
            Gets or sets the number of columns in a group or affected by a grouping.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColgroupElement.Align">
            <summary>
            Gets or sets the value of the horizontal alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColgroupElement.Span">
            <summary>
            Gets or sets the number of columns in a group or affected by a grouping.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColgroupElement.VAlign">
            <summary>
            Gets or sets the value of the vertical alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColgroupElement.Width">
            <summary>
            Gets or sets the value of the width attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.Html.EventFlags">
            <summary>
            A set of flags for an event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventFlags.None">
            <summary>
            No flags are set.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventFlags.StopPropagation">
            <summary>
            Stop propagation has been requested.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventFlags.StopImmediatePropagation">
            <summary>
            Stop immediate propagation has been requested.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventFlags.Canceled">
            <summary>
            The event has been cancelled.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventFlags.Initialized">
            <summary>
            The event has been initialized.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventFlags.Dispatch">
            <summary>
            The event has been dispatched.
            </summary>
        </member>
        <member name="T:AngleSharp.Html.NodeFlags">
            <summary>
            Defines some properties of a node.
            Exclusive maximum is 0x100000000.
            Inclusive maximum is 0x0FFFFFFFF.
            General range: 0x1 to 0x80
            HTML range   : 0x100 to 0x8000
            MathML range : 0x10000 to 0x800000
            SVG range    : 0x1000000 to 0x80000000
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.None">
            <summary>
            No special properties.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.SelfClosing">
            <summary>
            The element is self-closing.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.Special">
            <summary>
            The element is special.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.LiteralText">
            <summary>
            The element has literal text.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.LineTolerance">
            <summary>
            The element may start with an additional free line.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.ImplicitelyClosed">
            <summary>
            The element is implicitely closed.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.ImpliedEnd">
            <summary>
            The end of the element is implied.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.Scoped">
            <summary>
            The element is opening a scope.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlMember">
            <summary>
            The element is part of the HTML namespace.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlTip">
            <summary>
            The element is an HTML text integration point.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlFormatting">
            <summary>
            The element is an HTML formatting element.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlListScoped">
            <summary>
            The element is opening a list scope.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlSelectScoped">
            <summary>
            The element is opening a select scope.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlTableSectionScoped">
            <summary>
            The element is opening a table section scope.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.HtmlTableScoped">
            <summary>
            The element is opening a table scope.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.MathMember">
            <summary>
            The element is part of the MathML namespace.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.MathTip">
            <summary>
            The element is an MathML text integration point.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.SvgMember">
            <summary>
            The element is part of the SVG namespace.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.NodeFlags.SvgTip">
            <summary>
            The element is an SVG text integration point.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.UnitExtensions">
            <summary>
            Extensions for CSS unit types.
            </summary>
        </member>
        <member name="T:AngleSharp.ITextSource">
            <summary>
            The interface for streaming through source codes.
            </summary>
        </member>
        <member name="M:AngleSharp.ITextSource.ReadCharacter">
            <summary>
            Reads the next character from the buffer or underlying stream, if any.
            </summary>
            <returns>The next character.</returns>
        </member>
        <member name="M:AngleSharp.ITextSource.ReadCharacterAsync(System.Threading.CancellationToken)">
            <summary>
            Reads the next character from the buffer or underlying stream asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The task resulting in the next character.</returns>
        </member>
        <member name="M:AngleSharp.ITextSource.InsertText(System.String)">
            <summary>
            Inserts the given content at the current insertation mark.
            The insertation mark won't be changed.
            </summary>
            <param name="content">The content to insert.</param>
        </member>
        <member name="M:AngleSharp.ITextSource.ReadCharacters(System.Int32)">
            <summary>
            Reads the upcoming numbers of characters from the buffer or underlying stream, if any.
            </summary>
            <param name="characters">The number of characters to read.</param>
            <returns>The string with the next characters.</returns>
        </member>
        <member name="M:AngleSharp.ITextSource.ReadCharactersAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Reads the upcoming numbers of characters from the buffer or underlying stream asynchronously.
            </summary>
            <param name="characters">The number of characters to read.</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The task that returns the string with the next characters.</returns>
        </member>
        <member name="M:AngleSharp.ITextSource.Prefetch(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Prefetches the given number of characters, without changing the index.
            </summary>
            <param name="length">The number of bytes to prefetch.</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The running prefetch task.</returns>
        </member>
        <member name="P:AngleSharp.ITextSource.CurrentEncoding">
            <summary>
            Gets or sets the encoding to use.
            </summary>
        </member>
        <member name="P:AngleSharp.ITextSource.Index">
            <summary>
            Gets or sets the current index of the insertation and read point.
            </summary>
        </member>
        <member name="P:AngleSharp.ITextSource.Length">
            <summary>
            Gets the length of the text buffer.
            </summary>
        </member>
        <member name="P:AngleSharp.ITextSource.Item(System.Int32)">
            <summary>
            Gets the character at the given position in the text buffer.
            </summary>
            <param name="index">The index of the character.</param>
            <returns>The character.</returns>
        </member>
        <member name="T:AngleSharp.Css.ITransform">
            <summary>
            Functionality for computing transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.ITransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.Css.ITransform.ToCss">
            <summary>
            Returns the CSS representation of the object.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.NodeFilter">
            <summary>
            The signature for a NodeFilter callback function.
            </summary>
            <param name="node">The node to examine.</param>
            <returns>The result after the examination of the node.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Collections.OptionsCollection">
            <summary>
            A collection specialized on IHtmlOptionElement elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlOptionsCollection">
            <summary>
            Represents a collection of HTML option elements.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlOptionsCollection.GetOptionAt(System.Int32)">
            <summary>
            Gets an HTML option element at the specified index.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>The option at the given position.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlOptionsCollection.SetOptionAt(System.Int32,AngleSharp.DOM.Html.IHtmlOptionElement)">
            <summary>
            Sets an HTML option element at the specified index.
            </summary>
            <param name="index">The index of the element.</param>
            <param name="option">The option to set at the given position.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlOptionsCollection.Add(AngleSharp.DOM.Html.IHtmlOptionElement,AngleSharp.DOM.Html.IHtmlElement)">
            <summary>
            Adds an option element to the collection.
            </summary>
            <param name="element">The element to add.</param>
            <param name="before">The optional reference element for inserting.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlOptionsCollection.Add(AngleSharp.DOM.Html.IHtmlOptionsGroupElement,AngleSharp.DOM.Html.IHtmlElement)">
            <summary>
            Adds an options group element to the collection.
            </summary>
            <param name="element">The element to add.</param>
            <param name="before">The optional reference element for inserting.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlOptionsCollection.Remove(System.Int32)">
            <summary>
            Removes an element from the collection.
            </summary>
            <param name="index">The index of the element of remove.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionsCollection.SelectedIndex">
            <summary>
            Gets or sets the selected index.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.SettableTokenList">
            <summary>
            A list of tokens that can be modified.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.TokenList">
            <summary>
            A simple list of tokens that is immutable.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ITokenList">
            <summary>
            This type represents a set of space-separated tokens. 
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.ITokenList.Contains(System.String)">
            <summary>
            Returns true if the underlying string contains a token, otherwise false.
            </summary>
            <param name="token">The token to search for.</param>
            <returns>The result of the search.</returns>
        </member>
        <member name="M:AngleSharp.DOM.ITokenList.Add(System.String[])">
            <summary>
            Adds some tokens to the underlying string.
            </summary>
            <param name="tokens">A list of tokens to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.ITokenList.Remove(System.String[])">
            <summary>
            Remove some tokens from the underlying string.
            </summary>
            <param name="tokens">A list of tokens to remove.</param>
        </member>
        <member name="M:AngleSharp.DOM.ITokenList.Toggle(System.String,System.Boolean)">
            <summary>
            Removes the specified token from string and returns false.
            If token doesn't exist it's added and the function returns true.
            </summary>
            <param name="token">The token to toggle.</param>
            <param name="force"></param>
            <returns>True if the token has been added, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.ITokenList.Length">
            <summary>
            Gets the number of contained tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ITokenList.Item(System.Int32)">
            <summary>
            Gets an item in the list by its index.
            </summary>
            <param name="index">The index of the item.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.#ctor(System.String)">
            <summary>
            Creates a new list of tokens.
            </summary>
            <param name="value">The initial value, if any.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.Contains(System.String)">
            <summary>
            Returns true if the underlying string contains token, otherwise false.
            </summary>
            <param name="token">The token to consider.</param>
            <returns>True if the string contained the token, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.Remove(System.String[])">
            <summary>
            Removes tokens from the underlying string.
            </summary>
            <param name="tokens">The tokens to remove.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.Add(System.String[])">
            <summary>
            Adds tokens to the underlying string.
            </summary>
            <param name="tokens">The tokens to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.Toggle(System.String,System.Boolean)">
            <summary>
            Removes token from string and returns false. If token doesn't exist it's added and the function returns true.
            </summary>
            <param name="token">The token to consider.</param>
            <param name="force">Forces the element to stay, if it is already added.</param>
            <returns>True if the string contained the token, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.Update(System.String)">
            <summary>
            Updates the DOMTokenList with the given value.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.RaiseChanged">
            <summary>
            Sets the current value of the attribute.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the strings in the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the tokens.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the strings in the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the tokens.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.TokenList.ToString">
            <summary>
            Returns an HTML-code representation of the token list.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.TokenList.Length">
            <summary>
            Gets the number of tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Collections.TokenList.Item(System.Int32)">
            <summary>
            Gets an item in the list by its index.
            </summary>
            <param name="index">The index of the token.</param>
            <returns>The token at the specified index.</returns>
        </member>
        <member name="T:AngleSharp.DOM.ISettableTokenList">
            <summary>
            The same as TokenList, except that it allows the
            underlying string to be directly changed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ISettableTokenList.Value">
            <summary>
            Gets or sets the underlying string.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.SettableTokenList.#ctor(System.String)">
            <summary>
            Creates a new list of tokens.
            </summary>
            <param name="value">The initial value, if any.</param>
        </member>
        <member name="P:AngleSharp.DOM.Collections.SettableTokenList.Value">
            <summary>
            Gets or sets the value of the token list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.FilterResult">
            <summary>
            An enumeration that contains the valid results of examining a node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterResult.Accept">
            <summary>
            The Node is accepted.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterResult.Reject">
            <summary>
            The Node (and its children) are rejected.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterResult.Skip">
            <summary>
            The Node is skipped. Children are still considered.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.FilterSettings">
            <summary>
            The enumeration with the flags for setting the NodeIterator.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.All">
            <summary>
            All nodes will be considered.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Element">
            <summary>
            Elements will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Attribute">
            <summary>
            Attributes will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Text">
            <summary>
            Text nodes will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.CharacterData">
            <summary>
            CData sections will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.EntityReference">
            <summary>
            EntityReferences will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Entity">
            <summary>
            Entities will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.ProcessingInstruction">
            <summary>
            ProcessingInstructions will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Comment">
            <summary>
            Comments will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Document">
            <summary>
            Documents will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.DocumentType">
            <summary>
            DocumentTypes will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.DocumentFragment">
            <summary>
            DocumentFragments will be shown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.FilterSettings.Notation">
            <summary>
            Notations will be shown.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.MediaControllerPlaybackState">
            <summary>
            An enumeration over the various playback states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaControllerPlaybackState.Waiting">
            <summary>
            Waiting for the media to be ready.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaControllerPlaybackState.Playing">
            <summary>
            Playing the current media.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaControllerPlaybackState.Ended">
            <summary>
            The media has already finished playing.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.MediaErrorCode">
            <summary>
            Enumeration with the various media error codes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaErrorCode.Aborted">
            <summary>
            The transfer has been aborted.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaErrorCode.Network">
            <summary>
            The network is unreachable.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaErrorCode.Decode">
            <summary>
            The decoding process failed.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaErrorCode.SourceNotSupported">
            <summary>
            The source format is not supported.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.MediaNetworkState">
            <summary>
            An enumeration of possible network states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaNetworkState.Empty">
            <summary>
            The element has not yet been initialized.
            Everything is in initial state.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaNetworkState.Idle">
            <summary>
            The element's resource selection alg. is active.
            No network usage at the moment, but nothing
            loaded.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaNetworkState.Loading">
            <summary>
            The download is in progress.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaNetworkState.NoSource">
            <summary>
            The element's resource selection alg. is active,
            but has not yet found a resource to use.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.MediaReadyState">
            <summary>
            An enumeration of media ready states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaReadyState.Nothing">
            <summary>
            No information is available.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaReadyState.Metadata">
            <summary>
            Enough information obtained such that the duration of the
            resource is available.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaReadyState.CurrentData">
            <summary>
            Data for immediate playback is available, but not enough
            to advance.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaReadyState.FutureData">
            <summary>
            Enough data for the current and further positions are 
            available.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.MediaReadyState.EnoughData">
            <summary>
            All conditions are met and playback should immediately
            execute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.SimpleChoice">
            <summary>
            Contains simple choices.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.SimpleChoice.Yes">
            <summary>
            Yes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.SimpleChoice.No">
            <summary>
            No.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.TextTrackMode">
            <summary>
            The modes of a text track.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.TextTrackMode.Disabled">
            <summary>
            The text track is disabled.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.TextTrackMode.Hidden">
            <summary>
            The text track is hidden.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Media.TextTrackMode.Showing">
            <summary>
            The text track is actually shown.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.TrackReadyState">
            <summary>
            An enumeration with track ready state values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.TrackReadyState.None">
            <summary>
            Not initialized yet.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.TrackReadyState.Loading">
            <summary>
            Currently loading.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.TrackReadyState.Loaded">
            <summary>
            Loading finished.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.TrackReadyState.Error">
            <summary>
            An error occured.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Visibility">
            <summary>
            An enumeration with the various visibility states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Visibility.Visible">
            <summary>
            Default value, the box is visible.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Visibility.Hidden">
            <summary>
            The box is invisible (fully transparent, nothing is drawn),
            but still affects layout. 
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Visibility.Collapse">
            <summary>
            For table rows, columns, column groups, and row groups the
            row(s) or column(s) are hidden and the space they would have
            occupied is removed (as if display: none were applied to the
            column/row of the table). However, the size of other rows and
            columns is still calculated as though the cells in the collapsed
            row(s) or column(s) are present. This was designed for fast
            removal of a row/column from a table without having to recalculate
            widths and heights for every portion of the table. For XUL elements,
            the computed size of the element is always zero, regardless of other
            styles that would normally affect the size, although margins still
            take effect. For other elements, collapse is treated the same as hidden.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.AnimationDirection">
            <summary>
            The enumeration over all possible animation direction values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationDirection.Normal">
            <summary>
            The animation should play forward each cycle.
            In other words, each time the animation cycles,
            the animation will reset to the beginning state
            and start over again. This is the default
            animation direction setting.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationDirection.Alternate">
            <summary>
            The animation should reverse direction each cycle.
            When playing in reverse, the animation steps are
            performed backward. In addition, timing functions
            are also reversed; for example, an ease-in animation
            is replaced with an ease-out animation when played
            in reverse. The count to determine if it is an even
            or an odd iteration starts at one.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationDirection.Reverse">
            <summary>
            The animation plays backward each cycle. Each time
            the animation cycles, the animation resets to the
            end state and start over again.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationDirection.AlternateReverse">
            <summary>
            The animation plays backward on the first
            play-through, then forward on the next, then
            continues to alternate. The count to determinate
            if it is an even or an odd iteration starts at one.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.AnimationFillStyle">
            <summary>
            An enumeration over all possible fill-mode values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationFillStyle.None">
            <summary>
            The animation will not apply any styles to the
            target before or after it is executing.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationFillStyle.Forwards">
            <summary>
            The target will retain the computed values set by
            the last keyframe encountered during execution. The
            last keyframe encountered depends on the direction
            and the number of iterations.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationFillStyle.Backwards">
            <summary>
            The animation will apply the values defined in the
            first relevant keyframe as soon as it is applied to
            the target, and retain this during the delayed period.
            The first relevant keyframe depends of the value of
            the direction.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.AnimationFillStyle.Both">
            <summary>
            The animation will follow the rules for both forwards
            and backwards, thus extending the animation properties
            in both directions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.BackgroundAttachment">
            <summary>
            An enumeration with all background attachment settings.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundAttachment.Fixed">
            <summary>
            This keyword means that the background is fixed with regard to the viewport.
            Even if an element has a scrolling mechanism, a ‘fixed’ background doesn't
            move with the element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundAttachment.Local">
            <summary>
            This keyword means that the background is fixed with regard to the element's
            contents: if the element has a scrolling mechanism, the background scrolls
            with the element's contents, and the background painting area and background
            positioning area are relative to the scrollable area of the element rather
            than to the border framing them.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundAttachment.Scroll">
            <summary>
            This keyword means that the background is fixed with regard to the element
            itself and does not scroll with its contents. (It is effectively attached
            to the element's border.)
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.BorderRepeat">
            <summary>
            The enumeration over all possible border repeat values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BorderRepeat.Stretch">
            <summary>
            Keyword indicating that the image must be stretched to fill
            the gap between the two borders.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BorderRepeat.Repeat">
            <summary>
            Keyword indicating that the image must be repeated until it
            fills the gap between the two borders.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BorderRepeat.Round">
            <summary>
            Keyword indicating that the image must be repeated until it
            fills the gap between the two borders. If the image doesn't fit
            after being repeated an integral number of times, the image is
            rescaled to fit.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.BreakMode">
            <summary>
            An enumeration over all possible break modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Auto">
            <summary>
            Initial value. Allows, meaning neither forbid nor force, any break
            (either page, column or region) to be be inserted before (after, inside)
            the principle box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Always">
            <summary>
            Always force page breaks before (after) the principle box. This is a
            synonym of page, it has been kept to facilitate transition from
            page-break-before which is subset of this property.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Avoid">
            <summary>
            Prevent any break, either page, column or region, to be inserted right
            before (after, inside) the principle box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Left">
            <summary>
            Force one or two page breaks right before (after) the principle box so
            that the next page is formatted as a left page.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Right">
            <summary>
            Force one or two page breaks right before (after) the principle box so
            that the next page is formatted as a right page.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Page">
            <summary>
            Always force one page break right before (after) the principle box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.Column">
            <summary>
            Always force one column break right before (after) the principle box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.AvoidPage">
            <summary>
            Avoid any page break right before (after, inside) the principle box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.AvoidColumn">
            <summary>
            Avoid any column break right before (after, inside) the principle box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BreakMode.AvoidRegion">
            <summary>
            Avoid a region break before (after, inside) the generated box.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.BoxModel">
            <summary>
            An enumeration with the various box sizing models / clip or origins.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BoxModel.BorderBox">
            <summary>
            The background extends to the outside edge of the border (but underneath the border in z-ordering).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BoxModel.PaddingBox">
            <summary>
            No background is drawn below the border (background extends to the outside edge of the padding).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BoxModel.ContentBox">
            <summary>
            The background is painted within (clipped to) the content box.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ClearMode">
            <summary>
            The enumeration with all possible clear modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ClearMode.None">
            <summary>
            The element is not moved down to clear past floating elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ClearMode.Left">
            <summary>
            The element is moved down to clear past left floats.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ClearMode.Right">
            <summary>
            The element is moved down to clear past right floats.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ClearMode.Both">
            <summary>
            The element is moved down to clear past both left and right floats.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.DisplayMode">
            <summary>
            A list of all pre-defined display settings.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.None">
            <summary>
            Turns off the display of an element (it has no effect on layout);
            all descendant elements also have their display turned off. The
            document is rendered as though the element did not exist.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.Inline">
            <summary>
            The element generates one or more inline element boxes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.Block">
            <summary>
            The element generates a block element box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.ListItem">
            <summary>
            The element generates a block box for the content and a separate
            list-item inline box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.InlineBlock">
            <summary>
            The element generates a block element box that will be flowed with
            surrounding content as if it were a single inline box (behaving much
            like a replaced element would).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.InlineTable">
            <summary>
            he inline-table value does not have a direct mapping in HTML. It
            behaves like a table HTML element, but as an inline box, rather than
            a block-level box. Inside the table box is a block-level context.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.Table">
            <summary>
            Behaves like the table HTML element. It defines a block-level box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableCaption">
            <summary>
            Behaves like the caption HTML element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableCell">
            <summary>
            Behaves like the td HTML element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableColumn">
            <summary>
            These elements behave like the corresponding col HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableColumnGroup">
            <summary>
            These elements behave like the corresponding colgroup HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableFooterGroup">
            <summary>
            These elements behave like the corresponding tfoot HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableHeaderGroup">
            <summary>
            These elements behave like the corresponding thead HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableRow">
            <summary>
            Behaves like the tr HTML element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.TableRowGroup">
            <summary>
            These elements behave like the corresponding tbody HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.Flex">
            <summary>
            The element behaves like a block element and lays out its content
            according to the flexbox model.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.InlineFlex">
            <summary>
            The element behaves like an inline element and lays out its content
            according to the flexbox model.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.Grid">
            <summary>
            The element behaves like a block element and lay out its content
            according to the grid model.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.DisplayMode.InlineGrid">
            <summary>
            The element behaves like an inline element and lay out its content
            according to the grid model.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.Floating">
            <summary>
            All possible values for taking an element out of its normal flow.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Floating.None">
            <summary>
            Indicates that the element must not float.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Floating.Left">
            <summary>
            Indicates that the element must float on the left side of its containing block.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Floating.Right">
            <summary>
            Indicates that the element must float on the right side of its containing block.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.FontSize">
            <summary>
            A listing of all possible pre-defined font-sizes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Custom">
            <summary>
            A custom font-size.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Tiny">
            <summary>
            Absolute xx-small.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Little">
            <summary>
            Absolute x-small.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Smaller">
            <summary>
            Smaller than the parent's font size.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Small">
            <summary>
            Absolute small.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Medium">
            <summary>
            Absolute medium.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Large">
            <summary>
            Absolute large.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Larger">
            <summary>
            Larger than the parent's font size.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Big">
            <summary>
            Absolute x-large.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontSize.Huge">
            <summary>
            Absolute xx-large.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.FontStretch">
            <summary>
            An enumeration with possible font stretch settings.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.Normal">
            <summary>
            Specifies a normal font face.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.UltraCondensed">
            <summary>
            Specifies a font face most condensed.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.ExtraCondensed">
            <summary>
            Specifies a font face a lot more condensed than normal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.Condensed">
            <summary>
            Specifies a font face more condensed than normal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.SemiCondensed">
            <summary>
            Specifies a font face a little more condensed than normal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.SemiExpanded">
            <summary>
            Specifies a font face a little more expanded than normal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.Expanded">
            <summary>
            Specifies a font face more expanded than normal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.ExtraExpanded">
            <summary>
            Specifies a font face more expanded than normal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStretch.UltraExpanded">
            <summary>
            Specifies a font face most expanded.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.FontStyle">
            <summary>
            The enumeration with the various font styles.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStyle.Normal">
            <summary>
            Selects a font that is classified as normal within a font-family.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStyle.Italic">
            <summary>
            Selects a font that is labeled italic, if that is not available, one labeled oblique.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontStyle.Oblique">
            <summary>
            Selects a font that is labeled oblique.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.FontVariant">
            <summary>
            An enumeration with font variant transformations.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontVariant.Normal">
            <summary>
            Specifies a normal font face.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.FontVariant.SmallCaps">
            <summary>
            Specifies a font that is labeled as a small-caps font. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ListPosition">
            <summary>
            An enumeration over all list positions.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListPosition.Inside">
            <summary>
            The marker box is the first inline box in the principal
            block box, after which the element's content flows.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListPosition.Outside">
            <summary>
            The marker box is outside the principal block box.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ListStyle">
            <summary>
            An enumeration over possible list styles.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.None">
            <summary>
            No list style at all.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.Disc">
            <summary>
            A filled circle (default value)
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.Circle">
            <summary>
            A hollow circle
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.Square">
            <summary>
            A filled square
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.Decimal">
            <summary>
            Han decimal numbers, Beginning with 1.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.DecimalLeadingZero">
            <summary>
            Decimal numbers, Padded by initial zeros, E.g. 01, 02, 03, ... 98, 99
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.LowerRoman">
            <summary>
            Lowercase roman numerals, E.g.i, ii, iii, iv, v, ...
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.UpperRoman">
            <summary>
            Uppercase roman numerals, E.g.I, II, III, IV, V ...
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.LowerGreek">
            <summary>
            Lowercase classical Greek, alpha, beta, gamma…, E.g.α, β, γ ...
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.LowerLatin">
            <summary>
            Lowercase ASCII letters, E.g.a, b, c, ... z
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.UpperLatin">
            <summary>
            Uppercase ASCII letters, E.g.A, B, C, ... Z
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.Armenian">
            <summary>
            Traditional Armenian numbering, (ayb/ayp, ben/pen, gim/keem ... )
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.ListStyle.Georgian">
            <summary>
            Traditional Georgian numbering, E.g.an, ban, gan, ... he, tan, in…
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.LineStyle">
            <summary>
            An enumeration with all possible line styles.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.None">
            <summary>
            No outline (outline-width is 0).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Hidden">
            <summary>
            Same as 'none', except in terms of border conflict resolution for table elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Dotted">
            <summary>
            The outline is a series of dots.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Dashed">
            <summary>
            The outline is a series of short line segments.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Solid">
            <summary>
            The outline is a single line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Double">
            <summary>
            The outline is two single lines. The outline-width is the sum of the two lines and the space between them.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Groove">
            <summary>
            The outline looks as though it were carved into the canvas.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Ridge">
            <summary>
            The opposite of groove: the outline looks as though it were coming out of the canvas.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Inset">
            <summary>
            The outline makes the box look as though it were embeded in the canvas.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.LineStyle.Outset">
            <summary>
            The opposite of inset: the outline makes the box look as though it were coming out of the canvas.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.PlayState">
            <summary>
            An enumeration over all various play states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PlayState.Running">
            <summary>
            The animation is currently playing.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.PlayState.Paused">
            <summary>
            The animation is currently paused.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.BackgroundRepeat">
            <summary>
            The enumeration over all possible repeat values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundRepeat.Repeat">
            <summary>
            The image is repeated in the given direction as much as needed to cover the whole
            background image painting area. The last image may be clipped if the whole thing
            won't fit in the remaining area.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundRepeat.Space">
            <summary>
            The image is repeated in the given direction as much as needed to cover most of
            the background image painting area, without clipping an image. The remaining
            non-covered space is spaced out evenly between the images. The first and last
            images touches the edge of the element. The value of the background-position CSS
            property is ignored for the concerned direction, except if one single image is
            greater than the background image painting area, which is the only case where an
            image can be clipped when the space value is used.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundRepeat.Round">
            <summary>
            The image is repeated in the given direction as much as needed to cover most of
            the background image painting area, without clipping an image. If it doesn't cover
            exactly the area, the tiles are resized in that direction in order to match it.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.BackgroundRepeat.NoRepeat">
            <summary>
            The image is not repeated (and hence the background image painting area will not
            necessarily been entirely covered). The position of the non-repeated background
            image is defined by the background-position CSS property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.SystemCursor">
            <summary>
            A list of all pre-defined system cursor modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Default">
            <summary>
            Default cursor, typically an arrow.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.None">
            <summary>
            No cursor is rendered.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.ContextMenu">
            <summary>
            A context menu is available under the cursor.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Help">
            <summary>
            Indicating help is available.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Pointer">
            <summary>
            E.g. used when hovering over links, typically a hand.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Progress">
            <summary>
            The program is busy in the background but the user can
            still interact with the interface (unlike for wait).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Wait">
            <summary>
            The program is busy (sometimes an hourglass or a watch).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Cell">
            <summary>
            Indicating that cells can be selected.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Crosshair">
            <summary>
            Cross cursor, often used to indicate selection in a bitmap.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Text">
            <summary>
            Indicating text can be selected, typically an I-beam.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.VerticalText">
            <summary>
            Indicating that vertical text can be selected, typically
            a sideways I-beam.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Alias">
            <summary>
            Indicating an alias or shortcut is to be created.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Copy">
            <summary>
            Indicating that something can be copied.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Move">
            <summary>
            The hovered object may be moved.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NoDrop">
            <summary>
            Cursor showing that a drop is not allowed at the current location.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NotAllowed">
            <summary>
            Cursor showing that something cannot be done.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.EResize">
            <summary>
            Moves the right edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NResize">
            <summary>
            Moves the top edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NeResize">
            <summary>
            Moves the top right edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NwResize">
            <summary>
            Moves the top left  edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.SResize">
            <summary>
            Moves the bottom edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.SeResize">
            <summary>
            Moves the bottom right edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.SwResize">
            <summary>
            Moves the bottom left edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.WResize">
            <summary>
            Moves the left edge.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.EwResize">
            <summary>
            Indicates a bidirectional resize cursor.
            Left to right.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NsResize">
            <summary>
            Indicates a bidirectional resize cursor.
            Top to bottom.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NeswResize">
            <summary>
            Indicates a bidirectional resize cursor.
            Right top to left bottom.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.NwseResize">
            <summary>
            Indicates a bidirectional resize cursor.
            Left top to right bottom.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.ColResize">
            <summary>
            The item/column can be resized horizontally. Often rendered as arrows
            pointing left and right with a vertical bar separating.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.RowResize">
            <summary>
            The item/row can be resized vertically. Often rendered as arrows
            pointing up and down with a horizontal bar separating them.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.AllScroll">
            <summary>
            Cursor showing that something can be scrolled in any direction (panned).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.ZoomIn">
            <summary>
            Indicates that something can be zoomed (magnified) in.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.ZoomOut">
            <summary>
            Indicates that something can be zoomed (magnified) out.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Grab">
            <summary>
            Indicates that something can be grabbed.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemCursor.Grabbing">
            <summary>
            Indicates that something can be dragged to be moved.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.SystemFont">
            <summary>
            An enumeration containing the various predefined system fonts.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemFont.Caption">
            <summary>
            The font used for captioned controls (e.g., buttons, drop-downs, etc.).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemFont.Icon">
            <summary>
            The font used to label icons.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemFont.Menu">
            <summary>
            The font used in menus (e.g., dropdown menus and menu lists).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemFont.MessageBox">
            <summary>
            The font used in dialog boxes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemFont.SmallCaption">
            <summary>
            The font used for labeling small controls.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.SystemFont.StatusBar">
            <summary>
            The font used in window status bars.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.TextDecorationLine">
            <summary>
            An enumeration that defines the various line styles.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationLine.Underline">
            <summary>
            Each line of text is underlined.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationLine.Overline">
            <summary>
            Each line of text has a line above it.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationLine.LineThrough">
            <summary>
            Each line of text has a line through the middle.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationLine.Blink">
            <summary>
            The text blinks (alternates between visible and invisible). Conforming user agents may simply not blink the text.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.TextDecorationStyle">
            <summary>
            An enumeration with the various text decoration styles.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationStyle.Solid">
            <summary>
            Draws a single line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationStyle.Double">
            <summary>
            Draws a double line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationStyle.Dotted">
            <summary>
            Draws a dotted line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationStyle.Dashed">
            <summary>
            Draws a dashed line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextDecorationStyle.Wavy">
            <summary>
            Draws a wavy line.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.TextTransform">
            <summary>
            An enumeration with all possible text transformations.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextTransform.None">
            <summary>
            Is a keyword preventing the case of all characters to be changed.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextTransform.Capitalize">
            <summary>
            Is a keyword forcing the first letter of each word to be converted
            to uppercase. Other characters are unchanged; that is, they retain
            their original case as written in the element's text.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextTransform.Uppercase">
            <summary>
            Is a keyword forcing all characters to be converted to uppercase.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextTransform.Lowercase">
            <summary>
            Is a keyword forcing all characters to be converted to lowercase.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.TextTransform.FullWidth">
            <summary>
            Is a keyword forcing the writing of a character, mainly ideograms and
            latin scripts inside a square, allowing them to be aligned in the
            usual East Asian scripts (like Chinese or Japanese).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.UnicodeMode">
            <summary>
            An enumeration with various unicode modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnicodeMode.Normal">
            <summary>
            The element does not offer a additional level of embedding
            with respect to the bidirectional algorithm. For inline elements
            implicit reordering works across element boundaries.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnicodeMode.Embed">
            <summary>
            If the element is inline, this value opens an additional level of
            embedding with respect to the bidirectional algorithm. The
            direction of this embedding level is given by the direction property.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnicodeMode.Isolate">
            <summary>
            This keyword indicates that the element's container directionality
            should be calculated without considering the content of this element.
            The element is therefore isolated from its siblings. When applying
            its bidirectional-resolution algorithm, its container element treats
            it as one or several U+FFFC Object Replacement Character, i.e. like an image.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnicodeMode.BidiOverride">
            <summary>
            For inline elements this creates an override. For block container
            elements this creates an override for inline-level descendants not
            within another block container element. This means that inside the element,
            reordering is strictly in sequence according to the direction property; the
            implicit part of the bidirectional algorithm is ignored.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnicodeMode.IsolateOverride">
            <summary>
            This keyword applies the isolation behavior of the isolate keyword to the
            surrounding content and the override behavior of the bidi-override keyword
            to the inner content.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.UnicodeMode.Plaintext">
            <summary>
            This keyword makes the elements directionality calculated without considering
            its parent bidirectional state or the value of the direction property. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.Whitespace">
            <summary>
            An enumeration with the various whitespace handling modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Whitespace.Normal">
            <summary>
            Sequences of whitespace are collapsed. Newline characters in the source
            are handled as other whitespace. Breaks lines as necessary to fill
            line boxes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Whitespace.Pre">
            <summary>
            Sequences of whitespace are preserved, lines are only broken at newline
            characters in the source and at br elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Whitespace.NoWrap">
            <summary>
            Collapses whitespace as for normal, but suppresses line breaks (text
            wrapping) within text.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Whitespace.PreWrap">
            <summary>
            Sequences of whitespace are preserved. Lines are broken at newline characters,
            at br, and as necessary to fill line boxes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.Whitespace.PreLine">
            <summary>
            Sequences of whitespace are collapsed. Lines are broken at newline characters,
            at br, and as necessary to fill line boxes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CssPropertyFactory">
            <summary>
            Provides string to CSSProperty instance creation mappings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.Create(System.String,AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Creates a new property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="style">The given style set.</param>
            <returns>The created property.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.CreateLonghand(System.String,AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Creates a new longhand property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="style">The given style set.</param>
            <returns>The created longhand property.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.CreateShorthand(System.String,AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Creates a new shorthand property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="style">The given style set.</param>
            <returns>The created shorthand property.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.CreateLonghandsFor(System.String,AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Creates a series of longhand properties for the provided shorthand.
            </summary>
            <param name="name">The name of the corresponding shorthand property.</param>
            <param name="style">The given style set.</param>
            <returns>The created longhand properties.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.IsLonghand(System.String)">
            <summary>
            Checks if the given property name is a longhand property.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>True if the property is a longhand, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.IsShorthand(System.String)">
            <summary>
            Checks if the given property name is a shorthand property.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>True if the property is a shorthand, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.IsAnimatable(System.String)">
            <summary>
            Checks if the given property name is actually animatable.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>True if the property is animatable, or has a longhand that is animatable.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.IsSupported(System.String)">
            <summary>
            Checks if the given property name if generally supported.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>True if the property name is supported, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.GetLonghands(System.String)">
            <summary>
            Gets the longhands that map to the specified shorthand property.
            </summary>
            <param name="name">The name of the shorthand property.</param>
            <returns>An enumeration over all longhand properties.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CssPropertyFactory.GetShorthands(System.String)">
            <summary>
            Gets the shorthands that map to the specified longhand property.
            </summary>
            <param name="name">The name of the longhand property.</param>
            <returns>An enumeration over all shorthand properties.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.Media.MediaFeature">
            <summary>
            Represents a feature expression within
            a media query.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.Media.MediaFeature.TrySetDefaultValue">
            <summary>
            Tries to set the default value.
            </summary>
            <returns>True if the default value is acceptable, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Media.MediaFeature.TrySetValue(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Tries to set the given value.
            </summary>
            <param name="value">The value that should be used.</param>
            <returns>True if the given value is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Media.MediaFeature.Validate(AngleSharp.DOM.IWindow)">
            <summary>
            Validates the given feature.
            </summary>
            <param name="window">The current browsing window.</param>
            <returns>True if the constraints are satisfied, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Media.MediaFeature.ToCss">
            <summary>
            Returns a CSS code representation of the medium.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.Media.MediaFeature.Name">
            <summary>
            Gets the name of the feature.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.Media.MediaFeature.Value">
            <summary>
            Gets the value of the feature.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMedium">
            <summary>
            Represents a medium rule. More information available at:
            http://www.w3.org/TR/css3-mediaqueries/
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMedium.Validate(AngleSharp.DOM.IWindow)">
            <summary>
            Validates the given medium.
            </summary>
            <param name="window">The current browsing window.</param>
            <returns>True if the constraints are satisfied, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMedium.ToCss">
            <summary>
            Returns a CSS code representation of the medium.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMedium.GetEnumerator">
            <summary>
            Gets an enumerator over all included media features.
            </summary>
            <returns>The specialized enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMedium.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets a general enumerator over the included media features.
            </summary>
            <returns>The general enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMedium.AddConstraint(System.String,AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Adds a constraint to the list of constraints.
            </summary>
            <param name="name">The name of the feature.</param>
            <param name="value">The value of the feature, if any.</param>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMedium.Type">
            <summary>
            Gets the type of medium that is represented.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMedium.IsExclusive">
            <summary>
            Gets if the medium has been created using the only keyword.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMedium.IsInverse">
            <summary>
            Gets if the medium has been created using the not keyword.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMedium.Constraints">
            <summary>
            Gets a string describing the covered constraints.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationDelayProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-delay
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationDelayProperty">
            <summary>
            Represents the CSS animation-delay property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationDelayProperty.Delays">
            <summary>
            Gets the delays for the animations.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationDelayProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationDelayProperty.Delays">
            <summary>
            Gets the delays for the animations.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationDirectionProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-direction
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationDirectionProperty">
            <summary>
            Represents the CSS animation-direction property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationDirectionProperty.Directions">
            <summary>
            Gets an iteration over all defined directions.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationDirectionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationDirectionProperty.Directions">
            <summary>
            Gets an iteration over all defined directions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationDurationProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-duration
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationDurationProperty">
            <summary>
            Represents the CSS animation-duration property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationDurationProperty.Durations">
            <summary>
            Gets the durations for the animations.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationDurationProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationDurationProperty.Durations">
            <summary>
            Gets the durations for the animations.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationFillModeProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-fill-mode
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationFillModeProperty">
            <summary>
            Represents the CSS animation-fill-mode property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationFillModeProperty.FillModes">
            <summary>
            Gets an iteration over all defined fill modes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationFillModeProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationFillModeProperty.FillModes">
            <summary>
            Gets an iteration over all defined fill modes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationIterationCountProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-iteration-count
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationIterationCountProperty">
            <summary>
            Represents the CSS animation-iteration-count property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationIterationCountProperty.Iterations">
            <summary>
            Gets the iteration count of the covered animations.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationIterationCountProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationIterationCountProperty.Iterations">
            <summary>
            Gets the iteration count of the covered animations.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationNameProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-name
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationNameProperty">
            <summary>
            Represents the CSS animation-name property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationNameProperty.Names">
            <summary>
            Gets the names of the animations to trigger.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationNameProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationNameProperty.Names">
            <summary>
            Gets the names of the animations to trigger.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationPlayStateProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-play-state
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationPlayStateProperty">
            <summary>
            Represents the CSS animation-play-state property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationPlayStateProperty.States">
            <summary>
            Gets an enumerable over the defined play states.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationPlayStateProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationPlayStateProperty.States">
            <summary>
            Gets an enumerable over the defined play states.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationProperty">
            <summary>
            Represents the CSS animation shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssAnimationTimingFunctionProperty">
            <summary>
            Represents the CSS anmation-timing-function property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssAnimationTimingFunctionProperty.TimingFunctions">
            <summary>
            Gets the enumeration over all timing functions.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.Durations">
            <summary>
            Gets the durations for the animations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.Delays">
            <summary>
            Gets the offsets for the animations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.TimingFunctions">
            <summary>
            Gets the timing-functions for the animations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.Names">
            <summary>
            Gets the names of the animations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.FillModes">
            <summary>
            Gets the fill modes of the animations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.Directions">
            <summary>
            Gets the directions of the animations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationProperty.Iterations">
            <summary>
            Gets the iteraction counts of the animations.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSAnimationTimingFunctionProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/animation-timing-function
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSAnimationTimingFunctionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSAnimationTimingFunctionProperty.TimingFunctions">
            <summary>
            Gets the enumeration over all timing functions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundAttachmentProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-attachment
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundAttachmentProperty">
            <summary>
            Represents the CSS background-attachment property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundAttachmentProperty.Attachments">
            <summary>
            Gets an enumeration with the desired attachment settings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundAttachmentProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundAttachmentProperty.Attachments">
            <summary>
            Gets an enumeration with the desired attachment settings.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundClipProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundClipProperty">
            <summary>
            Represents the CSS background-clip property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundClipProperty.Clips">
            <summary>
            Gets an enumeration with the desired clip settings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundClipProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundClipProperty.Clips">
            <summary>
            Gets an enumeration with the desired clip settings.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundColorProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundColorProperty">
            <summary>
            Represents the CSS background-color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundColorProperty.Color">
            <summary>
            Gets the color of the background.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundColorProperty.Color">
            <summary>
            Gets the color of the background.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundImageProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-image
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundImageProperty">
            <summary>
            Represents the CSS background-image property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundImageProperty.Images">
            <summary>
            Gets the enumeration of all images.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundImageProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundImageProperty.Images">
            <summary>
            Gets the enumeration of all images.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundOriginProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-origins
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundOriginProperty">
            <summary>
            Represents the CSS background-origin property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundOriginProperty.Origins">
            <summary>
            Gets an enumeration with the desired origin settings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundOriginProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundOriginProperty.Origins">
            <summary>
            Gets an enumeration with the desired origin settings.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundPositionProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-position
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundPositionProperty">
            <summary>
            Represents the CSS background-position property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundPositionProperty.Positions">
            <summary>
            Gets the value of the background position property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundPositionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundPositionProperty.Positions">
            <summary>
            Gets the list of all given positions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundProperty">
            <summary>
            Represents the CSS background shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundRepeatProperty">
            <summary>
            Represents the CSS background-repeat property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundRepeatProperty.HorizontalRepeats">
            <summary>
            Gets an enumeration with the horizontal repeat modes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackgroundRepeatProperty.VerticalRepeats">
            <summary>
            Gets an enumeration with the vertical repeat modes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackgroundSizeProperty">
            <summary>
            Represents the CSS background-size property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.Images">
            <summary>
            Gets the value of the background image property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.Positions">
            <summary>
            Gets the value of the background position property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.HorizontalRepeats">
            <summary>
            Gets the value of the horizontal repeat property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.VerticalRepeats">
            <summary>
            Gets the value of the vertical repeat property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.Attachments">
            <summary>
            Gets the value of the background attachment property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.Origins">
            <summary>
            Gets the value of the background origin property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.Clips">
            <summary>
            Gets the value of the background clip property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundProperty.Color">
            <summary>
            Gets the value of the background color property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundRepeatProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundRepeatProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundRepeatProperty.HorizontalRepeats">
            <summary>
            Gets an enumeration with the horizontal repeat modes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackgroundRepeatProperty.VerticalRepeats">
            <summary>
            Gets an enumeration with the vertical repeat modes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundSizeProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/background-size
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundSizeProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundSizeProperty.CalcSizeMode">
            <summary>
            A value that scales the background image to the specified value in
            the corresponding dimension. Negative values are not allowed.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackgroundSizeProperty.CalcSizeMode.#ctor(AngleSharp.Css.IDistance,AngleSharp.Css.IDistance)">
            <summary>
            The auto keyword that scales the background image in the corresponding
            direction such that its intrinsic proportion is maintained.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundSizeProperty.CoverSizeMode">
            <summary>
            This keyword specifies that the background image should be scaled to
            be as small as possible while ensuring both its dimensions are greater
            than or equal to the corresponding dimensions of the background
            positioning area.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackgroundSizeProperty.ContainSizeMode">
            <summary>
            This keyword specifies that the background image should be scaled to
            be as large as possible while ensuring both its dimensions are less
            than or equal to the corresponding dimensions of the background
            positioning area.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderImageOutsetProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-outset
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderImageOutsetProperty">
            <summary>
            Represents the CSS border-image-outset property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageOutsetProperty.OutsetTop">
            <summary>
            Gets the length or percentage for the outset of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageOutsetProperty.OutsetRight">
            <summary>
            Gets the length or percentage for the outset of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageOutsetProperty.OutsetBottom">
            <summary>
            Gets the length or percentage for the outset of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageOutsetProperty.OutsetLeft">
            <summary>
            Gets the length or percentage for the outset of the left border.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderImageOutsetProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageOutsetProperty.OutsetTop">
            <summary>
            Gets the length or percentage for the outset of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageOutsetProperty.OutsetRight">
            <summary>
            Gets the length or percentage for the outset of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageOutsetProperty.OutsetBottom">
            <summary>
            Gets the length or percentage for the outset of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageOutsetProperty.OutsetLeft">
            <summary>
            Gets the length or percentage for the outset of the left border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderImageProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-image
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderImageProperty">
            <summary>
            Represents the CSS border-image shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderImageWidthProperty">
            <summary>
            Represents the CSS border-image-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageWidthProperty.WidthTop">
            <summary>
            Gets the top length of the image slice, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageWidthProperty.WidthBottom">
            <summary>
            Gets the bottom length of the image slice, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageWidthProperty.WidthLeft">
            <summary>
            Gets the left length of the image slice, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageWidthProperty.WidthRight">
            <summary>
            Gets the right length of the image slice, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderImageSourceProperty">
            <summary>
            Represents the CSS border-image-source property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageSourceProperty.Image">
            <summary>
            Gets the selected image.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderImageSliceProperty">
            <summary>
            Represents the CSS border-image-slice property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageSliceProperty.SliceTop">
            <summary>
            Gets the position of the top slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageSliceProperty.SliceRight">
            <summary>
            Gets the position of the right slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageSliceProperty.SliceBottom">
            <summary>
            Gets the position of the bottom slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageSliceProperty.SliceLeft">
            <summary>
            Gets the position of the left slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageSliceProperty.IsFilled">
            <summary>
            Gets if the center patch should be filled.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderImageRepeatProperty">
            <summary>
            Represents the CSS border-image-repeat property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageRepeatProperty.Horizontal">
            <summary>
            Gets the horizontal repeat value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderImageRepeatProperty.Vertical">
            <summary>
            Gets the vertical repeat value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderImageProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.OutsetBottom">
            <summary>
            Gets the outset bottom width of the border-image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.OutsetLeft">
            <summary>
            Gets the outset left width of the border-image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.OutsetRight">
            <summary>
            Gets the outset right width of the border-image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.OutsetTop">
            <summary>
            Gets the outset top width of the border-image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.Horizontal">
            <summary>
            Gets the horizontal repeat value of the border-image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.Vertical">
            <summary>
            Gets the vertical repeat value of the border-image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.IsFilled">
            <summary>
            Gets if the slice should be filled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.SliceBottom">
            <summary>
            Gets the position of the bottom slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.SliceRight">
            <summary>
            Gets the position of the right slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.SliceTop">
            <summary>
            Gets the position of the top slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.SliceLeft">
            <summary>
            Gets the position of the left slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageProperty.Image">
            <summary>
            Gets the image source of the border-image.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderImageRepeatProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-repeat
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderImageRepeatProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageRepeatProperty.Horizontal">
            <summary>
            Gets the horizontal repeat value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageRepeatProperty.Vertical">
            <summary>
            Gets the vertical repeat value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderImageSliceProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-slice
            or even better:
            http://dev.w3.org/csswg/css-backgrounds/#border-image-slice
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderImageSliceProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageSliceProperty.SliceTop">
            <summary>
            Gets the position of the top slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageSliceProperty.SliceRight">
            <summary>
            Gets the position of the right slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageSliceProperty.SliceBottom">
            <summary>
            Gets the position of the bottom slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageSliceProperty.SliceLeft">
            <summary>
            Gets the position of the left slicing line.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageSliceProperty.IsFilled">
            <summary>
            Gets if the center patch should be filled.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderImageSourceProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-source
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderImageSourceProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageSourceProperty.Image">
            <summary>
            Gets the selected image.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderImageWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderImageWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageWidthProperty.WidthTop">
            <summary>
            Gets the top length of the image slice. It can be an absolute or
            relative length. This length must not be negative. If a percentage of
            the image slice is given it is relative to the height of the border
            image area. The percentage must not be negative.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageWidthProperty.WidthBottom">
            <summary>
            Gets the bottom length of the image slice. It can be an absolute or
            relative length. This length must not be negative. If a percentage of
            the image slice is given it is relative to the height of the border
            image area. The percentage must not be negative.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageWidthProperty.WidthLeft">
            <summary>
            Gets the left length of the image slice. It can be an absolute or
            relative length. This length must not be negative. If a percentage of
            the image slice is given it is relative to the width of the border
            image area. The percentage must not be negative.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderImageWidthProperty.WidthRight">
            <summary>
            Gets the right length of the image slice. It can be an absolute or
            relative length. This length must not be negative. If a percentage of
            the image slice is given it is relative to the width of the border
            image area. The percentage must not be negative.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderBottomLeftRadiusProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-left-radius
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderRadiusPartProperty">
            <summary>
            Basis for all elementary border-radius properties.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderRadiusPartProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusPartProperty.HorizontalRadius">
            <summary>
            Gets the horizontal radius of the ellipse.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusPartProperty.IsCircle">
            <summary>
            Gets if the horizontal radius is the same as the vertical one.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusPartProperty.VerticalRadius">
            <summary>
            Gets the vertical radius of the ellipse.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderBottomLeftRadiusProperty">
            <summary>
            Represents the CSS border-bottom-left-radius property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderBottomLeftRadiusProperty.HorizontalBottomLeft">
            <summary>
            Gets the value of the horizontal bottom-left radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderBottomLeftRadiusProperty.VerticalBottomLeft">
            <summary>
            Gets the value of the vertical bottom-left radius.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderTopRightRadiusProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-right-radius
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderTopRightRadiusProperty">
            <summary>
            Represents the CSS border-top-right-radius property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderTopRightRadiusProperty.HorizontalTopRight">
            <summary>
            Gets the value of the horizontal top-right radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderTopRightRadiusProperty.VerticalTopRight">
            <summary>
            Gets the value of the vertical top-right radius.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderRadiusProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderRadiusProperty">
            <summary>
            Represents the CSS border-radius shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderBottomRightRadiusProperty">
            <summary>
            Represents the CSS border-bottom-right-radius property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderBottomRightRadiusProperty.HorizontalBottomRight">
            <summary>
            Gets the value of the horizontal bottom-right radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderBottomRightRadiusProperty.VerticalBottomRight">
            <summary>
            Gets the value of the vertical bottom-right radius.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderTopLeftRadiusProperty">
            <summary>
            Represents the CSS border-top-left-radius property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderTopLeftRadiusProperty.HorizontalTopLeft">
            <summary>
            Gets the value of the horizontal top-left radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderTopLeftRadiusProperty.VerticalTopLeft">
            <summary>
            Gets the value of the vertical top-left radius.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderRadiusProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="v">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.HorizontalBottomLeft">
            <summary>
            Gets the value of the horizontal bottom-left radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.VerticalBottomLeft">
            <summary>
            Gets the value of the vertical bottom-left radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.HorizontalBottomRight">
            <summary>
            Gets the value of the horizontal bottom-right radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.VerticalBottomRight">
            <summary>
            Gets the value of the vertical bottom-right radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.HorizontalTopLeft">
            <summary>
            Gets the value of the horizontal top-left radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.VerticalTopLeft">
            <summary>
            Gets the value of the vertical top-left radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.HorizontalTopRight">
            <summary>
            Gets the value of the horizontal top-right radius.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRadiusProperty.VerticalTopRight">
            <summary>
            Gets the value of the vertical top-right radius.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderBottomRightRadiusProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderTopLeftRadiusProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-left-radius
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderBottomColorProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderPartColorProperty">
            <summary>
            The abstract base class for all border-color sub-properties.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderPartColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderPartColorProperty.Color">
            <summary>
            Gets the selected color for the border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderColorProperty">
            <summary>
            Represents the CSS border-color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderColorProperty.Color">
            <summary>
            Gets the color of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderBottomProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderProperty">
            <summary>
            Represents the CSS border shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderWidthProperty">
            <summary>
            Represents the CSS border-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderWidthProperty.Width">
            <summary>
            Gets the width of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderStyleProperty">
            <summary>
            Represents the CSS border-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderStyleProperty.Style">
            <summary>
            Gets the style of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderBottomProperty.Width">
            <summary>
            Gets the width of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderBottomProperty.Color">
            <summary>
            Gets the color of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderBottomProperty.Style">
            <summary>
            Gets the style of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderBottomStyleProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderPartStyleProperty">
            <summary>
            The abstract base class for all border-style sub-properties.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderPartStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderPartStyleProperty.Style">
            <summary>
            Gets the selected style for the border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderBottomWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderPartWidthProperty">
            <summary>
            The abstract base class for all border-width sub properties.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderPartWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderPartWidthProperty.Width">
            <summary>
            Gets the thickness of the given border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderColorProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderColorsProperty">
            <summary>
            Represents the CSS border-color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderColorsProperty.Top">
            <summary>
            Gets the value for the color of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderColorsProperty.Right">
            <summary>
            Gets the value for the color of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderColorsProperty.Bottom">
            <summary>
            Gets the value for the color of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderColorsProperty.Left">
            <summary>
            Gets the value for the color of the left border.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderColorProperty.Top">
            <summary>
            Gets the value for the color of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderColorProperty.Right">
            <summary>
            Gets the value for the color of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderColorProperty.Bottom">
            <summary>
            Gets the value for the color of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderColorProperty.Left">
            <summary>
            Gets the value for the color of the left border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderLeftColorProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderLeftProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-left
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderLeftProperty.Width">
            <summary>
            Gets the width of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderLeftProperty.Color">
            <summary>
            Gets the color of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderLeftProperty.Style">
            <summary>
            Gets the style of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderLeftStyleProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderLeftWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderProperty.Width">
            <summary>
            Gets the width of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderProperty.Color">
            <summary>
            Gets the color of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderProperty.Style">
            <summary>
            Gets the style of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderRightColorProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderRightProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-right
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRightProperty.Width">
            <summary>
            Gets the width of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRightProperty.Color">
            <summary>
            Gets the color of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderRightProperty.Style">
            <summary>
            Gets the style of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderRightStyleProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderRightWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderSpacingProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderSpacingProperty">
            <summary>
            Represents the CSS border-spacing property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderSpacingProperty.Horizontal">
            <summary>
            Gets the horizontal spacing between cells, that is the space
            between cells in adjacent columns.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderSpacingProperty.Vertical">
            <summary>
            Gets the vertical spacing between cells, that is the space
            between cells in adjacent rows.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderSpacingProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderSpacingProperty.Horizontal">
            <summary>
            Gets the horizontal spacing between cells, that is the space
            between cells in adjacent columns.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderSpacingProperty.Vertical">
            <summary>
            Gets the vertical spacing between cells, that is the space
            between cells in adjacent rows.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderStyleProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderStylesProperty">
            <summary>
            Represents the CSS border-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderStylesProperty.Top">
            <summary>
            Gets the value for the style of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderStylesProperty.Right">
            <summary>
            Gets the value for the style of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderStylesProperty.Bottom">
            <summary>
            Gets the value for the style of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderStylesProperty.Left">
            <summary>
            Gets the value for the style of the left border.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderStyleProperty.Top">
            <summary>
            Gets the value for the style of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderStyleProperty.Right">
            <summary>
            Gets the value for the style of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderStyleProperty.Bottom">
            <summary>
            Gets the value for the style of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderStyleProperty.Left">
            <summary>
            Gets the value for the style of the left border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderTopColorProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderTopProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-top
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderTopProperty.Width">
            <summary>
            Gets the width of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderTopProperty.Color">
            <summary>
            Gets the color of the given border property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderTopProperty.Style">
            <summary>
            Gets the style of the given border property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderTopStyleProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderTopWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderWidthsProperty">
            <summary>
            Represents the CSS border-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderWidthsProperty.Top">
            <summary>
            Gets the value for the width of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderWidthsProperty.Right">
            <summary>
            Gets the value for the width of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderWidthsProperty.Bottom">
            <summary>
            Gets the value for the width of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderWidthsProperty.Left">
            <summary>
            Gets the value for the width of the left border.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderWidthProperty.Top">
            <summary>
            Gets the value for the width of the top border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderWidthProperty.Right">
            <summary>
            Gets the value for the width of the right border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderWidthProperty.Bottom">
            <summary>
            Gets the value for the width of the bottom border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderWidthProperty.Left">
            <summary>
            Gets the value for the width of the left border.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMarginBottomProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMarginPartProperty">
            <summary>
            Basis for all elementary margin properties.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMarginPartProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMarginPartProperty.IsAuto">
            <summary>
            Gets if the margin is automatically determined.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMarginPartProperty.Margin">
            <summary>
            Gets the margin relative to the width of the containing block or
            a fixed width, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMarginBottomProperty">
            <summary>
            Represents the CSS margin-bottom property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMarginBottomProperty.Bottom">
            <summary>
            Gets the margin relative to the width of the containing block or
            a fixed width, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMarginLeftProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMarginLeftProperty">
            <summary>
            Represents the CSS margin-left property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMarginLeftProperty.Left">
            <summary>
            Gets the margin relative to the width of the containing block or
            a fixed width, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPaddingPartProperty">
            <summary>
            Basis for all elementary padding properties.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPaddingPartProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPaddingPartProperty.Padding">
            <summary>
            Gets the padding relative to the width of the containing block or
            a fixed width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMarginProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/margin
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMarginProperty">
            <summary>
            Represents the CSS margin shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMarginRightProperty">
            <summary>
            Represents the CSS margin-right property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMarginRightProperty.Right">
            <summary>
            Gets the margin relative to the width of the containing block or
            a fixed width, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMarginTopProperty">
            <summary>
            Represents the CSS margin-top property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMarginTopProperty.Top">
            <summary>
            Gets the margin relative to the width of the containing block or
            a fixed width, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMarginProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMarginProperty.Top">
            <summary>
            Gets the value for the top margin.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMarginProperty.Right">
            <summary>
            Gets the value for the right margin.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMarginProperty.Bottom">
            <summary>
            Gets the value for the bottom margin.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMarginProperty.Left">
            <summary>
            Gets the value for the left margin.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMarginRightProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMarginTopProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPaddingTopProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPaddingTopProperty">
            <summary>
            Represents the CSS padding-top property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPaddingTopProperty.Top">
            <summary>
            Gets the padding relative to the width of the containing block or
            a fixed width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPaddingBottomProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPaddingBottomProperty">
            <summary>
            Represents the CSS padding-bottom property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPaddingBottomProperty.Bottom">
            <summary>
            Gets the padding relative to the width of the containing block or
            a fixed width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPaddingRightProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/padding-right
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPaddingRightProperty">
            <summary>
            Represents the CSS padding-right property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPaddingRightProperty.Right">
            <summary>
            Gets the padding relative to the width of the containing block or
            a fixed width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPaddingLeftProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPaddingLeftProperty">
            <summary>
            Represents the CSS padding-left property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPaddingLeftProperty.Left">
            <summary>
            Gets the padding relative to the width of the containing block or
            a fixed width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPaddingProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/padding
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPaddingProperty">
            <summary>
            Represents the CSS padding shorthand property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPaddingProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPaddingProperty.Top">
            <summary>
            Gets the value for the top padding.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPaddingProperty.Right">
            <summary>
            Gets the value for the right padding.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPaddingProperty.Bottom">
            <summary>
            Gets the value for the bottom padding.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPaddingProperty.Left">
            <summary>
            Gets the value for the left padding.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPageBreakInsideProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/page-break-inside
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPageBreakInsideProperty">
            <summary>
            Represents the CSS page-break-inside property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPageBreakInsideProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPageBreakInsideProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageBreakInsideProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPageBreakBeforeProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/page-break-before
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPageBreakBeforeProperty">
            <summary>
            Represents the CSS page-break-before property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPageBreakBeforeProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPageBreakBeforeProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageBreakBeforeProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPageBreakAfterProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/page-break-after
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPageBreakAfterProperty">
            <summary>
            Represents the CSS page-break-after property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPageBreakAfterProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPageBreakAfterProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageBreakAfterProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnRuleStyleProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnRuleStyleProperty">
            <summary>
            Represents the CSS column-rule-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnRuleStyleProperty.Style">
            <summary>
            Gets the selected column-rule line style.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnRuleStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnRuleStyleProperty.Style">
            <summary>
            Gets the selected column-rule line style.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnCountProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-count
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnCountProperty">
            <summary>
            Represents the CSS column-count property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnCountProperty.Count">
            <summary>
            Gets the number of columns.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSColumnCountProperty._count">
            <summary>
            Null indicates that other properties (column-width) should be considered.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnCountProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnCountProperty.Count">
            <summary>
            Gets the number of columns.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnRuleColorProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnRuleColorProperty">
            <summary>
            Represents the CSS column-rule-color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnRuleColorProperty.Color">
            <summary>
            Gets the color for the vertical column rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSColumnRuleColorProperty._color">
            <summary>
            Represents the color of the rule separating columns.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnRuleColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnRuleColorProperty.Color">
            <summary>
            Gets the color for the vertical column rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnFillProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-fill
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnFillProperty">
            <summary>
            Represents the CSS column-fill property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnFillProperty.IsBalanced">
            <summary>
            Gets if the columns should be filled uniformly.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnFillProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnFillProperty.IsBalanced">
            <summary>
            Gets if the columns should be filled uniformly.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnGapProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnGapProperty">
            <summary>
            Represents the CSS column-gap property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnGapProperty.Gap">
            <summary>
            Gets the selected width of gaps between columns.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSColumnGapProperty._gap">
            <summary>
            Defines the size of the gap between columns. It must not
            be negative, but may be equal to 0.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnGapProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnGapProperty.Gap">
            <summary>
            Gets the selected width of gaps between columns.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnSpanProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-span
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnSpanProperty">
            <summary>
            Represents the CSS column-span property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnSpanProperty.IsSpanning">
            <summary>
            Gets if the element should span across all columns.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSColumnSpanProperty._span">
            <summary>
            Content in the normal flow that appears before the element is automatically
            balanced across all columns before the element appears. The element
            establishes a new block formatting context.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnSpanProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnSpanProperty.IsSpanning">
            <summary>
            Gets if the element should span across all columns.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnRuleProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnRuleProperty">
            <summary>
            Represents the CSS column-rule shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnRuleWidthProperty">
            <summary>
            Represents the CSS column-rule-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnRuleWidthProperty.Width">
            <summary>
            Gets the width of the column-rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnRuleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnRuleProperty.Color">
            <summary>
            Gets the value of the column-rule color.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnRuleProperty.Style">
            <summary>
            Gets the value of the column-rule style.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnRuleProperty.Width">
            <summary>
            Gets the value of the column-rule width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnRuleWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule-width
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSColumnRuleWidthProperty._width">
            <summary>
            Describes the width of the rule separating two columns.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnRuleWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnRuleWidthProperty.Width">
            <summary>
            Gets the width of the column-rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnWidthProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/column-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnWidthProperty">
            <summary>
            Represents the CSS column-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColumnWidthProperty.Width">
            <summary>
            Gets the width of a single columns.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSColumnWidthProperty._width">
            <summary>
            Null indicates that other properties (column-count) should be considered.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnWidthProperty.Width">
            <summary>
            Gets the width of a single columns.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColumnsProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/columns
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColumnsProperty">
            <summary>
            Represents the CSS columns shorthand property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColumnsProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnsProperty.Width">
            <summary>
            Gets the width for the columns, if set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColumnsProperty.Count">
            <summary>
            Gets the count for the columns, if set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMinHeightProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/min-height
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMinHeightProperty">
            <summary>
            Represents the CSS min-height property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMinHeightProperty.Limit">
            <summary>
            Gets the minimum height of the element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMinHeightProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMinHeightProperty.Limit">
            <summary>
            Gets the minimum height of the element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMinWidthProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/min-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMinWidthProperty">
            <summary>
            Represents the CSS min-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMinWidthProperty.Limit">
            <summary>
            Gets the minimum height of the element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMinWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMinWidthProperty.Limit">
            <summary>
            Gets the minimum height of the element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMaxWidthProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/max-width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMaxWidthProperty">
            <summary>
            Represents the CSS max-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMaxWidthProperty.Limit">
            <summary>
            Gets the specified max-width of the element, if any.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSMaxWidthProperty._mode">
            <summary>
            The width has no maximum value if _mode == null.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMaxWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMaxWidthProperty.Limit">
            <summary>
            Gets the specified max-width of the element. A percentage is calculated
            with respect to the width of the containing block.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMaxHeightProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/max-height
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMaxHeightProperty">
            <summary>
            Represents the CSS max-height property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMaxHeightProperty.Limit">
            <summary>
            Gets the specified max-height of the element, if any.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSMaxHeightProperty._mode">
            <summary>
            No limit on the height of the box if _mode == null.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMaxHeightProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMaxHeightProperty.Limit">
            <summary>
            Gets the specified max-height of the element. A percentage is calculated
            with respect to the height of the containing block. If the height of the
            containing block is not specified explicitly, the percentage value is
            treated as none.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCounterIncrementProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/counter-increment
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssCounterIncrementProperty">
            <summary>
            Represents the CSS counter-increment property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterIncrementProperty.Item(System.String)">
            <summary>
            Gets the increment of the specified counter.
            </summary>
            <param name="counter">The name of the counter.</param>
            <returns>The increment of the counter.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterIncrementProperty.Counters">
            <summary>
            Gets an enumeration over all counters.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSCounterIncrementProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCounterIncrementProperty.Item(System.String)">
            <summary>
            Gets the increment of the specified counter.
            </summary>
            <param name="counter"></param>
            <returns></returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCounterIncrementProperty.Counters">
            <summary>
            Gets an enumeration over all counters.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCounterResetProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/counter-reset
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssCounterResetProperty">
            <summary>
            Represents the CSS counter-reset property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterResetProperty.Item(System.String)">
            <summary>
            Gets the reset-value of the specified counter.
            </summary>
            <param name="counter">The name of the counter.</param>
            <returns>The reset-value of the counter.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterResetProperty.Counters">
            <summary>
            Gets an enumeration over all counters.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSCounterResetProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCounterResetProperty.Item(System.String)">
            <summary>
            Gets the reset-value of the specified counter.
            </summary>
            <param name="counter"></param>
            <returns></returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCounterResetProperty.Counters">
            <summary>
            Gets an enumeration over all counters.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSListStyleImageProperty">
            <summary>
            More information available at
            https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-image
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssListStyleImageProperty">
            <summary>
            Represents the CSS list-style-image property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssListStyleImageProperty.Image">
            <summary>
            Gets the selected image for the list.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSListStyleImageProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSListStyleImageProperty.Image">
            <summary>
            Gets the selected image.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSListStylePositionProperty">
            <summary>
            More information available at
            https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-position
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssListStylePositionProperty">
            <summary>
            Represents the CSS list-style-position property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssListStylePositionProperty.Position">
            <summary>
            Gets the selected position.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSListStylePositionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSListStylePositionProperty.Position">
            <summary>
            Gets the selected position.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSListStyleProperty">
            <summary>
            More information available at
            https://developer.mozilla.org/en-US/docs/Web/CSS/list-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssListStyleProperty">
            <summary>
            Represents the CSS list-style shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssListStyleTypeProperty">
            <summary>
            Represents the CSS list-style-type property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssListStyleTypeProperty.Style">
            <summary>
            Gets the selected style for the list.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSListStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSListStyleProperty.Style">
            <summary>
            Gets the selected list-style type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSListStyleProperty.Image">
            <summary>
            Gets the selected image for the list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSListStyleProperty.Position">
            <summary>
            Gets the selected position for the list-style.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSListStyleTypeProperty">
            <summary>
            More information available at
            https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSListStyleTypeProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSListStyleTypeProperty.Style">
            <summary>
            Gets the selected style for the list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOutlineColorProperty">
            <summary>
            More information available:
            https://developer.mozilla.org/en-US/docs/Web/CSS/outline-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOutlineColorProperty">
            <summary>
            Represents the CSS outline-color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssOutlineColorProperty.Color">
            <summary>
            Gets the color of the outline.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOutlineColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOutlineColorProperty.Color">
            <summary>
            Gets the color of the outline.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOutlineProperty">
            <summary>
            More information available:
            https://developer.mozilla.org/en-US/docs/Web/CSS/outline
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOutlineProperty">
            <summary>
            Represents the CSS outline shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOutlineStyleProperty">
            <summary>
            Repesents the CSS outline-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssOutlineStyleProperty.Style">
            <summary>
            Gets the selected outline style.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOutlineWidthProperty">
            <summary>
            Represents the CSS outline-width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssOutlineWidthProperty.Width">
            <summary>
            Gets the width of the outline of an element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOutlineProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOutlineProperty.Style">
            <summary>
            Gets the selected outline style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOutlineProperty.Width">
            <summary>
            Gets the selected outline width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOutlineProperty.Color">
            <summary>
            Gets the selected outline color property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOutlineStyleProperty">
            <summary>
            More information available:
            https://developer.mozilla.org/en-US/docs/Web/CSS/outline-style
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOutlineStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOutlineStyleProperty.Style">
            <summary>
            Gets the selected outline style.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOutlineWidthProperty">
            <summary>
            More information available:
            https://developer.mozilla.org/en-US/docs/Web/CSS/outline-width
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOutlineWidthProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOutlineWidthProperty.Width">
            <summary>
            Gets the width of the outline of an element. An outline is a
            line that is drawn around elements, outside the border edge,
            to make the element stand out.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextDecorationLineProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextDecorationLineProperty">
            <summary>
            Represents the CSS text-decoration-line property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextDecorationLineProperty.Line">
            <summary>
            Gets the enumeration over all selected styles
            for text decoration lines.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextDecorationLineProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextDecorationLineProperty.Line">
            <summary>
            Gets the enumeration over all selected styles
            for text decoration lines.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextDecorationColorProperty">
            <summary>
            More Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextDecorationColorProperty">
            <summary>
            Represents the CSS text-decoration-color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextDecorationColorProperty.Color">
            <summary>
            Gets the selected text-decoration color.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextDecorationColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextDecorationColorProperty.Color">
            <summary>
            Gets the selected text-decoration color.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextDecorationStyleProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextDecorationStyleProperty">
            <summary>
            Represents the CSS text-decoration-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextDecorationStyleProperty.DecorationStyle">
            <summary>
            Gets the selected decoration style.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextDecorationStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextDecorationStyleProperty.DecorationStyle">
            <summary>
            Gets the selected decoration style.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextDecorationProperty">
            <summary>
            More information available:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextDecorationProperty">
            <summary>
            Represents the CSS text-decoration shorthand property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextDecorationProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextDecorationProperty.DecorationStyle">
            <summary>
            Gets the value of the decoration style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextDecorationProperty.Line">
            <summary>
            Gets the value of the line property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextDecorationProperty.Color">
            <summary>
            Gets the value of the color property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextIndentProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextIndentProperty">
            <summary>
            Represents the CSS text-indent property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextIndentProperty.Indent">
            <summary>
            Gets the indentation, which is either a percentage of the containing block width
            or specified as fixed length. Negative values are allowed.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextIndentProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextIndentProperty.Indent">
            <summary>
            Gets the indentation, which is either a percentage of the containing block width
            or specified as fixed length. Negative values are allowed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextShadowProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextShadowProperty">
            <summary>
            Represents the CSS text-shadow property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextShadowProperty.Shadows">
            <summary>
            Gets an enumeration over all the set shadows.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextShadowProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextShadowProperty.Shadows">
            <summary>
            Gets an enumeration over all the set shadows.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSWhiteSpaceProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/white-space
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssWhitespaceProperty">
            <summary>
            Represents the CSS white-space property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssWhitespaceProperty.State">
            <summary>
            Gets the selected whitespace handling mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSWhiteSpaceProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSWhiteSpaceProperty.State">
            <summary>
            Gets the selected whitespace handling mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSWidowsProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/widows
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssWidowsProperty">
            <summary>
            Repesents the widows CSS property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssWidowsProperty.Count">
            <summary>
            Gets the count value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSWidowsProperty._value">
            <summary>
            Denotes the minimum amount of lines that can stay alone
            on the top of a new page. If the value is not positive,
            the declaration is invalid.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSWidowsProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSWidowsProperty.Count">
            <summary>
            Gets the number of lines, which must be left on top
            of a new page, on a paged media.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontFamilyProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font-family
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontFamilyProperty">
            <summary>
            Represents the CSS font-family property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFamilyProperty.Families">
            <summary>
            Gets an enumeration over all font names.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontFamilyProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFamilyProperty.Families">
            <summary>
            Gets an enumeration over all font names.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSFontFamilyProperty.SystemFonts.Serif">
            <summary>
            Glyphs have finishing strokes, flared or tapering ends, or have actual serifed endings.
            E.g.  Palatino, "Palatino Linotype", Palladio, "URW Palladio", serif
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSFontFamilyProperty.SystemFonts.SansSerif">
            <summary>
            Glyphs have stroke endings that are plain.
            E.g. 'Trebuchet MS', 'Liberation Sans', 'Nimbus Sans L', sans-serif
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSFontFamilyProperty.SystemFonts.Monospace">
            <summary>
            All glyphs have the same fixed width.
            E.g. "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSFontFamilyProperty.SystemFonts.Cursive">
            <summary>
            Glyphs in cursive fonts generally have either joining strokes or other cursive characteristics
            beyond those of italic typefaces. The glyphs are partially or completely connected, and the
            result looks more like handwritten pen or brush writing than printed letterwork.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSFontFamilyProperty.SystemFonts.Fantasy">
            <summary>
            Fantasy fonts are primarily decorative fonts that contain playful representations of characters.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontSizeProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font-size
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontSizeProperty">
            <summary>
            Represents the CSS font-size property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontSizeProperty.SizingMode">
            <summary>
            Gets the set font-size mode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontSizeProperty.Size">
            <summary>
            Gets the font-size.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontSizeProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontSizeProperty.Size">
            <summary>
            Gets the custom set font-size, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontSizeProperty.SizingMode">
            <summary>
            Gets the font-size mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontStretchProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font-stretch
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontStretchProperty">
            <summary>
            Represents the CSS font-stretch property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontStretchProperty.Stretch">
            <summary>
            Gets the selected font stretch setting.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontStretchProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontStretchProperty.Stretch">
            <summary>
            Gets the selected font stretch setting.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontStyleProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontStyleProperty">
            <summary>
            Represents the CSS font-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontStyleProperty.Style">
            <summary>
            Gets the selected font style.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontStyleProperty.Style">
            <summary>
            Gets the selected font style.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontVariantProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontVariantProperty">
            <summary>
            Represents the CSS font-variant property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontVariantProperty.Variant">
            <summary>
            Gets the selected font variant transformation, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontVariantProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontVariantProperty.Variant">
            <summary>
            Gets the selected font variant transformation, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontWeightProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontWeightProperty">
            <summary>
            Represents the CSS font-weight property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontWeightProperty.Weight">
            <summary>
            Numeric font weights for fonts that provide more than just normal and bold. If the exact
            weight given is unavailable, then 600-900 use the closest available darker weight
            (or, if there is none, the closest available lighter weight), and 100-500 use the closest
            available lighter weight (or, if there is none, the closest available darker weight). This
            means that for fonts that provide only normal and bold, 100-500 are normal, and 600-900 are
            bold.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontWeightProperty.IsRelative">
            <summary>
            Gets if the given value should be considered relative to the current one.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontWeightProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSWordSpacingProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/word-spacing
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssWordSpacingProperty">
            <summary>
            Represents the CSS word-spacing property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssWordSpacingProperty.IsNormal">
            <summary>
            Gets if normal inter-word space, as defined by the current
            font and/or the browser, is active.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssWordSpacingProperty.Spacing">
            <summary>
            Gets the defined custom spacing, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSWordSpacingProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSWordSpacingProperty.IsNormal">
            <summary>
            Gets if normal inter-word space, as defined by the current
            font and/or the browser, is active.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSWordSpacingProperty.Spacing">
            <summary>
            Gets the defined custom spacing, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSLetterSpacingProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssLetterSpacingProperty">
            <summary>
            Represents the CSS letter-spacing property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssLetterSpacingProperty.IsNormal">
            <summary>
            Gets if the spacing is the normal spacing for the current font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssLetterSpacingProperty.Spacing">
            <summary>
            Gets the defined custom spacing, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSLetterSpacingProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSLetterSpacingProperty.IsNormal">
            <summary>
            Gets if the spacing is the normal spacing for the current font. This value
            allows the user agent to alter the space between characters in order to
            justify text. That's the difference to the length value 0.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSLetterSpacingProperty.Spacing">
            <summary>
            Gets the defined custom spacing, if any. Indicates inter-character space in
            addition to the default space between characters. Values may be negative,
            but there may be implementation-specific limits. User agents may not further
            increase or decrease the inter-character space in order to justify text.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSLineHeightProperty">
            <summary>
            Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssLineHeightProperty">
            <summary>
            Represents the CSS line-height property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssLineHeightProperty.Height">
            <summary>
            Gets the specified length that is used in the calculation of the line box height.
            Could also be relative to the font size of the element itself. The computed value
            is this percentage multiplied by the element's computed font size.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSLineHeightProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransformOriginProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransformOriginProperty">
            <summary>
            Represents the CSS transform-origin property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransformOriginProperty.X">
            <summary>
            Gets how far from the left edge of the box the origin of the transform is set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransformOriginProperty.Y">
            <summary>
            Gets how far from the top edge of the box the origin of the transform is set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransformOriginProperty.Z">
            <summary>
            Gets how far from the user eye the z = 0 origin is set.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransformOriginProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransformOriginProperty.X">
            <summary>
            Gets how far from the left edge of the box the origin of the transform is set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransformOriginProperty.Y">
            <summary>
            Gets how far from the top edge of the box the origin of the transform is set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransformOriginProperty.Z">
            <summary>
            Gets how far from the user eye the z = 0 origin is set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransformProperty">
            <summary>
            More information available at MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/transform
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransformProperty">
            <summary>
            Represents the CSS transform property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransformProperty.Transforms">
            <summary>
            Gets the enumeration over all transformations.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransformProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransformProperty.Transforms">
            <summary>
            Gets the enumeration over all transformations.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransformStyleProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/transform-style
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransformStyleProperty">
            <summary>
            Represents the CSS transform-style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransformStyleProperty.IsFlat">
            <summary>
            Gets if the children of the element are lying in the plane of
            the element itself.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransformStyleProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransformStyleProperty.IsFlat">
            <summary>
            Gets if the children of the element are lying in the plane of
            the element itself. Otherwise the children of the element should
            be positioned in the 3D-space.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPerspectiveOriginProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/perspective-origin
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPerspectiveOriginProperty">
            <summary>
            Represents the CSS perspective-origin property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPerspectiveOriginProperty.X">
            <summary>
            Gets the position of the abscissa of the vanishing point.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPerspectiveOriginProperty.Y">
            <summary>
            Gets the position of the ordinate of the vanishing point.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPerspectiveOriginProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPerspectiveOriginProperty.X">
            <summary>
            Gets the position of the abscissa of the vanishing point.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPerspectiveOriginProperty.Y">
            <summary>
            Gets the position of the ordinate of the vanishing point.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPerspectiveProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/CSS/perspective
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPerspectiveProperty">
            <summary>
            Represents the CSS perspective property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPerspectiveProperty.Distance">
            <summary>
            Gets the distance from the user to the z=0 plane.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPerspectiveProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPerspectiveProperty.Distance">
            <summary>
            Gets the distance from the user to the z=0 plane.
            It is used to apply a perspective transform to the element and
            its content. If it 0 or a negative value, no perspective transform
            is applied.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransitionDelayProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/transition-delay
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransitionDelayProperty">
            <summary>
            Represents the CSS transition-delay property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransitionDelayProperty.Delays">
            <summary>
            Gets the delays for the transitions.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransitionDelayProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionDelayProperty.Delays">
            <summary>
            Gets the delays for the transitions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransitionDurationProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/transition-duration
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransitionDurationProperty">
            <summary>
            Represents the CSS transition-duration property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransitionDurationProperty.Durations">
            <summary>
            Gets the durations for the transitions.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransitionDurationProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionDurationProperty.Durations">
            <summary>
            Gets the durations for the transitions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransitionProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/transition
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransitionProperty">
            <summary>
            Represents the CSS transition shorthand property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransitionPropertyProperty">
            <summary>
            Represents the CSS transition-property property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransitionPropertyProperty.Properties">
            <summary>
            Gets the names of the selected properties.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTransitionTimingFunctionProperty">
            <summary>
            Represents the CSS timing-function property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTransitionTimingFunctionProperty.TimingFunctions">
            <summary>
            Gets the enumeration over all timing functions.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransitionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionProperty.Durations">
            <summary>
            Gets the durations for the transitions.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionProperty.Delays">
            <summary>
            Gets the offsets for the transitions.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionProperty.TimingFunctions">
            <summary>
            Gets the timing-functions for the transitions.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionProperty.AngleSharp#DOM#Css#ICssTransitionPropertyProperty#Properties">
            <summary>
            Gets the properties for the transitions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransitionPropertyProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/transition-property
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransitionPropertyProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionPropertyProperty.Properties">
            <summary>
            Gets the names of the selected properties.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTransitionTimingFunctionProperty">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/CSS/transition-timing-function
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTransitionTimingFunctionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTransitionTimingFunctionProperty.TimingFunctions">
            <summary>
            Gets the enumeration over all timing functions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBackfaceVisibilityProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/backface-visibility
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBackfaceVisibilityProperty">
            <summary>
            Represents the CSS backface-visibility property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBackfaceVisibilityProperty.IsVisible">
            <summary>
            Gets if the back face is visible, allowing the front
            face to be displayed mirrored.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBackfaceVisibilityProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBackfaceVisibilityProperty.IsVisible">
            <summary>
            Gets if the back face is visible, allowing the front
            face to be displayed mirrored. Otherwise the back face
            is not visible, hiding the front face.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBorderCollapseProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBorderCollapseProperty">
            <summary>
            Represents the CSS border-collapse property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBorderCollapseProperty.IsSeparated">
            <summary>
            Gets the use of the separated-border table rendering model.
            Otherwise the collapsed-border table rendering model is used.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBorderCollapseProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBorderCollapseProperty.IsSeparated">
            <summary>
            Gets the use of the separated-border table rendering model.
            Otherwise the collapsed-border table rendering model is used.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBoxDecorationBreak">
            <summary>
            More infos can be found on the W3C homepage or
            in condensed form at 
            http://css-infos.net/property/box-decoration-break
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBoxDecorationBreak">
            <summary>
            Represents the CSS box-decoration-break property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBoxDecorationBreak.IsCloned">
            <summary>
            Gets if each box is independently wrapped with the border
            and padding.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBoxDecorationBreak.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBoxDecorationBreak.IsCloned">
            <summary>
            Gets if each box is independently wrapped with the border
            and padding. Otherwise no border and no padding are inserted
            at the break.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBoxShadowProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBoxShadowProperty">
            <summary>
            Represents the CSS box-shadow property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBoxShadowProperty.Shadows">
            <summary>
            Gets an enumeration over all the set shadows.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBoxShadowProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBoxShadowProperty.Shadows">
            <summary>
            Gets an enumeration over all the set shadows.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBreakInsideProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/break-inside
            or even better
            http://dev.w3.org/csswg/css-break/#break-inside
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBreakInsideProperty">
            <summary>
            Represents the CSS break-inside property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBreakInsideProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBreakInsideProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBreakInsideProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBreakAfterProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/break-after
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBreakAfterProperty">
            <summary>
            Represents the CSS break-after property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBreakAfterProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBreakAfterProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBreakAfterProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSColorProperty">
            <summary>
            More Information:
            https://developer.mozilla.org/en-US/docs/Web/CSS/color
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssColorProperty">
            <summary>
            Represents the CSS color property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssColorProperty.Color">
            <summary>
            Gets the selected color for the foreground.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSColorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSColorProperty.Color">
            <summary>
            Gets the selected color for the foreground.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/content
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssContentProperty">
            <summary>
            Represents the CSS content property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSContentProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.NormalContentMode">
            <summary>
            Computes to none for the :before and :after pseudo-elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.OpenQuoteContentMode">
            <summary>
            The value is replaced by the open quote string from the quotes property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.CloseQuoteContentMode">
            <summary>
            The value is replaced by the close string from the quotes property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.NoOpenQuoteContentMode">
            <summary>
            Introduces no content, but increments the level of nesting for quotes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.NoCloseQuoteContentMode">
            <summary>
            Introduces no content, but decrements the level of nesting for quotes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.TextContentMode">
            <summary>
            Text content.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.CounterContentMode">
            <summary>
            The generated text is the value of all counters with
            the given name in scope at this pseudo-element, from
            outermost to innermost separated by the specified string.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.AttributeContentMode">
            <summary>
            Returns the value of the element's attribute X as a string.
            If there is no attribute X, an empty string is returned.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.UrlContentMode">
            <summary>
            The value is a URI that designates an external resource (such as
            an image). If the resource or image can't be displayed, it is
            either ignored or some placeholder shows up.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSContentProperty.MultiContentMode">
            <summary>
            A combination of other modes which are concatenated.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCursorProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/cursor
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssCursorProperty">
            <summary>
            Represents the CSS cursor property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCursorProperty.Cursor">
            <summary>
            Gets the selected system cursor, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSCursorProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCursorProperty.Cursor">
            <summary>
            Gets the selected system cursor, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCursorProperty.AutoCursorMode">
            <summary>
            The browser determines the cursor to display based on the current context.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCursorProperty.CustomCursorMode">
            <summary>
            A url pointing to an image file.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCursorProperty.MultiCursorMode">
            <summary>
            A list of urls pointing to an image files, giving the fallback order.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCursorProperty.SystemCursorMode">
            <summary>
            Sets the cursor from a predefined list of cursors.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSClipProperty">
            <summary>
            More information can be found:
            https://developer.mozilla.org/en-US/docs/Web/CSS/clip
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssClipProperty">
            <summary>
            Represents the CSS clip property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssClipProperty.Clip">
            <summary>
            Gets the shape of the selected clipping region.
            If this value is null, then the clipping is
            determined automatically.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSClipProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSClipProperty.Clip">
            <summary>
            Gets the shape of the selected clipping region.
            If this value is null, then the clipping is
            determined automatically.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontProperty">
            <summary>
            More information available:
            https://developer.mozilla.org/en-US/docs/Web/CSS/font
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontProperty">
            <summary>
            Represents the CSS font shorthand property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontProperty.SetTo(AngleSharp.DOM.Css.SystemFont)">
            <summary>
            Instead of specifying individual longhand properties, a
            keyword can be used to represent a specific system font.
            </summary>
            <param name="setting">The setting to apply.</param>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.Style">
            <summary>
            Gets the value of the font style property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.Variant">
            <summary>
            Gets the value of the font variant property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.Stretch">
            <summary>
            Gets the value of the font stretch property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.SizingMode">
            <summary>
            Gets the mode of the font-size property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.Size">
            <summary>
            Gets the custom set size of the font, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.Height">
            <summary>
            Gets the value of the line height property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontProperty.Families">
            <summary>
            Gets the value of the font family property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOrphansProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/orphans
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOrphansProperty">
            <summary>
            Represents the CSS orphans property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssOrphansProperty.Count">
            <summary>
            Gets the minimum number of lines in a block container
            that must be left at the bottom of the page. 
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOrphansProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOrphansProperty.Count">
            <summary>
            Gets the minimum number of lines in a block container
            that must be left at the bottom of the page. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSQuotesProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/quotes
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssQuotesProperty">
            <summary>
            Represents the CSS quotes property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssQuotesProperty.Quotes">
            <summary>
            Gets the enumeration with pairs of values for open-quote and
            close-quote.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSQuotesProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSQuotesProperty.Quotes">
            <summary>
            Gets the enumeration with pairs of values for open-quote and
            close-quote. The first pair represents the outer level of quotation,
            the second pair is for the first nested level, next pair for third
            level and so on.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSUnicodeBidiProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssUnicodeBidiProperty">
            <summary>
            Represents the unicode-bidi CSS property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssUnicodeBidiProperty.State">
            <summary>
            Gets the selected unicode mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSUnicodeBidiProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSUnicodeBidiProperty.State">
            <summary>
            Gets the selected unicode mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSVerticalAlignProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssVerticalAlignProperty">
            <summary>
            Represents the CSS vertical-align property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssVerticalAlignProperty.State">
            <summary>
            Gets the selected vertical alignment mode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssVerticalAlignProperty.Shift">
            <summary>
            Gets the alignment of of the element's baseline at the given length above
            the baseline of its parent or like absolute values, with the percentage
            being a percent of the line-height property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSVerticalAlignProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSVerticalAlignProperty.Shift">
            <summary>
            Gets the alignment of of the element's baseline at the given length above
            the baseline of its parent or like absolute values, with the percentage
            being a percent of the line-height property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSVerticalAlignProperty.State">
            <summary>
            Gets the selected vertical alignment mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCoordinateProperty">
            <summary>
            Basis for all properties that have either a length
            or percentage value or an auto value - nothing else.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSCoordinateProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCoordinateProperty.IsAuto">
            <summary>
            Gets if the position is automatically calculated.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCoordinateProperty.Position">
            <summary>
            Gets the position if a fixed position has been set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBottomProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/bottom
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBottomProperty">
            <summary>
            Represents the CSS bottom property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBottomProperty.Bottom">
            <summary>
            Gets the position if a fixed position has been set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTopProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/top
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTopProperty">
            <summary>
            Represents the CSS top property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTopProperty.Top">
            <summary>
            Gets the position if a fixed position has been set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSRightProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/right
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssRightProperty">
            <summary>
            Represents the CSS right property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRightProperty.Right">
            <summary>
            Gets the position if a fixed position has been set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSLeftProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/left
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssLeftProperty">
            <summary>
            Represents the CSS left property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssLeftProperty.Left">
            <summary>
            Gets the position if a fixed position has been set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSWidthProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/width
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssWidthProperty">
            <summary>
            Represents the CSS width property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssWidthProperty.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSHeightProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/height
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssHeightProperty">
            <summary>
            Represents the CSS height property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssHeightProperty.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOpacityProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/opacity
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOpacityProperty">
            <summary>
            Represents the CSS opacity property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssOpacityProperty.Opacity">
            <summary>
            Gets the value that should be used for the opacity.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOpacityProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSOpacityProperty.Opacity">
            <summary>
            Gets the value that should be used for the opacity.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextTransformProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextTransformProperty">
            <summary>
            Represents the CSS text-transform property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextTransformProperty.Transform">
            <summary>
            Gets the selected text transformation mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextTransformProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextTransformProperty.Transform">
            <summary>
            Gets the selected text transformation mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTextAlignProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/text-align
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTextAlignProperty">
            <summary>
            Represents the CSS text-align property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTextAlignProperty.State">
            <summary>
            Gets the selected horizontal alignment mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTextAlignProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTextAlignProperty.State">
            <summary>
            Gets the selected horizontal alignment mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSDirectionProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/direction
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssDirectionProperty">
            <summary>
            Represents the CSS direction property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssDirectionProperty.State">
            <summary>
            Gets the selected text direction.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSDirectionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSDirectionProperty.State">
            <summary>
            Gets the selected text direction.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSEmptyCellsProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/empty-cells
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssEmptyCellsProperty">
            <summary>
            Represents the CSS empty-cells property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssEmptyCellsProperty.IsVisible">
            <summary>
            Gets if borders and backgrounds should be drawn like
            in a normal cells.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSEmptyCellsProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSEmptyCellsProperty.IsVisible">
            <summary>
            Gets if borders and backgrounds should be drawn like
            in a normal cells. Otherwise no border or backgrounds
            should be drawn.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSOverflowProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/overflow
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssOverflowProperty">
            <summary>
            Represents the CSS overflow property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssOverflowProperty.State">
            <summary>
            Gets the desired overflow mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSOverflowProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSTableLayoutProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssTableLayoutProperty">
            <summary>
            Represents the CSS table-layout property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssTableLayoutProperty.IsFixed">
            <summary>
            Gets if table and column widths are set by the widths of table and
            col elements or by the width of the first row of cells.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSTableLayoutProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSTableLayoutProperty.IsFixed">
            <summary>
            Gets if table and column widths are set by the widths of table and
            col elements or by the width of the first row of cells. Cells in
            subsequent rows do not affect column widths. Otherwise an automatic
            table layout algorithm is commonly used by most browsers for table
            layout. The width of the table and its cells depends on the content
            thereof.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCaptionSideProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssCaptionSideProperty">
            <summary>
            Represents the CSS caption-side property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCaptionSideProperty.IsOnTop">
            <summary>
            Gets if the caption box will be above the table.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSCaptionSideProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCaptionSideProperty.IsOnTop">
            <summary>
            Gets if the caption box will be above the table.
            Otherwise the caption box will be below the table.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSClearProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/clear
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssClearProperty">
            <summary>
            Represents the CSS clear property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssClearProperty.State">
            <summary>
            Gets the value of the clear mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSClearProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSClearProperty.State">
            <summary>
            Gets the value of the clear mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSBreakBeforeProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/break-before
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssBreakBeforeProperty">
            <summary>
            Represents the CSS break-before property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssBreakBeforeProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSBreakBeforeProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSBreakBeforeProperty.State">
            <summary>
            Gets the selected break mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFloatProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/float
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFloatProperty">
            <summary>
            Represents the CSS float property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFloatProperty.State">
            <summary>
            Gets the value of the floating property.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFloatProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFloatProperty.State">
            <summary>
            Gets the value of the floating property.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSVisibilityProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/visibility
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssVisibilityProperty">
            <summary>
            Represents the CSS visibility property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssVisibilityProperty.Visibility">
            <summary>
            Gets the visibility mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSVisibilityProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSVisibilityProperty.Visibility">
            <summary>
            Gets the visibility mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPositionProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/position
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPositionProperty">
            <summary>
            Represents the CSS position property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPositionProperty.State">
            <summary>
            Gets the currently selected position mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPositionProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPositionProperty.State">
            <summary>
            Gets the currently selected position mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSDisplayProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/display
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssDisplayProperty">
            <summary>
            Represents the CSS display property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssDisplayProperty.State">
            <summary>
            Gets the value of the display mode.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSDisplayProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSDisplayProperty.State">
            <summary>
            Gets the value of the display mode.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSZIndexProperty">
            <summary>
            Information can be found on MDN:
            https://developer.mozilla.org/en-US/docs/Web/CSS/z-index
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssZIndexProperty">
            <summary>
            Represents the CSS z-index property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssZIndexProperty.Index">
            <summary>
            Gets the index in the stacking order, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSZIndexProperty.IsValid(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Determines if the given value represents a valid state of this property.
            </summary>
            <param name="value">The state that should be used.</param>
            <returns>True if the state is valid, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSZIndexProperty.Index">
            <summary>
            Gets the index in the stacking order, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Factories.ElementFactory`1.#ctor">
            <summary>
            Creates a new element factory.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Factories.ElementFactory`1.CreateDefault(System.String,AngleSharp.DOM.Document)">
            <summary>
            Creates the default element.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="document">The associated document.</param>
            <returns>A new default element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Factories.ElementFactory`1.CreateSpecific(System.String,AngleSharp.DOM.Document)">
            <summary>
            Returns a specialized SVGElement instance for the given tag name.
            </summary>
            <param name="name">The given tag name.</param>
            <param name="document">The document that owns the element.</param>
            <returns>The specialized SVGElement instance.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTimeElement">
            <summary>
            The time HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTimeElement">
            <summary>
            Represents the time HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTimeElement.DateTime">
            <summary>
            Gets or sets the time.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableDataCellElement">
            <summary>
            Represents the object for HTML td elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableCellElement">
            <summary>
            Represents the object for HTML table cell elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableCellElement">
            <summary>
            Reprsents the base for td / th HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableCellElement.ColumnSpan">
            <summary>
            Gets or sets the number of columns spanned by cell. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableCellElement.RowSpan">
            <summary>
            Gets or sets the number of rows spanned by cell. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableCellElement.Headers">
            <summary>
            Gets or sets the list of id attribute values for header cells. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableCellElement.Index">
            <summary>
            Gets the index of this cell in the row, starting from 0.
            This index is in document tree order and not display order.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Index">
            <summary>
            Gets the index of this cell in the row, starting from 0.
            This index is in document tree order and not display order.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Align">
            <summary>
            Gets or sets the value of the alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.VAlign">
            <summary>
            Gets or sets the value of the vertical alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.BgColor">
            <summary>
            Gets or sets the value of the background color attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Width">
            <summary>
            Gets or sets the value of the width attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Height">
            <summary>
            Gets or sets the value of the height attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.ColumnSpan">
            <summary>
            Gets or sets the number of columns spanned by cell. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.RowSpan">
            <summary>
            Gets or sets the number of rows spanned by cell. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.NoWrap">
            <summary>
            Gets or sets if word wrapping is suppressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Abbr">
            <summary>
            Gets or sets the abbreviation for header cells.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Scope">
            <summary>
            Gets or sets the scope covered by header cells.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Headers">
            <summary>
            Gets or sets the list of id attribute values for header cells. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCellElement.Axis">
            <summary>
            Gets or sets the names group of related headers. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableHeaderCellElement">
            <summary>
            Represents the object for HTML th elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableHeaderCellElement">
            <summary>
            Represents the th HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableHeaderCellElement.Scope">
            <summary>
            Gets or sets the scope of the th element.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.IDistance">
            <summary>
            Functionality for length computation.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.IDistance.ToCss">
            <summary>
            Returns the CSS representation of the object.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="M:AngleSharp.Css.IDistance.ToPixel">
            <summary>
            Converts the value to pixels.
            </summary>
            <returns>The number of pixels.</returns>
        </member>
        <member name="T:AngleSharp.Css.Point">
            <summary>
            Represents a point value consisting of two distances.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Point.Centered">
            <summary>
            Gets the center, center point.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Point.#ctor(AngleSharp.Css.IDistance,AngleSharp.Css.IDistance)">
            <summary>
            Creates a new Point.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="M:AngleSharp.Css.Point.ToCss">
            <summary>
            Returns a CSS representation of the Point.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Point.X">
            <summary>
            Gets the value for the x-coordinate.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Point.Y">
            <summary>
            Gets the value for the y-coordinate.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSUnknownValue">
            <summary>
            Represents an unknown type of value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSValue">
            <summary>
            Represents a CSS value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssValue">
            <summary>
            Represents the base for any CSS value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssValue.Type">
            <summary>
            Gets a code defining the type of the value as defined above.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssValue.CssText">
            <summary>
            Gets or sets a string representation of the current value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSValue._type">
            <summary>
            The type of value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSValue.Inherit">
            <summary>
            Gets the instance for an inherited value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSValue.Initial">
            <summary>
            Gets the instance for an initial value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSValue.Delimiter">
            <summary>
            Gets the instance for a slash delimiter value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSValue.Separator">
            <summary>
            Gets the instance for a comma separator value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValue.#ctor(AngleSharp.DOM.Css.CssValueType)">
            <summary>
            Creates a new CSS value.
            </summary>
            <param name="type">The type of of the value.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSValue.Type">
            <summary>
            Gets a code defining the type of the value as defined above.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSValue.CssText">
            <summary>
            Gets or sets a string representation of the current value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValue.CSSInheritValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValue.CSSInitialValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValue.CSSDelimiterValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValue.CSSSeparatorValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSUnknownValue._text">
            <summary>
            The CSS text representation of the value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSUnknownValue.#ctor(System.String)">
            <summary>
            Creates a new CSS value.
            </summary>
            <param name="text">The text representation of the new value.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSUnknownValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="T:AngleSharp.ConfigurationExtensions">
            <summary>
            A set of useful extensions for IConfiguration and Configuration objects.
            </summary>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.WithCss``1(``0)">
            <summary>
            Sets styling to true and registers a new CSS style engine, if none is available.
            </summary>
            <typeparam name="TConfiguration">Configuration or derived.</typeparam>
            <param name="configuration">The configuration to modify.</param>
            <returns>The same object, for chaining.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.WithStyling``1(``0)">
            <summary>
            Sets styling to true and returns the same instance.
            </summary>
            <typeparam name="TConfiguration">Implementation of IConfiguration.</typeparam>
            <param name="configuration">The configuration to modify.</param>
            <returns>The same object, for chaining.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.WithScripting``1(``0)">
            <summary>
            Sets scripting to true and returns the same instance.
            </summary>
            <typeparam name="TConfiguration">Implementation of IConfiguration.</typeparam>
            <param name="configuration">The configuration to modify.</param>
            <returns>The same object, for chaining.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.WithDefaultRequester``1(``0,AngleSharp.Network.IInfo)">
            <summary>
            Include the default http/https requester for external resources. Returns the same instance.
            </summary>
            <typeparam name="TConfiguration">Configuration or derived.</typeparam>
            <param name="configuration">The configuration to modify.</param>
            <param name="agent">User-Agent information if any.</param>
            <returns>The same object, for chaining.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.ParseHtml(AngleSharp.IConfiguration,System.String,System.String)">
            <summary>
            Builds a new HTML Document with the given source code string.
            </summary>
            <param name="configuration">Options to use for the document generation.</param>
            <param name="sourceCode">The string to use as source code.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.ParseHtmlAsync(AngleSharp.IConfiguration,System.IO.Stream,System.String)">
            <summary>
            Builds a new HTML Document asynchronously with the given (network) stream.
            </summary>
            <param name="configuration">Options to use for the document generation.</param>
            <param name="content">The stream of chars to use as source code.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The task to construct the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.ParseHtmlAsync(AngleSharp.IConfiguration,System.Uri)">
            <summary>
            Builds a new HTML Document by asynchronously requesting the given URL.
            </summary>
            <param name="configuration">Options to use for the document generation.</param>
            <param name="url">The URL which points to the address containing the source code.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.ParseCss(AngleSharp.IConfiguration,System.String,System.String)">
            <summary>
            Builds a new CSSStyleSheet with the given source code string.
            </summary>
            <param name="configuration">Options to use for the document generation.</param>
            <param name="sourceCode">The string to use as source code.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.ParseCssAsync(AngleSharp.IConfiguration,System.IO.Stream,System.String)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given (network) stream.
            </summary>
            <param name="configuration">Options to use for the document generation.</param>
            <param name="stream">The stream of chars to use as source code.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.ConfigurationExtensions.ParseCssAsync(AngleSharp.IConfiguration,System.Uri)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given URL.
            </summary>
            <param name="configuration">Options to use for the document generation.</param>
            <param name="url">The URL which points to the address containing the source code.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="T:AngleSharp.Css.Counter">
            <summary>
            Represents a CSS counter.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Counter.#ctor(System.String,System.String,System.String)">
            <summary>
            Specifies a counter value.
            </summary>
            <param name="identifier">The identifier of the counter.</param>
            <param name="listStyle">The used list style.</param>
            <param name="separator">The separator of the counter.</param>
        </member>
        <member name="M:AngleSharp.Css.Counter.ToCss">
            <summary>
            Returns the CSS representation of the specified counter.
            </summary>
            <returns>The CSS counter or counters function code.</returns>
        </member>
        <member name="P:AngleSharp.Css.Counter.CounterIdentifier">
            <summary>
            Gets the identifier of the counter.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Counter.ListStyle">
            <summary>
            Gets the style of the counter.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Counter.DefinedSeparator">
            <summary>
            Gets the defined separator of the counter.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.GradientStop">
            <summary>
            More information can be found at the W3C:
            http://dev.w3.org/csswg/css-images-3/#color-stop-syntax
            </summary>
        </member>
        <member name="M:AngleSharp.Css.GradientStop.#ctor(AngleSharp.Css.Color,AngleSharp.Css.IDistance)">
            <summary>
            Creates a new gradient stop.
            </summary>
            <param name="color">The color of the stop.</param>
            <param name="location">The location of the stop.</param>
        </member>
        <member name="M:AngleSharp.Css.GradientStop.ToCss">
            <summary>
            Returns the CSS standard represenation, which is just color and location.
            </summary>
            <returns>A string that contains the color and location of the stop.</returns>
        </member>
        <member name="P:AngleSharp.Css.GradientStop.Color">
            <summary>
            Gets the color of the gradient stop.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.GradientStop.Location">
            <summary>
            Gets the location of the gradient stop.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.LinearGradient">
            <summary>
            Represents a linear gradient:
            http://dev.w3.org/csswg/css-images-3/#linear-gradients
            </summary>
        </member>
        <member name="M:AngleSharp.Css.LinearGradient.#ctor(AngleSharp.Css.Angle,AngleSharp.Css.GradientStop[],System.Boolean)">
            <summary>
            Creates a new linear gradient.
            </summary>
            <param name="angle">The angle of the linear gradient.</param>
            <param name="stops">The stops to use.</param>
            <param name="repeating">Indicates if the gradient is repeating.</param>
        </member>
        <member name="M:AngleSharp.Css.LinearGradient.ToCss">
            <summary>
            Returns the CSS representation of the linear gradient function.
            </summary>
            <returns>A string that resembles CSS code.</returns>
        </member>
        <member name="P:AngleSharp.Css.LinearGradient.Angle">
            <summary>
            Gets the angle.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.LinearGradient.Stops">
            <summary>
            Gets an enumeration of all stops.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.LinearGradient.IsRepeating">
            <summary>
            Gets if the gradient is repeating.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.RadialGradient">
            <summary>
            Represents a radial gradient:
            http://dev.w3.org/csswg/css-images-3/#radial-gradients
            </summary>
        </member>
        <member name="M:AngleSharp.Css.RadialGradient.#ctor(AngleSharp.Css.IDistance,AngleSharp.Css.IDistance,AngleSharp.Css.IDistance,AngleSharp.Css.IDistance,AngleSharp.Css.GradientStop[],System.Boolean)">
            <summary>
            Creates a new radial gradient.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width of the ellipse.</param>
            <param name="height">The height of the ellipse.</param>
            <param name="stops">A collection of stops to use.</param>
            <param name="repeating">The repeating setting.</param>
        </member>
        <member name="M:AngleSharp.Css.RadialGradient.ToCss">
            <summary>
            Returns the CSS representation of the linear gradient function.
            </summary>
            <returns>A string that resembles CSS code.</returns>
        </member>
        <member name="P:AngleSharp.Css.RadialGradient.X">
            <summary>
            Gets the x-position.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.RadialGradient.Y">
            <summary>
            Gets the y-position.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.RadialGradient.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.RadialGradient.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.RadialGradient.Stops">
            <summary>
            Gets an enumeration of all stops.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.RadialGradient.IsRepeating">
            <summary>
            Gets if the gradient is repeating.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Shadow">
            <summary>
            The shadow class for holding information about
            a box or text-shadow.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Shadow.#ctor(System.Boolean,AngleSharp.Css.Length,AngleSharp.Css.Length,AngleSharp.Css.Length,AngleSharp.Css.Length,AngleSharp.Css.Color)">
            <summary>
            Creates a new CSS shadow.
            </summary>
            <param name="inset">If the shadow is an inset.</param>
            <param name="offsetX">The x-coordinate offset.</param>
            <param name="offsetY">The y-coordinate offset.</param>
            <param name="blurRadius">The blur radius of the shadow.</param>
            <param name="spreadRadius">The spread radius of the shadow.</param>
            <param name="color">The color of the shadow.</param>
        </member>
        <member name="M:AngleSharp.Css.Shadow.ToCss">
            <summary>
            Returns the string representation of the function in CSS code.
            </summary>
            <returns>The CSS code to construct this value.</returns>
        </member>
        <member name="P:AngleSharp.Css.Shadow.Color">
            <summary>
            Gets the color of the shadow.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shadow.OffsetX">
            <summary>
            Gets the horizontal offset.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shadow.OffsetY">
            <summary>
            Gets the vertical offset.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shadow.BlurRadius">
            <summary>
            Gets the blur radius.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shadow.SpreadRadius">
            <summary>
            Gets the spread radius.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shadow.IsInset">
            <summary>
            Gets if the shadow is inset.
            </summary>
        </member>
        <member name="T:AngleSharp.Attributes.DomHistorical">
            <summary>
            This attribute decorates official DOM objects that should no
            longer be used and are therefore considered deprecated.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Xml.XmlDocument">
            <summary>
            Represents a document node that contains only XML nodes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Document">
            <summary>
            Represents a document node.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IDocument">
            <summary>
            The Document interface serves as an entry point to the web page's content.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IGlobalEventHandlers">
            <summary>
            Defines a set of event handlers that are implemented by all HTML elements.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Aborted">
            <summary>
            Event triggered after aborting.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Blurred">
            <summary>
            Event triggered after losing focus.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Cancelled">
            <summary>
            Event triggered after cancelling.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.CanPlay">
            <summary>
            Event triggered when the media can be played.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.CanPlayThrough">
            <summary>
            Event triggered when the media can be fully played.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Changed">
            <summary>
            Event triggered after the value changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Clicked">
            <summary>
            Event triggered after being clicked.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.CueChanged">
            <summary>
            Event triggered after changing the cue.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DoubleClick">
            <summary>
            Event triggered after performing a double click.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Drag">
            <summary>
            Event triggered after starting to be dragged.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DragEnd">
            <summary>
            Event triggered after being dragged.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DragEnter">
            <summary>
            Event triggered after entering in dragging mode.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DragExit">
            <summary>
            Event triggered after exiting the dragging mode.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DragLeave">
            <summary>
            Event triggered after leaving in dragging mode.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DragOver">
            <summary>
            Event triggered after hovering in dragging mode.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DragStart">
            <summary>
            Event triggered after starting to drag.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Dropped">
            <summary>
            Event triggered after dropping.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.DurationChanged">
            <summary>
            Event triggered when the media cursor changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Emptied">
            <summary>
            Event triggered after being emptied.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Ended">
            <summary>
            Event triggered after the media ended.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Error">
            <summary>
            Event triggered after an error occurred.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Focused">
            <summary>
            Event triggered after receiving focus.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Input">
            <summary>
            Event triggered after input has happend.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Invalid">
            <summary>
            Event triggered after validation failed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.KeyDown">
            <summary>
            Event triggered after key down.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.KeyPress">
            <summary>
            Event triggered after key press.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.KeyUp">
            <summary>
            Event triggered after key up.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Loaded">
            <summary>
            Event triggered after the content has been fully loaded.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.LoadedData">
            <summary>
            Event triggered after the data has been loaded.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.LoadedMetadata">
            <summary>
            Event triggered after the meta data has been received.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Loading">
            <summary>
            Event triggered when loading begins.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseDown">
            <summary>
            Event triggered after mouse down.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseEnter">
            <summary>
            Event triggered after mouse enter.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseLeave">
            <summary>
            Event triggered after mouse leave.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseMove">
            <summary>
            Event triggered after mouse move.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseOut">
            <summary>
            Event triggered after mouse out.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseOver">
            <summary>
            Event triggered after mouse over.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseUp">
            <summary>
            Event triggered after mouse up.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.MouseWheel">
            <summary>
            Event triggered after mouse wheel.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Paused">
            <summary>
            Event triggered after the media paused.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Played">
            <summary>
            Event triggered after the media started.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Playing">
            <summary>
            Event triggered before the media started.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Progress">
            <summary>
            Event triggered after progress.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.RateChanged">
            <summary>
            Event triggered after the rate changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Resetted">
            <summary>
            Event triggered after resetting the form.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Resized">
            <summary>
            Event triggered after resizing the window.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Scrolled">
            <summary>
            Event triggered after scrolling has happened.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Seeked">
            <summary>
            Event triggered after seeking in the media stream.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Seeking">
            <summary>
            Event triggered before seeking in the media stream.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Selected">
            <summary>
            Event triggered after selected the element.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Shown">
            <summary>
            Event triggered after being shown.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Stalled">
            <summary>
            Event triggered after being stalled.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Submitted">
            <summary>
            Event triggered after the form has been submitted.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Suspended">
            <summary>
            Event triggered after suspending.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.TimeUpdated">
            <summary>
            Event triggered after the time updated.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Toggled">
            <summary>
            Event triggered after being toggled.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.VolumeChanged">
            <summary>
            Event triggered after the volume changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Html.IGlobalEventHandlers.Waiting">
            <summary>
            Event triggered when waiting for input.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IDocumentStyle">
            <summary>
            Extends the document with further properties for styling.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IDocumentStyle.EnableStyleSheetsForSet(System.String)">
            <summary>
            Enables the stylesheets matching the specified name in the current style
            sheet set, and disables all other style sheets (except those without a
            title, which are always enabled).
            </summary>
            <param name="name">The name of the sheets to enable.</param>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentStyle.StyleSheets">
            <summary>
            Gets a list of stylesheet objects for stylesheets explicitly linked into or embedded in a document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentStyle.SelectedStyleSheetSet">
            <summary>
            Gets or sets the selected set of stylesheets.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentStyle.LastStyleSheetSet">
            <summary>
            Gets the last stylesheet set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentStyle.PreferredStyleSheetSet">
            <summary>
            Gets the preferred stylesheet set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentStyle.StyleSheetSets">
            <summary>
            Gets a live list of all of the currently-available style sheet sets.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.INonElementParentNode">
            <summary>
            Extensions to ParentNode nodes that are not Element nodes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.INonElementParentNode.GetElementById(System.String)">
            <summary>
            Returns the Element whose ID is given by elementId. If no such element exists, returns null.
            The behavior is not defined if more than one element have this ID.
            </summary>
            <param name="elementId">A case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>The matching element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.OpenNew(System.String,System.String)">
            <summary>
            Opens a document stream for writing.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CloseCurrent">
            <summary>
            Finishes writing to a document.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.Write(System.String)">
            <summary>
            Writes text to a document.
            </summary>
            <param name="content">The text to be written on the document.</param>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.WriteLine(System.String)">
            <summary>
            Writes a line of text to a document.
            </summary>
            <param name="content">The text to be written on the document.</param>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.GetElementsByName(System.String)">
            <summary>
            Returns a list of elements with a given name in the HTML document.
            </summary>
            <param name="name">The value of the name attribute of the element.</param>
            <returns>A collection of HTML elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.GetElementsByClassName(System.String)">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="classNames">A string representing the list of class names to match; class names are separated by whitespace.</param>
            <returns>A collection of elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.GetElementsByTagName(System.String)">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns>A collection of elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="namespaceUri">The namespace URI of elements to look for.</param>
            <param name="tagName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <returns>A collection of elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateEvent(System.String)">
            <summary>
            Creates an event of the type specified. 
            </summary>
            <param name="type">Represents the type of event (e.g., uievent, event, customevent, ...) to be created.</param>
            <returns>The event.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateTouch(AngleSharp.DOM.IWindow,AngleSharp.DOM.IEventTarget,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a touch point with the provided data.
            </summary>
            <param name="view">The view that contains the touch point.</param>
            <param name="target">The target that the touch point is over.</param>
            <param name="id">The id of the touch point.</param>
            <param name="pageX">The x-coordinate relative to the page.</param>
            <param name="pageY">The y-coordinate relative to the page.</param>
            <param name="screenX">The x-coordinate relative to the screen.</param>
            <param name="screenY">The y-coordinate relative to the screen.</param>
            <returns>The touch point.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateTouchList(AngleSharp.DOM.Events.ITouch[])">
            <summary>
            Creates a touch list containing the specified touch points.
            </summary>
            <param name="touches">The list of touch points.</param>
            <returns>The created touch list.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateRange">
            <summary>
            Creates a new Range object.
            </summary>
            <returns>The range.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateComment(System.String)">
            <summary>
            Creates a new comment node, and returns it.
            </summary>
            <param name="data">A string containing the data to be added to the Comment.</param>
            <returns>The new comment.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateDocumentFragment">
            <summary>
            Creates an empty DocumentFragment object.
            </summary>
            <returns>The new document fragment.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateElement(System.String)">
            <summary>
            Creates a new element with the given tag name.
            </summary>
            <param name="name">A string that specifies the type of element to be created.</param>
            <returns>The created element object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateElement(System.String,System.String)">
            <summary>
            Creates a new element with the given tag name and namespace URI.
            </summary>
            <param name="namespaceUri">Specifies the namespace URI to associate with the element.</param>
            <param name="name">A string that specifies the type of element to be created.</param>
            <returns>The created element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates a ProcessingInstruction node given the specified name and data strings.
            </summary>
            <param name="target">The target part of the processing instruction.</param>
            <param name="data">The data for the node.</param>
            <returns>The new processing instruction.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateTextNode(System.String)">
            <summary>
            Creates a new text node and returns it.
            </summary>
            <param name="data">A string containing the data to be put in the text node.</param>
            <returns>The created text node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateNodeIterator(AngleSharp.DOM.INode,AngleSharp.DOM.FilterSettings,AngleSharp.DOM.NodeFilter)">
            <summary>
            Creates a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <param name="settings">Indicates which nodes to iterate over.</param>
            <param name="filter">An optional callback function for filtering.</param>
            <returns>The created node NodeIterator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.CreateTreeWalker(AngleSharp.DOM.INode,AngleSharp.DOM.FilterSettings,AngleSharp.DOM.NodeFilter)">
            <summary>
            Creates a new TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal.</param>
            <param name="settings">Indicates which nodes to iterate over.</param>
            <param name="filter">An optional callback function for filtering.</param>
            <returns>The created node TreeWalker.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.Import(AngleSharp.DOM.INode,System.Boolean)">
            <summary>
            Creates a copy of a node from an external document that can be inserted into the current document.
            </summary>
            <param name="externalNode">The node from another document to be imported.</param>
            <param name="deep">Optional argument, indicating whether the descendants of the imported
            node need to be imported.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null,
            since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.Adopt(AngleSharp.DOM.INode)">
            <summary>
            Adopts a node from an external document. The node and its subtree is removed from the document it's
            in (if any), and its ownerDocument is changed to the current document. The node can then be inserted
            into the current document. The new node's parentNode is null, since it has not yet been inserted into
            the document tree.
            </summary>
            <param name="externalNode">The node from another document to be adopted.</param>
            <returns>The adopted node that can be used in the current document.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IDocument.LoadHtml(System.String)">
            <summary>
            Loads the document content from the given url.
            </summary>
            <param name="url">The url that hosts the HTML content.</param>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.All">
            <summary>
            Gets a list of all elements in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Anchors">
            <summary>
            Gets a list of all of the anchors in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Implementation">
            <summary>
            Gets the DOM implementation associated with the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.DesignMode">
            <summary>
            Gets or sets whether the entire document is editable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Direction">
            <summary>
            Gets or sets the value of the dir attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.DocumentUri">
            <summary>
            Gets the URI of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.CharacterSet">
            <summary>
            Gets the character encoding of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.CompatMode">
            <summary>
            Gets a value to indicate whether the document is rendered in Quirks mode (BackComp) 
            or Strict mode (CSS1Compat).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Url">
            <summary>
            Gets a string containing the URL of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.ContentType">
            <summary>
            Gets the Content-Type from the MIME Header of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Doctype">
            <summary>
            Gets the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.DocumentElement">
            <summary>
            Gets the root element of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.LastModified">
            <summary>
            Gets the date of the last modification.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.ReadyState">
            <summary>
            Gets the current ready state of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Location">
            <summary>
            Gets the current location of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Forms">
            <summary>
            Gets the forms in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Images">
            <summary>
            Gets the images in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Scripts">
            <summary>
            Gets the scripts in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Plugins">
            <summary>
            Gets a list of the embed elements within the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Commands">
            <summary>
            Gets a list of the commands (menu item, button, and link elements) within the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Links">
            <summary>
            Gets a collection of all area and anchor elements in a document with a value for the href attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Head">
            <summary>
            Gets or sets the head element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Body">
            <summary>
            Gets the body element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Cookie">
            <summary>
            Gets or sets the document cookie.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Origin">
            <summary>
            Gets the Unicode serialization of document's origin.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Domain">
            <summary>
            Gets or sets the domain portion of the origin of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.Referrer">
            <summary>
            Gets the referer to that pointed to the current document.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IDocument.ReadyStateChanged">
            <summary>
            Event triggered after the ready state changed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.ActiveElement">
            <summary>
            Gets the currently focused element, that is, the element that will get
            keystroke events if the user types any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocument.DefaultView">
            <summary>
            Gets the window object associated with the document or null if none available.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Document.#ctor">
            <summary>
            Creates a new document node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Document.#ctor(System.String)">
            <summary>
            Creates a new document node.
            </summary>
            <param name="source">The HTML source code.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.#ctor(AngleSharp.ITextSource)">
            <summary>
            Creates a new document node.
            </summary>
            <param name="source">The underlying source.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.EnableStyleSheetsForSet(System.String)">
            <summary>
            Enables the stylesheets matching the specified name in the current stylesheet set,
            and disables all other stylesheets (except those without a title, which are always enabled).
            </summary>
            <param name="name">The name of the stylesheet set to enable.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.OpenNew(System.String,System.String)">
            <summary>
            Opens a document stream for writing.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Document.CloseCurrent">
            <summary>
            Finishes writing to a document.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Document.Write(System.String)">
            <summary>
            Writes text to a document.
            </summary>
            <param name="content">The text to be written on the document.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.WriteLine(System.String)">
            <summary>
            Writes a line of text to a document.
            </summary>
            <param name="content">The text to be written on the document.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.GetElementsByName(System.String)">
            <summary>
            Returns a list of elements with a given name in the HTML document.
            </summary>
            <param name="name">The value of the name attribute of the element.</param>
            <returns>A collection of HTML elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.LoadHtml(System.String)">
            <summary>
            Loads the document content from the given URL.
            </summary>
            <param name="url">The URL that hosts the HTML content.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.Import(AngleSharp.DOM.INode,System.Boolean)">
            <summary>
            Creates a copy of a node from an external document that can be inserted into the current document.
            </summary>
            <param name="externalNode">The node from another document to be imported.</param>
            <param name="deep">Optional argument, indicating whether the descendants of the imported
            node need to be imported.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null,
            since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.Adopt(AngleSharp.DOM.INode)">
            <summary>
            Removes the node from its original document and places it in this document.
            </summary>
            <param name="externalNode">The node from another document to be adopted.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null,
            since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateEvent(System.String)">
            <summary>
            Creates an event of the type specified.
            </summary>
            <param name="type">A string that represents the type of event to be created.</param>
            <returns>The created Event object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateNodeIterator(AngleSharp.DOM.INode,AngleSharp.DOM.FilterSettings,AngleSharp.DOM.NodeFilter)">
            <summary>
            Creates a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <param name="settings">Indicates which nodes to iterate over.</param>
            <param name="filter">An optional callback function for filtering.</param>
            <returns>The created node NodeIterator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateTreeWalker(AngleSharp.DOM.INode,AngleSharp.DOM.FilterSettings,AngleSharp.DOM.NodeFilter)">
            <summary>
            Creates a new TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal.</param>
            <param name="settings">Indicates which nodes to iterate over.</param>
            <param name="filter">An optional callback function for filtering.</param>
            <returns>The created node TreeWalker.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateRange">
            <summary>
            Returns a new Range object.
            </summary>
            <returns>The created range object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.Prepend(AngleSharp.DOM.INode[])">
            <summary>
            Prepends nodes to the current document.
            </summary>
            <param name="nodes">The nodes to prepend.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.Append(AngleSharp.DOM.INode[])">
            <summary>
            Appends nodes to current document.
            </summary>
            <param name="nodes">The nodes to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateElement(System.String)">
            <summary>
            Creates a new element with the given tag name.
            </summary>
            <param name="localName">A string that specifies the type of element to be created.</param>
            <returns>The created element object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateElement(System.String,System.String)">
            <summary>
            Creates a new element with the given tag name and namespace URI.
            </summary>
            <param name="namespaceUri">Specifies the namespace URI to associate with the element.</param>
            <param name="qualifiedName">A string that specifies the type of element to be created.</param>
            <returns>The created element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateComment(System.String)">
            <summary>
            Creates a new comment node, and returns it.
            </summary>
            <param name="data">A string containing the data to be added to the Comment.</param>
            <returns>The new comment.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateDocumentFragment">
            <summary>
            Creates an empty DocumentFragment object.
            </summary>
            <returns>A new document fragment.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates a ProcessingInstruction node given the specified name and data strings.
            </summary>
            <param name="target">The target part of the processing instruction.</param>
            <param name="data">The data for the node.</param>
            <returns>A new processing instruction.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CreateTextNode(System.String)">
            <summary>
            Creates a new Text node.
            </summary>
            <param name="data">A string containing the data to be put in the text node.</param>
            <returns>The created Text node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.GetElementById(System.String)">
            <summary>
            Returns the Element whose ID is given by elementId. If no such element exists, returns null.
            The behavior is not defined if more than one element have this ID.
            </summary>
            <param name="elementId">A case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>The matching element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.QuerySelector(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.QuerySelectorAll(System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that match the specified group of selectors.
            </summary>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>A list of nodes.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.GetElementsByClassName(System.String)">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="classNames">A string representing the list of class names to match; class names are separated by whitespace.</param>
            <returns>A collection of elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.GetElementsByTagName(System.String)">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns>A collection of elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="namespaceURI">The namespace URI of elements to look for.</param>
            <param name="tagName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <returns>A collection of elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.ToHtml">
            <summary>
            Returns an HTML-code representation of the document.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.LoadAsync(AngleSharp.Network.IResponse,System.Threading.CancellationToken)">
            <summary>
            (Re-)loads the document with the given response.
            </summary>
            <param name="response">The response to consider.</param>
            <param name="cancelToken">Token for cancellation.</param>
            <returns>The task that builds the document.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Document.CopyDocumentProperties(AngleSharp.DOM.Document,AngleSharp.DOM.Document,System.Boolean)">
            <summary>
            Copies all (Document) properties of the source to the target.
            </summary>
            <param name="source">The source document.</param>
            <param name="target">The target document.</param>
            <param name="deep">Is a deep-copy required?</param>
        </member>
        <member name="P:AngleSharp.DOM.Document.DesignMode">
            <summary>
            Gets or sets if the whole document is editable.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.All">
            <summary>
            Gets a list of all elements in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Anchors">
            <summary>
            Gets a list of all of the anchors in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.ChildElementCount">
            <summary>
            Gets the number of child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Children">
            <summary>
            Gets the child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.FirstElementChild">
            <summary>
            Gets the first child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.LastElementChild">
            <summary>
            Gets the last child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.IsAsync">
            <summary>
            Gets an indicator if loading the document should be asynchronous or synchronous.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Implementation">
            <summary>
            Gets the DOMImplementation object that handles this document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.LastModified">
            <summary>
            Gets a string containing the date and time on which the current document was last modified.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Doctype">
            <summary>
            Gets the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.ContentType">
            <summary>
            Gets the Content-Type from the MIME Header of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.ReadyState">
            <summary>
            Gets or sets the ready state of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.StyleSheets">
            <summary>
            Gets a list of stylesheet objects for stylesheets explicitly linked into or embedded in a document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.StyleSheetSets">
            <summary>
            Gets a live list of all of the currently-available style sheet sets.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Referrer">
            <summary>
            Gets the URI of the page that linked to this page.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Location">
            <summary>
            Gets or sets the URI of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.DocumentUri">
            <summary>
            Gets the URI of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.DefaultView">
            <summary>
            Gets the window object associated with the document or null if none available.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Direction">
            <summary>
            Gets or sets the value of the dir attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.CharacterSet">
            <summary>
            Gets the character encoding of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.DocumentElement">
            <summary>
            Gets the root element of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.ActiveElement">
            <summary>
            Gets the currently focused element, that is, the element that will get keystroke events if the user types any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.CompatMode">
            <summary>
            Gets a value to indicate whether the document is rendered in Quirks mode (BackComp) 
            or Strict mode (CSS1Compat).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Url">
            <summary>
            Gets a string containing the URL of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Forms">
            <summary>
            Gets the forms in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Images">
            <summary>
            Gets the images in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Scripts">
            <summary>
            Gets the scripts in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Plugins">
            <summary>
            Gets a list of the plugin elements within the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Commands">
            <summary>
            Gets a list of the commands (menu item, button, and link elements) within the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Links">
            <summary>
            Gets a collection of all AREA elements and anchor elements in a document with a value for the href attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Head">
            <summary>
            Gets or sets the head element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Body">
            <summary>
            Gets the body element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Cookie">
            <summary>
            Gets or sets the document cookie.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Domain">
            <summary>
            Gets the domain portion of the origin of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Origin">
            <summary>
            Gets the origin of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.SelectedStyleSheetSet">
            <summary>
            Gets or sets the selected stylesheet set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.LastStyleSheetSet">
            <summary>
            Gets the last enabled style sheet set; this property's value changes
            whenever the SelectedStyleSheetSet property is changed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.PreferredStyleSheetSet">
            <summary>
            Gets the preferred style sheet set as set by the page author.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Source">
            <summary>
            Gets the text stream source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Options">
            <summary>
            Gets or sets the options to use.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.Context">
            <summary>
            Gets or sets the browsing context to use, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Document.QuirksMode">
            <summary>
            Gets or sets the status of the quirks mode of the document.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Xml.IXmlDocument">
            <summary>
            The XMLDocument interface represent an XML document. It inherits from
            the generic Document and do not add any specific methods or properties
            to it: nevertheless, several algorithms behave differently with the two
            types of documents.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Xml.IXmlDocument.LoadXml(System.String)">
            <summary>
            Loads the given url as an XmlDocument. Clears the current document
            structure and re-fills it with the contents from the provided url.
            </summary>
            <param name="url">The url to get the new DOM from.</param>
        </member>
        <member name="T:AngleSharp.DOM.Xml.XmlElement">
            <summary>
            The object representation of an XMLElement.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Xml.XmlElement.#ctor(System.String)">
            <summary>
            Creates a new XML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Xml.XmlElement.Create(System.String)">
            <summary>
            Returns a specialized SVGElement instance for the given tag name.
            </summary>
            <param name="tagName">The given tag name.</param>
            <returns>The specialized SVGElement instance.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Xml.XmlElement.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Xml.XmlElement.IdAttribute">
            <summary>
            Gets or sets what the id attribute is.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Angle">
            <summary>
            Represents an angle value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Angle.Zero">
            <summary>
            The zero angle.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Angle.#ctor(System.Single,AngleSharp.Css.Angle.Unit)">
            <summary>
            Creates a new angle value.
            </summary>
            <param name="value">The value of the angle.</param>
            <param name="unit">The unit of the angle.</param>
        </member>
        <member name="M:AngleSharp.Css.Angle.op_Explicit(AngleSharp.Css.Angle)~System.Single">
            <summary>
            Converts the angle to a number representing radians.
            </summary>
            <param name="angle">The angle to convert.</param>
            <returns>The number of radians.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.Tan">
            <summary>
            Computes the tangent of the given angle.
            </summary>
            <returns>The tangent.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.Cos">
            <summary>
            Computes the cosine of the given angle.
            </summary>
            <returns>The cosine.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.Sin">
            <summary>
            Computes the sine of the given angle.
            </summary>
            <returns>The sine.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.Equals(AngleSharp.Css.Angle)">
            <summary>
            Checks for equality with the other angle.
            </summary>
            <param name="other">The angle to compare with.</param>
            <returns>True if both represent the same angle in rad.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.GetHashCode">
            <summary>
            Returns a hash code that defines the current angle.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.ToString">
            <summary>
            Returns a string representing the angle.
            </summary>
            <returns>The unit string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Angle.ToCss">
            <summary>
            Returns a CSS representation of the angle.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Angle.Value">
            <summary>
            Gets the value of angle in radians.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Angle.Type">
            <summary>
            Gets the type of the length.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Angle.UnitString">
            <summary>
            Gets the representation of the unit as a string.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Angle.Unit">
            <summary>
            An enumeration of angle representations.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Angle.Unit.Deg">
            <summary>
            The value is an angle (deg). There are 360 degrees in a full circle.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Angle.Unit.Rad">
            <summary>
            The value is an angle (rad). There are 2*pi radians in a full circle.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Angle.Unit.Grad">
            <summary>
            The value is an angle (grad). There are 400 gradians in a full circle.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Angle.Unit.Turn">
            <summary>
            The value is a turn. There is 1 turn in a full circle.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.FeatureNames">
            <summary>
            A class with all names of the CSS medium features.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinWidth">
            <summary>
            Gets the name of the min-width feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinHeight">
            <summary>
            Gets the name of the min-height feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinDeviceWidth">
            <summary>
            Gets the name of the min-device-width feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinDeviceHeight">
            <summary>
            Gets the name of the min-device-height feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinAspectRatio">
            <summary>
            Gets the name of the min-aspect-ratio feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinResolution">
            <summary>
            Gets the name of the min-resolution feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinColor">
            <summary>
            Gets the name of the min-color feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinColorIndex">
            <summary>
            Gets the name of the min-color-index feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MinMonochrome">
            <summary>
            Gets the name of the min-monochrome feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxWidth">
            <summary>
            Gets the name of the max-width feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxHeight">
            <summary>
            Gets the name of the max-height feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxDeviceWidth">
            <summary>
            Gets the name of the max-device-width feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxDeviceHeight">
            <summary>
            Gets the name of the max-device-height feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxAspectRatio">
            <summary>
            Gets the name of the max-aspect-ratio feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxResolution">
            <summary>
            Gets the name of the max-resolution feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxColor">
            <summary>
            Gets the name of the max-color feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxColorIndex">
            <summary>
            Gets the name of the max-color-index feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.MaxMonochrome">
            <summary>
            Gets the name of the max-monochrome feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Width">
            <summary>
            Gets the name of the width feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Height">
            <summary>
            Gets the name of the height feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.DeviceWidth">
            <summary>
            Gets the name of the device-width feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.DeviceHeight">
            <summary>
            Gets the name of the device-height feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.AspectRatio">
            <summary>
            Gets the name of the aspect-ratio feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Resolution">
            <summary>
            Gets the name of the resolution feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Color">
            <summary>
            Gets the name of the color feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.ColorIndex">
            <summary>
            Gets the name of the color-index feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Monochrome">
            <summary>
            Gets the name of the monochrome feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Orientation">
            <summary>
            Gets the name of the orientation feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Grid">
            <summary>
            Gets the name of the grid feature.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FeatureNames.Scan">
            <summary>
            Gets the name of the scan feature.
            </summary>
        </member>
        <member name="T:AngleSharp.CopyConfiguration">
            <summary>
            Represents a copy of a provided original configuration.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Priority">
            <summary>
            A priority object for comparing priorities.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Priority.Zero">
            <summary>
            Gets the lowest (zero) priority.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Priority.OneTag">
            <summary>
            Gets the priority for having a single tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Priority.OneClass">
            <summary>
            Gets the priority for having a single class.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Priority.OneId">
            <summary>
            Gets the priority for having a single Id.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Priority.Inline">
            <summary>
            Gets the priority for having an inline element.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Priority.#ctor(System.UInt32)">
            <summary>
            Creates a new priority with the given hashcode.
            </summary>
            <param name="priority">The hashcode to use.</param>
        </member>
        <member name="M:AngleSharp.Css.Priority.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new priority with the given values.
            </summary>
            <param name="inlines">The number of inlines.</param>
            <param name="ids">The number of ids.</param>
            <param name="classes">The number of classes.</param>
            <param name="tags">The number of tags.</param>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_Addition(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Adds the two given priorities.
            </summary>
            <param name="a">The first priority.</param>
            <param name="b">The second priority.</param>
            <returns>The result of adding the two priorities.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_Equality(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Compares two priorities and returns a boolean indicating if the two do match.
            </summary>
            <param name="a">The first priority to use.</param>
            <param name="b">The second priority to use.</param>
            <returns>True if both priorities are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_GreaterThan(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Compares two priorities and returns a boolean indicating if the first one is greater.
            </summary>
            <param name="a">The first priority to use.</param>
            <param name="b">The second priority to use.</param>
            <returns>True if the first priority is higher, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_GreaterThanOrEqual(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Compares two priorities and returns a boolean indicating if the first one is greater or equal.
            </summary>
            <param name="a">The first priority to use.</param>
            <param name="b">The second priority to use.</param>
            <returns>True if the first priority is higher or equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_LessThan(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Compares two priorities and returns a boolean indicating if the second one is greater.
            </summary>
            <param name="a">The first priority to use.</param>
            <param name="b">The second priority to use.</param>
            <returns>True if the second priority is higher, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_LessThanOrEqual(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Compares two priorities and returns a boolean indicating if the second one is greater or equal.
            </summary>
            <param name="a">The first priority to use.</param>
            <param name="b">The second priority to use.</param>
            <returns>True if the second priority is higher or equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.op_Inequality(AngleSharp.Css.Priority,AngleSharp.Css.Priority)">
            <summary>
            Compares two priorities and returns a boolean indicating if the two do not match.
            </summary>
            <param name="a">The first priority to use.</param>
            <param name="b">The second color to use.</param>
            <returns>True if both priorities are not equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.Equals(AngleSharp.Css.Priority)">
            <summary>
            Checks two priorities for equality.
            </summary>
            <param name="other">The other priority.</param>
            <returns>True if both priorities or equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.GetHashCode">
            <summary>
            Returns a hash code that defines the current priority.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Priority.ToString">
            <summary>
            Returns a string representing the priority.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:AngleSharp.Css.Priority.Tags">
            <summary>
            Gets the number of tags for this priority.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Priority.Classes">
            <summary>
            Gets the number of classes for this priority.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Priority.Ids">
            <summary>
            Gets the number of ids for this priority.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Priority.Inlines">
            <summary>
            Gets the number of inlines for this priority.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Shape">
            <summary>
            Represents a CSS shape.
            https://developer.mozilla.org/en-US/docs/Web/CSS/shape
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Shape.#ctor(AngleSharp.Css.Length,AngleSharp.Css.Length,AngleSharp.Css.Length,AngleSharp.Css.Length)">
            <summary>
            Creates a new shape value.
            </summary>
            <param name="top">The top position.</param>
            <param name="right">The right position.</param>
            <param name="bottom">The bottom position.</param>
            <param name="left">The left position.</param>
        </member>
        <member name="M:AngleSharp.Css.Shape.ToCss">
            <summary>
            Returns the string representation of the function in CSS code.
            </summary>
            <returns>The CSS code to construct this value.</returns>
        </member>
        <member name="P:AngleSharp.Css.Shape.Top">
            <summary>
            Gets the top side.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shape.Right">
            <summary>
            Gets the right side.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shape.Bottom">
            <summary>
            Gets the bottom side.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Shape.Left">
            <summary>
            Gets the left side.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.CubicBezierTransitionFunction">
            <summary>
            Specifies a cubic-bezier curve. 
            </summary>
        </member>
        <member name="T:AngleSharp.Css.TransitionFunction">
            <summary>
            Represents a general transform function.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.TransitionFunction.ToCss">
            <summary>
            Returns the CSS representation of the function.
            </summary>
            <returns>The string representing the CSS code.</returns>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.Ease">
            <summary>
            Gets the pre-defined ease function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.EaseIn">
            <summary>
            Gets the pre-defined ease-in function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.EaseInOut">
            <summary>
            Gets the pre-defined ease-in-out function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.EaseOut">
            <summary>
            Gets the pre-defined ease-out function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.Linear">
            <summary>
            Gets the pre-defined linear function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.StepStart">
            <summary>
            Gets the pre-defined step-start function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransitionFunction.StepEnd">
            <summary>
            Gets the pre-defined step-end function.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.CubicBezierTransitionFunction.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The four values specify points P1 and P2 of the curve as (x1, y1, x2, y2). Both
            x values must be in the range [0, 1] or the definition is invalid. The y values
            can exceed this range.
            </summary>
            <param name="x1">The x-coordinate of P1.</param>
            <param name="y1">The y-coordinate of P1.</param>
            <param name="x2">The x-coordinate of P2.</param>
            <param name="y2">The y-coordinate of P2.</param>
        </member>
        <member name="M:AngleSharp.Css.CubicBezierTransitionFunction.ToCss">
            <summary>
            Returns the CSS representation of the cubic bezier timing function.
            </summary>
            <returns>A string that resembles CSS code.</returns>
        </member>
        <member name="P:AngleSharp.Css.CubicBezierTransitionFunction.X1">
            <summary>
            Gets the x-coordinate of the p1.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.CubicBezierTransitionFunction.Y1">
            <summary>
            Gets the y-coordinate of the p1.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.CubicBezierTransitionFunction.X2">
            <summary>
            Gets the x-coordinate of the p2.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.CubicBezierTransitionFunction.Y2">
            <summary>
            Gets the y-coordinate of the p2.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.TransformMatrix">
            <summary>
            Represents a transformation matrix value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransformMatrix.Zero">
            <summary>
            Gets the zero matrix.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.TransformMatrix.One">
            <summary>
            Gets the unity matrix.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.TransformMatrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a (3D) transformation matrix.
            </summary>
            <param name="m11">The (1, 1) entry.</param>
            <param name="m12">The (1, 2) entry.</param>
            <param name="m13">The (1, 3) entry.</param>
            <param name="m21">The (2, 1) entry.</param>
            <param name="m22">The (2, 2) entry.</param>
            <param name="m23">The (2, 3) entry.</param>
            <param name="m31">The (3, 1) entry.</param>
            <param name="m32">The (3, 2) entry.</param>
            <param name="m33">The (3, 3) entry.</param>
            <param name="tx">The x-translation entry.</param>
            <param name="ty">The y-translation entry.</param>
            <param name="tz">The z-translation entry.</param>
        </member>
        <member name="M:AngleSharp.Css.TransformMatrix.Equals(AngleSharp.Css.TransformMatrix)">
            <summary>
            Checks for equality with the given other transformation matrix.
            </summary>
            <param name="other">The other transformation matrix.</param>
            <returns>True if all elements are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.TransformMatrix.op_Multiply(AngleSharp.Css.TransformMatrix,AngleSharp.Css.TransformMatrix)">
            <summary>
            Computes the combination of two transform matrices.
            </summary>
            <param name="a">The first matrix (applied later).</param>
            <param name="b">The original transform matrix (has been applied).</param>
            <returns>The combination of both matrices.</returns>
        </member>
        <member name="M:AngleSharp.Css.TransformMatrix.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.TransformMatrix.GetHashCode">
            <summary>
            Returns a hash code that defines the current length.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.TransformMatrix.ToCss">
            <summary>
            Returns the CSS representation of the transformation matrix.
            </summary>
            <returns>The string containing the CSS function.</returns>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M11">
            <summary>
            Gets the element of the 1st row, 1st column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M12">
            <summary>
            Gets the element of the 1st row, 2nd column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M13">
            <summary>
            Gets the element of the 1st row, 3rd column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M21">
            <summary>
            Gets the element of the 2nd row, 1st column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M22">
            <summary>
            Gets the element of the 2nd row, 2nd column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M23">
            <summary>
            Gets the element of the 2nd row, 3rd column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M31">
            <summary>
            Gets the element of the 3rd row, 1st column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M32">
            <summary>
            Gets the element of the 3rd row, 2nd column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.M33">
            <summary>
            Gets the element of the 3rd row, 3rd column.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.Tx">
            <summary>
            Gets the x-element of the translation vector.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.Ty">
            <summary>
            Gets the y-element of the translation vector.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.TransformMatrix.Tz">
            <summary>
            Gets the z-element of the translation vector.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.StepsTransitionFunction">
            <summary>
            Specifies a stepping function, described above, taking two parameters.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.StepsTransitionFunction.#ctor(System.Int32,System.Boolean)">
            <summary>
            The first parameter specifies the number of intervals in the function. 
            The second parameter specifies the point at which the change of values
            occur within the interval. 
            </summary>
            <param name="intervals">It must be a positive integer (greater than 0).</param>
            <param name="start">Optional: If not specified then the change occurs at the end.</param>
        </member>
        <member name="M:AngleSharp.Css.StepsTransitionFunction.ToCss">
            <summary>
            Returns the CSS representation of the steps timing function.
            </summary>
            <returns>A string that resembles CSS code.</returns>
        </member>
        <member name="P:AngleSharp.Css.StepsTransitionFunction.Intervals">
            <summary>
            Gets the numbers of intervals.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.StepsTransitionFunction.IsStart">
            <summary>
            Gets if the steps should occur in the beginning.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.CssUrl">
            <summary>
            Wraps a string as a CSS url value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.CssUrl.#ctor(System.String)">
            <summary>
            Wraps the given string.
            </summary>
            <param name="url">The specified url.</param>
        </member>
        <member name="M:AngleSharp.Css.CssUrl.op_Explicit(System.String)~AngleSharp.Css.CssUrl">
            <summary>
            Defines an explicit cast from a string to a CssUrl.
            </summary>
            <param name="str">The string to wrap.</param>
            <returns>The wrapped string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssUrl.op_Implicit(AngleSharp.Css.CssUrl)~System.String">
            <summary>
            Defines an implicit cast from a CssUrl to a string.
            </summary>
            <param name="str">The string to unwrap.</param>
            <returns>The original string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssUrl.ToCss">
            <summary>
            Returns the CSS standard represenation of the contained string.
            </summary>
            <returns>A string that contains the CSS code to create the value.</returns>
        </member>
        <member name="T:AngleSharp.Parser.TextPosition">
            <summary>
            The position in the source code.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.TextPosition.#ctor(System.UInt16,System.UInt16,System.Int32)">
            <summary>
            Creates a new text position.
            </summary>
            <param name="line">The line of the character.</param>
            <param name="column">The column of the character.</param>
            <param name="position">The index of the character.</param>
        </member>
        <member name="P:AngleSharp.Parser.TextPosition.Line">
            <summary>
            Gets the line within the document.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.TextPosition.Column">
            <summary>
            Gets the column within the document.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.TextPosition.Position">
            <summary>
            Gets the position within the source.
            </summary>
        </member>
        <member name="T:AngleSharp.Url">
            <summary>
            Represents an Url class according to RFC3986.
            This is the base for all internal Url manipulation.
            </summary>
        </member>
        <member name="M:AngleSharp.Url.#ctor(System.String)">
            <summary>
            Creates a new Url from the given string.
            </summary>
            <param name="address">The address to represent.</param>
        </member>
        <member name="M:AngleSharp.Url.#ctor(AngleSharp.Url,System.String)">
            <summary>
            Creates a new absolute Url from the relative Url with the given base address.
            </summary>
            <param name="baseAddress">The base address to use.</param>
            <param name="relativeAddress">The relative address to represent.</param>
        </member>
        <member name="M:AngleSharp.Url.#ctor(AngleSharp.Url)">
            <summary>
            Creates a new Url by copying the other Url.
            </summary>
            <param name="address">The address to copy.</param>
        </member>
        <member name="M:AngleSharp.Url.#ctor(System.Uri)">
            <summary>
            Creates a new Url using the original string of the given Uri.
            </summary>
            <param name="address">The address to represent.</param>
        </member>
        <member name="M:AngleSharp.Url.op_Implicit(AngleSharp.Url)~System.Uri">
            <summary>
            Converts the given Url to an Uri.
            </summary>
            <param name="value">The Url to convert.</param>
            <returns>The Uri instance.</returns>
        </member>
        <member name="M:AngleSharp.Url.Serialize">
            <summary>
            Returns the string representation of the current location.
            </summary>
            <returns>The string that equals the hyper reference.</returns>
        </member>
        <member name="P:AngleSharp.Url.Origin">
            <summary>
            Gets the origin of the stored url.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.IsInvalid">
            <summary>
            Gets if the URL parsing resulted in an error.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.IsRelative">
            <summary>
            Gets if the stored url is relative.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.IsAbsolute">
            <summary>
            Gets if the stored url is absolute.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.UserName">
            <summary>
            Gets or sets the username for authorization.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Password">
            <summary>
            Gets or sets the password for authorization.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Data">
            <summary>
            Gets the additional stored data of the URL.
            This is data that could not be assigned.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Fragment">
            <summary>
            Gets or sets the fragment.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Host">
            <summary>
            Gets or sets the host, e.g. "localhost:8800" or "www.w3.org".
            </summary>
        </member>
        <member name="P:AngleSharp.Url.HostName">
            <summary>
            Gets or sets the host name, e.g. "localhost" or "www.w3.org".
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Href">
            <summary>
            Gets or sets the hyper reference, i.e. the full path.
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Path">
            <summary>
            Gets or sets the pathname, e.g. "mypath".
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Port">
            <summary>
            Gets or sets the port, e.g. "8800".
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Scheme">
            <summary>
            Gets or sets the protocol, e.g. "http".
            </summary>
        </member>
        <member name="P:AngleSharp.Url.Query">
            <summary>
            Gets or sets the query.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.StyleExtensions">
            <summary>
            A set of extension methods for style / related methods.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.ExtendWith(AngleSharp.DOM.Css.CssPropertyBag,AngleSharp.DOM.Css.CSSStyleDeclaration,AngleSharp.Css.Priority)">
            <summary>
            Extends the given bag with the set properties of the specified
            styling declaration.
            </summary>
            <param name="bag">The bag to modify.</param>
            <param name="styling">The styling properties to use.</param>
            <param name="priority">Sets the priority of the new properties.</param>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.InheritFrom(AngleSharp.DOM.Css.CssPropertyBag,AngleSharp.DOM.IElement,AngleSharp.DOM.IWindow)">
            <summary>
            Inherits the unspecified properties from the element's parents.
            </summary>
            <param name="bag">The bag to modify.</param>
            <param name="element">The element that has unresolved properties.</param>
            <param name="window">The associated window object.</param>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.ComputeDeclarations(AngleSharp.DOM.IWindow,AngleSharp.DOM.IElement)">
            <summary>
            Computes the declarations for the given element in the specified window.
            </summary>
            <param name="window">The context of the element.</param>
            <param name="element">The element that is questioned.</param>
            <returns>The style declaration containing all the declarations.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.GetAllStyleSheetSets(AngleSharp.DOM.IStyleSheetList)">
            <summary>
            Gets all possible style sheet sets from the list of style sheets.
            </summary>
            <param name="sheets">The list of style sheets.</param>
            <returns>An enumeration over all sets.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.GetEnabledStyleSheetSets(AngleSharp.DOM.IStyleSheetList)">
            <summary>
            Gets the enabled style sheet sets from the list of style sheets.
            </summary>
            <param name="sheets">The list of style sheets.</param>
            <returns>An enumeration over the enabled sets.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.EnableStyleSheetSet(AngleSharp.DOM.IStyleSheetList,System.String)">
            <summary>
            Sets the enabled style sheet sets in the list of style sheets.
            </summary>
            <param name="sheets">The list of style sheets.</param>
            <param name="name">The name of the set to enabled.</param>
        </member>
        <member name="M:AngleSharp.Extensions.StyleExtensions.GetStyleSheets(AngleSharp.DOM.INode)">
            <summary>
            Gets an enumeration over all the stylesheets from the given parent.
            </summary>
            <param name="parent">The parent to use.</param>
            <returns>The enumeration over all stylesheets.</returns>
        </member>
        <member name="T:AngleSharp.TextSource">
            <summary>
            A stream abstraction to handle encoding and more.
            </summary>
        </member>
        <member name="M:AngleSharp.TextSource.#ctor(System.String)">
            <summary>
            Creates a new text source from a string. No
            underlying stream will be used.
            </summary>
            <param name="source">The data source.</param>
        </member>
        <member name="M:AngleSharp.TextSource.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new text source from a string. The underlying stream is used
            as an unknown data source.
            </summary>
            <param name="baseStream">The underlying stream as data source.</param>
            <param name="encoding">The initial encoding. Otherwise UTF-8.</param>
        </member>
        <member name="M:AngleSharp.TextSource.ReadCharacter">
            <summary>
            Reads the next character from the buffer or underlying stream, if any.
            </summary>
            <returns>The next character.</returns>
        </member>
        <member name="M:AngleSharp.TextSource.ReadCharacters(System.Int32)">
            <summary>
            Reads the upcoming numbers of characters from the buffer or underlying stream, if any.
            </summary>
            <param name="characters">The number of characters to read.</param>
            <returns>The string with the next characters.</returns>
        </member>
        <member name="M:AngleSharp.TextSource.ReadCharacterAsync(System.Threading.CancellationToken)">
            <summary>
            Reads the next character from the buffer or underlying stream asynchronously, if any.
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The task resulting in the next character.</returns>
        </member>
        <member name="M:AngleSharp.TextSource.ReadCharactersAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Reads the upcoming numbers of characters from the buffer or underlying stream asynchronously.
            </summary>
            <param name="characters">The number of characters to read.</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The string with the next characters.</returns>
        </member>
        <member name="M:AngleSharp.TextSource.InsertText(System.String)">
            <summary>
            Inserts the given content at the current insertation mark.
            The insertation mark won't be changed.
            </summary>
            <param name="content">The content to insert.</param>
        </member>
        <member name="P:AngleSharp.TextSource.Item(System.Int32)">
            <summary>
            Gets the character at the given position in the text buffer.
            </summary>
            <param name="index">The index of the character.</param>
            <returns>The character.</returns>
        </member>
        <member name="P:AngleSharp.TextSource.CurrentEncoding">
            <summary>
            Gets or sets the encoding to use.
            </summary>
        </member>
        <member name="P:AngleSharp.TextSource.Index">
            <summary>
            Gets or sets the current index of the insertation and read point.
            </summary>
        </member>
        <member name="P:AngleSharp.TextSource.Length">
            <summary>
            Gets the length of the text buffer.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.CssAttr">
            <summary>
            Wraps a string as a CSS attribute value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.CssAttr.#ctor(System.String)">
            <summary>
            Wraps the given string.
            </summary>
            <param name="name">The name of the attribute to consider.</param>
        </member>
        <member name="M:AngleSharp.Css.CssAttr.op_Explicit(System.String)~AngleSharp.Css.CssAttr">
            <summary>
            Defines an explicit cast from a string to a CssAttr.
            </summary>
            <param name="str">The string to wrap.</param>
            <returns>The wrapped string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssAttr.op_Implicit(AngleSharp.Css.CssAttr)~System.String">
            <summary>
            Defines an implicit cast from a CssAttr to a string.
            </summary>
            <param name="str">The string to unwrap.</param>
            <returns>The original string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssAttr.ToCss">
            <summary>
            Returns the CSS standard represenation of the contained string.
            </summary>
            <returns>A string that contains the CSS code to create the value.</returns>
        </member>
        <member name="T:AngleSharp.Css.CssIdentifier">
            <summary>
            Wraps a string as a CSS identifier value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.CssIdentifier.#ctor(System.String)">
            <summary>
            Wraps the given string.
            </summary>
            <param name="token">The identifier token.</param>
        </member>
        <member name="M:AngleSharp.Css.CssIdentifier.op_Explicit(System.String)~AngleSharp.Css.CssIdentifier">
            <summary>
            Defines an explicit cast from a string to a CssIdentifier.
            </summary>
            <param name="str">The string to wrap.</param>
            <returns>The wrapped string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssIdentifier.op_Implicit(AngleSharp.Css.CssIdentifier)~System.String">
            <summary>
            Defines an implicit cast from a CssIdentifier to a string.
            </summary>
            <param name="str">The string to unwrap.</param>
            <returns>The original string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssIdentifier.ToCss">
            <summary>
            Returns the CSS standard represenation of the contained string.
            </summary>
            <returns>A string that contains the CSS code to create the value.</returns>
        </member>
        <member name="T:AngleSharp.Css.CssImages">
            <summary>
            Wraps a list of urls as a CSS Images value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.CssImages.#ctor(System.Collections.Generic.IEnumerable{AngleSharp.Url})">
            <summary>
            Wraps the given list of image urls.
            </summary>
            <param name="urls">The urls to consider.</param>
        </member>
        <member name="M:AngleSharp.Css.CssImages.ToCss">
            <summary>
            Returns the CSS standard represenation of the contained string.
            </summary>
            <returns>A string that contains the CSS code to create the value.</returns>
        </member>
        <member name="P:AngleSharp.Css.CssImages.Urls">
            <summary>
            Gets the list of urls forming the image.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.CssString">
            <summary>
            Wraps a string as a CSS string value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.CssString.#ctor(System.String)">
            <summary>
            Wraps the given string.
            </summary>
            <param name="value">The value of the string.</param>
        </member>
        <member name="M:AngleSharp.Css.CssString.op_Explicit(System.String)~AngleSharp.Css.CssString">
            <summary>
            Defines an explicit cast from a string to a CssString.
            </summary>
            <param name="str">The string to wrap.</param>
            <returns>The wrapped string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssString.op_Implicit(AngleSharp.Css.CssString)~System.String">
            <summary>
            Defines an implicit cast from a CssString to a string.
            </summary>
            <param name="str">The string to unwrap.</param>
            <returns>The original string.</returns>
        </member>
        <member name="M:AngleSharp.Css.CssString.ToCss">
            <summary>
            Returns the CSS standard represenation of the contained string.
            </summary>
            <returns>A string that contains the CSS code to create the value.</returns>
        </member>
        <member name="T:AngleSharp.Infrastructure.BaseOptions">
            <summary>
            A shared set of options. Just plain data transfer.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.BaseOptions.Context">
            <summary>
            Gets or sets the context of the document.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.BaseOptions.Document">
            <summary>
            Gets or sets the assigned document.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.CssStyleEngine">
            <summary>
            The CSS style engine for creating CSSStyleSheet instances.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.IStyleEngine">
            <summary>
            Defines the API of an available engine for computing
            the stylesheet.
            </summary>
        </member>
        <member name="M:AngleSharp.Infrastructure.IStyleEngine.Parse(System.String,AngleSharp.Infrastructure.StyleOptions)">
            <summary>
            Creates a style sheet for the given source.
            </summary>
            <param name="source">The source code describing the style sheet.</param>
            <param name="options">The options with the parameters for evaluating the style.</param>
            <returns>The created style sheet.</returns>
        </member>
        <member name="M:AngleSharp.Infrastructure.IStyleEngine.Parse(AngleSharp.Network.IResponse,AngleSharp.Infrastructure.StyleOptions)">
            <summary>
            Creates a style sheet for the given response from a request.
            </summary>
            <param name="response">The response with the stream representing the source of the stylesheet.</param>
            <param name="options">The options with the parameters for evaluating the style.</param>
            <returns>The created style sheet.</returns>
        </member>
        <member name="P:AngleSharp.Infrastructure.IStyleEngine.Type">
            <summary>
            The type of the styling set.
            </summary>
        </member>
        <member name="M:AngleSharp.Infrastructure.CssStyleEngine.Parse(System.String,AngleSharp.Infrastructure.StyleOptions)">
            <summary>
            Creates a style sheet for the given source.
            </summary>
            <param name="source">The source code describing the style sheet.</param>
            <param name="options">The options with the parameters for evaluating the style.</param>
            <returns>The created style sheet.</returns>
        </member>
        <member name="M:AngleSharp.Infrastructure.CssStyleEngine.Parse(AngleSharp.Network.IResponse,AngleSharp.Infrastructure.StyleOptions)">
            <summary>
            Creates a style sheet for the given response from a request.
            </summary>
            <param name="response">The response with the stream representing the source of the stylesheet.</param>
            <param name="options">The options with the parameters for evaluating the style.</param>
            <returns>The created style sheet.</returns>
        </member>
        <member name="P:AngleSharp.Infrastructure.CssStyleEngine.Type">
            <summary>
            Gets the type for the CSS style engine.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.IAudioService">
            <summary>
            Repesents a service to create a sound player.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.IResourceService`1">
            <summary>
            Repesents a service to create a sound player.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.IService">
            <summary>
            Defines the basic interface for a common service.
            </summary>
        </member>
        <member name="M:AngleSharp.Infrastructure.IResourceService`1.SupportsType(System.String)">
            <summary>
            Checks if the given type is supported.
            </summary>
            <param name="mimeType">The type of the resource.</param>
            <returns>True if the type is supported, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Infrastructure.IResourceService`1.CreateAsync(AngleSharp.Network.IResponse,System.Threading.CancellationToken)">
            <summary>
            Tries to create an inspector for the given resource.
            </summary>
            <param name="response">The response that contains the stream to the resource.</param>
            <param name="cancel">The token for cancelling the task.</param>
            <returns>A task that finishes with an inspector for the resource.</returns>
        </member>
        <member name="T:AngleSharp.Infrastructure.ICookieService">
            <summary>
            Defines methods to evaluate and store cookies.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.ICookieService.Item(System.String)">
            <summary>
            Gets or sets the cookie value for the given address.
            </summary>
            <param name="origin">The origin of the cookie (Url).</param>
            <returns>The value of the cookie.</returns>
        </member>
        <member name="T:AngleSharp.Infrastructure.IEventService">
            <summary>
            Represents an event loop.
            </summary>
        </member>
        <member name="M:AngleSharp.Infrastructure.IEventService.Enqueue(System.Action)">
            <summary>
            Enqueues a given action to the event loop.
            </summary>
            <param name="action">The action to enqueue.</param>
        </member>
        <member name="T:AngleSharp.Infrastructure.IExtensionService`1">
            <summary>
            Represents an extension offering a special kind of (DOM) interface.
            </summary>
            <typeparam name="TInterface">The interface to offer.</typeparam>
        </member>
        <member name="P:AngleSharp.Infrastructure.IExtensionService`1.Item(System.String)">
            <summary>
            Gets the interface specialized for the given address.
            </summary>
            <param name="origin">The origin of the requesting page.</param>
            <returns>The instance.</returns>
        </member>
        <member name="T:AngleSharp.Infrastructure.IImageService">
            <summary>
            Repesents a service to create / inspect an image.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.IScriptEngine">
            <summary>
            Defines the API of an available engine for running
            scripts provided in the code.
            </summary>
        </member>
        <member name="M:AngleSharp.Infrastructure.IScriptEngine.Evaluate(System.String,AngleSharp.Infrastructure.ScriptOptions)">
            <summary>
            Evaluates the given source with the specified options.
            </summary>
            <param name="source">The source code of the script.</param>
            <param name="options">The options with the parameters for invoking the script.</param>
        </member>
        <member name="M:AngleSharp.Infrastructure.IScriptEngine.Evaluate(AngleSharp.Network.IResponse,AngleSharp.Infrastructure.ScriptOptions)">
            <summary>
            Evaluates a script that emerges from the network response with the specified options.
            </summary>
            <param name="response">The response with the stream representing the source of the script.</param>
            <param name="options">The options with the parameters for invoking the script.</param>
        </member>
        <member name="P:AngleSharp.Infrastructure.IScriptEngine.Type">
            <summary>
            The type of the scripting language.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.IVideoService">
            <summary>
            Repesents a service to create a video player.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.ScriptOptions">
            <summary>
            Transport object for running scripts.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.ScriptOptions.Element">
            <summary>
            Gets or sets the script element that triggered the invocation.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.ScriptOptions.Encoding">
            <summary>
            Gets or sets the encoding that has been selected for the script.
            </summary>
        </member>
        <member name="T:AngleSharp.Infrastructure.StyleOptions">
            <summary>
            Transport object for evaluating stylesheets.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.StyleOptions.Element">
            <summary>
            Gets or sets the element that triggered the evaluation.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.StyleOptions.Title">
            <summary>
            Gets or sets the title of the stylesheet.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.StyleOptions.IsDisabled">
            <summary>
            Gets or sets if the stylesheet is disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.Infrastructure.StyleOptions.IsAlternate">
            <summary>
            Gets or sets if the stylesheet is an alternate.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssCharsetRule">
            <summary>
            Represents a @charset CSS rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssRule">
            <summary>
            Represents the base interface for a CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRule.Type">
            <summary>
            Gets the type constant indicating the type of CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRule.CssText">
            <summary>
            Gets the textual representation of the rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRule.Parent">
            <summary>
            Gets the containing (parent) rule, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRule.Owner">
            <summary>
            Gets the CSSStyleSheet object that owns this rule, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCharsetRule.CharacterSet">
            <summary>
            Gets or sets the character set to use.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssConditionRule">
            <summary>
            Represents all the "conditional" at-rules, which consist
            of a condition and a statement block.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssGroupingRule">
            <summary>
            Represents any at (grouping) CSS rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssGroupingRule.Insert(System.String,System.Int32)">
            <summary>
            Used to insert a new rule into the media block.
            </summary>
            <param name="rule">
            The parsable text representing the rule. For rule sets this contains both
            the selector and the style declaration. For at-rules, this specifies both
            the at-identifier and the rule content.</param>
            <param name="index">
            The index within the media block's rule collection of the rule before
            which to insert the specified rule.</param>
            <returns>
            The index within the media block's rule collection of the newly inserted rule.
            </returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssGroupingRule.RemoveAt(System.Int32)">
            <summary>
            Used to delete a rule from the media block.
            </summary>
            <param name="index">
            The index within the media block's rule collection of the rule to remove.
            </param>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssGroupingRule.Rules">
            <summary>
            Gets a list of all CSS rules contained within the grouping block.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssConditionRule.ConditionText">
            <summary>
            Gets or sets the text representation of the condition.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssCounterStyleRule">
            <summary>
            Represents the counter-style CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Name">
            <summary>
            Gets or sets the name of the counter.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.System">
            <summary>
            Gets or sets the counter system string.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Symbols">
            <summary>
            Gets or sets the used symbols.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.AdditiveSymbols">
            <summary>
            Gets or sets the additional symbols.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Negative">
            <summary>
            Gets or sets the prefix for negative values.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Prefix">
            <summary>
            Gets or sets the general prefix.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Suffix">
            <summary>
            Gets or sets the suffix to use.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Range">
            <summary>
            Gets or sets the range setting.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Pad">
            <summary>
            Gets or sets the padding of a value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.SpeakAs">
            <summary>
            Gets or sets the spoken value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssCounterStyleRule.Fallback">
            <summary>
            Gets or sets the fallback option.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssDocumentRule">
            <summary>
            Represents a document CSS rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontFaceRule">
            <summary>
            Represents a @font-face CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Family">
            <summary>
            Gets or sets the font-family.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Source">
            <summary>
            Gets or sets the source of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Style">
            <summary>
            Gets or sets the style of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Weight">
            <summary>
            Gets or sets the weight of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Stretch">
            <summary>
            Gets or sets the stretch value of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Range">
            <summary>
            Gets or sets the unicode range of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Variant">
            <summary>
            Gets or sets the variant of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFaceRule.Features">
            <summary>
            Gets or sets the feature settings of the font.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssFontFeatureValuesRule">
            <summary>
            Represents a @font-feature-values CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssFontFeatureValuesRule.Family">
            <summary>
            Gets or sets the list of one or more font families for
            which a given set of feature values is defined.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssImportRule">
            <summary>
            Represents the @import CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssImportRule.Href">
            <summary>
            Gets the location of the style sheet to be imported. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssImportRule.Media">
            <summary>
            Gets a list of media types for which this style sheet may be used.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssImportRule.Sheet">
            <summary>
            Gets the style sheet referred to by this rule, if it has been loaded. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssKeyframeRule">
            <summary>
            Represents the style rule for a single key.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssKeyframeRule.KeyText">
            <summary>
            Gets or sets the keyframe selector as a comma-separated list of percentage values.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssKeyframeRule.Style">
            <summary>
            Gets the style associated with this keyframe.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssKeyframesRule">
            <summary>
            Represents a complete set of keyframes for a single animation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssKeyframesRule.Add(System.String)">
            <summary>
            Inserts a new keyframe rule into the current CSSKeyframesRule.
            </summary>
            <param name="rule">
            A string containing a keyframe in the same format as an entry
            of a @keyframes at-rule.
            </param>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssKeyframesRule.Remove(System.String)">
            <summary>
            Deletes a keyframe rule from the current CSSKeyframesRule. 
            </summary>
            <param name="key">
            The index of the keyframe to be deleted, expressed as a string
            resolving as a number between 0 and 1.
            </param>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssKeyframesRule.Find(System.String)">
            <summary>
            Returns a keyframe rule corresponding to the given key.
            </summary>
            <param name="key">
            A string containing an index of the keyframe to be returned, 
            resolving to a number between 0 and 1.
            </param>
            <returns>The keyframe or null.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssKeyframesRule.Name">
            <summary>
            Gets or sets the name of the animation, used by the animation-name property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssKeyframesRule.Rules">
            <summary>
            Gets a CSSRuleList of the CSS rules in the media rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMarginRule">
            <summary>
            Represents a margin CSS rule (e.g. in an @page at-rule).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMarginRule.Name">
            <summary>
            Gets the name of the margin rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMarginRule.Style">
            <summary>
            Gets the style object for the margin at-rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssMediaRule">
            <summary>
            Represents a @media CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssMediaRule.Media">
            <summary>
            Gets a list of media types for this rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssNamespaceRule">
            <summary>
            Represents a namespace declaration CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssNamespaceRule.NamespaceUri">
            <summary>
            Gets the URI of the given namespace.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssNamespaceRule.Prefix">
            <summary>
            Gets the prefix associated to this namespace.
            If there is no such prefix, returns null.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssPageRule">
            <summary>
            Represents the @page CSS rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPageRule.SelectorText">
            <summary>
            Gets or sets the textual representation of the selector for this rule, e.g. "h1,h2".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssPageRule.Style">
            <summary>
            Gets the CSSStyleDeclaration object for the rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssRuleList">
            <summary>
            Represents a list of CSS rules.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRuleList.Item(System.Int32)">
            <summary>
            Gets a CSS rule at the specified index.
            </summary>
            <param name="index">The 0-based index of the rule.</param>
            <returns>The CSS rule at the given index, if any.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssRuleList.Length">
            <summary>
            Gets the number of elements in the list of rules.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssStyleDeclaration">
            <summary>
            Represents a CSS declaration block, including its underlying state, where
            this underlying state depends upon the source of the CSSStyleDeclaration instance.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssStyleDeclaration.GetPropertyValue(System.String)">
            <summary>
            Gets the value of a property with the given name.
            </summary>
            <param name="propertyName">The name of the property to get the value of.</param>
            <returns>A string or null if nothing has been set.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssStyleDeclaration.GetPropertyPriority(System.String)">
            <summary>
            Returns the optional priority, "important" or null, if no priority has been set.
            </summary>
            <param name="propertyName">The name of the property to get the priority of.</param>
            <returns>A priority or null.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssStyleDeclaration.SetProperty(System.String,System.String,System.String)">
            <summary>
            Sets a property with the given name and value. Optionally the priority can be
            set to "important" or left empty.
            </summary>
            <param name="propertyName">The property's name.</param>
            <param name="propertyValue">The value of the property.</param>
            <param name="priority">The optional priority.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssStyleDeclaration.RemoveProperty(System.String)">
            <summary>
            Removes the property with the given name and returns its value.
            </summary>
            <param name="propertyName">The name of the property to be removed.</param>
            <returns>The value of the deleted property.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Item(System.Int32)">
            <summary>
            Gets the name of the property with the specified index.
            </summary>
            <param name="index">The index of the property to retrieve.</param>
            <returns>The name of the property at the given index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.CssText">
            <summary>
            Gets or sets the textual representation of the declaration block.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Length">
            <summary>
            Gets the number of properties in the declaration.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Parent">
            <summary>
            Gets the containing rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Accelerator">
            <summary>
            Gets or sets the accelerator value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AlignContent">
            <summary>
            Gets or sets the align-content value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AlignItems">
            <summary>
            Gets or sets the align-items value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AlignmentBaseline">
            <summary>
            Gets or sets the alignment-baseline value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AlignSelf">
            <summary>
            Gets or sets the align-self value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Animation">
            <summary>
            Gets or sets the animation value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationDelay">
            <summary>
            Gets or sets the animation-delay value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationDirection">
            <summary>
            Gets or sets the animation-direction value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationDuration">
            <summary>
            Gets or sets the animation-duration value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationFillMode">
            <summary>
            Gets or sets the animation-fill-mode value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationIterationCount">
            <summary>
            Gets or sets the animation-iteration-count value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationName">
            <summary>
            Gets or sets the animation-name value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationPlayState">
            <summary>
            Gets or sets the animation-play-state value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.AnimationTimingFunction">
            <summary>
            Gets or sets the animation-timing-function value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackfaceVisibility">
            <summary>
            Gets or sets the backface-visibility value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Background">
            <summary>
            Gets or sets the background value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundAttachment">
            <summary>
            Gets or sets the background-attachment value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundClip">
            <summary>
            Gets or sets the background-clip value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundColor">
            <summary>
            Gets or sets the background-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundImage">
            <summary>
            Gets or sets the background-image value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundOrigin">
            <summary>
            Gets or sets the background-origin value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundPosition">
            <summary>
            Gets or sets the background-position value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundPositionX">
            <summary>
            Gets or sets the background-position-x value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundPositionY">
            <summary>
            Gets or sets the background-position-y value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundRepeat">
            <summary>
            Gets or sets the background-repeat value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BackgroundSize">
            <summary>
            Gets or sets the background-size value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BaselineShift">
            <summary>
            Gets or sets the baseline-shift value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Behavior">
            <summary>
            Gets or sets the behavior value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Border">
            <summary>
            Gets or sets the border value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderBottom">
            <summary>
            Gets or sets the border-bottom value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderBottomColor">
            <summary>
            Gets or sets the border-bottom-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderBottomLeftRadius">
            <summary>
            Gets or sets the border-bottom-left-radius value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderBottomRightRadius">
            <summary>
            Gets or sets the border-bottom-right-radius value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderBottomStyle">
            <summary>
            Gets or sets the border-bottom-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderBottomWidth">
            <summary>
            Gets or sets the border-bottom-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderCollapse">
            <summary>
            Gets or sets the border-collapse value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderColor">
            <summary>
            Gets or sets the border-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderImage">
            <summary>
            Gets or sets the border-image value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderImageOutset">
            <summary>
            Gets or sets the border-image-outset value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderImageRepeat">
            <summary>
            Gets or sets the border-image-repeat value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderImageSlice">
            <summary>
            Gets or sets the border-image-slice value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderImageSource">
            <summary>
            Gets or sets the border-image-source value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderImageWidth">
            <summary>
            Gets or sets the border-image-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderLeft">
            <summary>
            Gets or sets the border-left value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderLeftColor">
            <summary>
            Gets or sets the border-left-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderLeftStyle">
            <summary>
            Gets or sets the border-left-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderLeftWidth">
            <summary>
            Gets or sets the border-left-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderRadius">
            <summary>
            Gets or sets the border-radius value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderRight">
            <summary>
            Gets or sets the border-right value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderRightColor">
            <summary>
            Gets or sets the border-right-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderRightStyle">
            <summary>
            Gets or sets the border-right-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderRightWidth">
            <summary>
            Gets or sets the border-right-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderSpacing">
            <summary>
            Gets or sets the border-spacing value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderStyle">
            <summary>
            Gets or sets the border-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderTop">
            <summary>
            Gets or sets the border-top value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderTopColor">
            <summary>
            Gets or sets the border-top-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderTopLeftRadius">
            <summary>
            Gets or sets the border-top-left-radius value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderTopRightRadius">
            <summary>
            Gets or sets the border-top-right-radius value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderTopStyle">
            <summary>
            Gets or sets the border-top-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderTopWidth">
            <summary>
            Gets or sets the border-top-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BorderWidth">
            <summary>
            Gets or sets the border-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BoxShadow">
            <summary>
            Gets or sets the box-shadow value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BoxSizing">
            <summary>
            Gets or sets the box-sizing value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BreakAfter">
            <summary>
            Gets or sets the break-after value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BreakBefore">
            <summary>
            Gets or sets the break-before value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.BreakInside">
            <summary>
            Gets or sets the break-inside value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.CaptionSide">
            <summary>
            Gets or sets the caption-side value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Clear">
            <summary>
            Gets or sets the clear value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Clip">
            <summary>
            Gets or sets the clip value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ClipBottom">
            <summary>
            Gets or sets the clip-bottom value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ClipLeft">
            <summary>
            Gets or sets the clip-left value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ClipPath">
            <summary>
            Gets or sets the clip-path value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ClipRight">
            <summary>
            Gets or sets the clip-right value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ClipRule">
            <summary>
            Gets or sets the clip-rule value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ClipTop">
            <summary>
            Gets or sets the clip-top value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Color">
            <summary>
            Gets or sets the color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColorInterpolationFilters">
            <summary>
            Gets or sets the color-interpolation-filters value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnCount">
            <summary>
            Gets or sets the column-count value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnFill">
            <summary>
            Gets or sets the column-fill value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnGap">
            <summary>
            Gets or sets the column-gap value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnRule">
            <summary>
            Gets or sets the column-rule value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnRuleColor">
            <summary>
            Gets or sets the column-rule-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnRuleStyle">
            <summary>
            Gets or sets the column-rule-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnRuleWidth">
            <summary>
            Gets or sets the column-rule-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Columns">
            <summary>
            Gets or sets the columnsv
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnSpan">
            <summary>
            Gets or sets the column-span value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ColumnWidth">
            <summary>
            Gets or sets the column-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Content">
            <summary>
            Gets or sets the content value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.CounterIncrement">
            <summary>
            Gets or sets the counter-increment value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.CounterReset">
            <summary>
            Gets or sets the counter-reset value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Cursor">
            <summary>
            Gets or sets the cursor value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Direction">
            <summary>
            Gets or sets the direction value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Display">
            <summary>
            Gets or sets the display value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.DominantBaseline">
            <summary>
            Gets or sets the dominant-baseline value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.EmptyCells">
            <summary>
            Gets or sets the empty-cells value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.EnableBackground">
            <summary>
            Gets or sets the enable-background value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Fill">
            <summary>
            Gets or sets the fill value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FillOpacity">
            <summary>
            Gets or sets the fill-opacity value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FillRule">
            <summary>
            Gets or sets the fill-rule value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Filter">
            <summary>
            Gets or sets the filter value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Flex">
            <summary>
            Gets or sets the flex value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FlexBasis">
            <summary>
            Gets or sets the flex-basis value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FlexDirection">
            <summary>
            Gets or sets the flex-direction value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FlexFlow">
            <summary>
            Gets or sets the flex-flow value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FlexGrow">
            <summary>
            Gets or sets the flex-grow value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FlexShrink">
            <summary>
            Gets or sets the flex-shrink value. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FlexWrap">
            <summary>
            Gets or sets the flex-wrap value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Float">
            <summary>
            Gets or sets the float value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Font">
            <summary>
            Gets or sets the font value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontFamily">
            <summary>
            Gets or sets the font-family value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontFeatureSettings">
            <summary>
            Gets or sets the font-feature-settings value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontSize">
            <summary>
            Gets or sets the font-size value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontSizeAdjust">
            <summary>
            Gets or sets the font-size-adjust value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontStretch">
            <summary>
            Gets or sets the font-stretch value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontStyle">
            <summary>
            Gets or sets the font-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontVariant">
            <summary>
            Gets or sets the font-variant value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.FontWeight">
            <summary>
            Gets or sets the font-weight value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.GlyphOrientationHorizontal">
            <summary>
            Gets or sets the glyph-orientation-horizontal value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.GlyphOrientationVertical">
            <summary>
            Gets or sets the glyph-orientation-vertical value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Height">
            <summary>
            Gets or sets the height value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ImeMode">
            <summary>
            Gets or sets the ime-mode value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.JustifyContent">
            <summary>
            Gets or sets the justify-content value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LayoutGrid">
            <summary>
            Gets or sets the layout-grid value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LayoutGridChar">
            <summary>
            Gets or sets the layout-grid-char value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LayoutGridLine">
            <summary>
            Gets or sets the layout-grid-line value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LayoutGridMode">
            <summary>
            Gets or sets the layout-grid-mode value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LayoutGridType">
            <summary>
            Gets or sets the layout-grid-type value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Left">
            <summary>
            Gets or sets the left value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LetterSpacing">
            <summary>
            Gets or sets the letter-spacing value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.LineHeight">
            <summary>
            Gets or sets the line-height value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ListStyle">
            <summary>
            Gets or sets the list-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ListStyleImage">
            <summary>
            Gets or sets the list-style-image value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ListStylePosition">
            <summary>
            Gets or sets the list-style-position value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ListStyleType">
            <summary>
            Gets or sets the list-style-type value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Margin">
            <summary>
            Gets or sets the margin value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarginBottom">
            <summary>
            Gets or sets the margin-bottom value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarginLeft">
            <summary>
            Gets or sets the margin-left value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarginRight">
            <summary>
            Gets or sets the margin-right value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarginTop">
            <summary>
            Gets or sets the margin-top value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Marker">
            <summary>
            Gets or sets the marker value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarkerEnd">
            <summary>
            Gets or sets the marker-end value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarkerMid">
            <summary>
            Gets or sets the marker-mid value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MarkerStart">
            <summary>
            Gets or sets the marker-start value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Mask">
            <summary>
            Gets or sets the mask value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MaxHeight">
            <summary>
            Gets or sets the max-height value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MaxWidth">
            <summary>
            Gets or sets the max-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MinHeight">
            <summary>
            Gets or sets the min-height value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.MinWidth">
            <summary>
            Gets or sets the min-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Opacity">
            <summary>
            Gets or sets the opacity value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Order">
            <summary>
            Gets or sets the order value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Orphans">
            <summary>
            Gets or sets the orphans value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Outline">
            <summary>
            Gets or sets the outline value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.OutlineColor">
            <summary>
            Gets or sets the outline-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.OutlineStyle">
            <summary>
            Gets or sets the outline-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.OutlineWidth">
            <summary>
            Gets or sets the outline-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Overflow">
            <summary>
            Gets or sets the overflow value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.OverflowX">
            <summary>
            Gets or sets the overflow-x value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.OverflowY">
            <summary>
            Gets or sets the overflow-y value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Padding">
            <summary>
            Gets or sets the padding value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PaddingBottom">
            <summary>
            Gets or sets the padding-bottom value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PaddingLeft">
            <summary>
            Gets or sets the padding-left value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PaddingRight">
            <summary>
            Gets or sets the padding-right value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PaddingTop">
            <summary>
            Gets or sets the padding-top value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PageBreakAfter">
            <summary>
            Gets or sets the page-break-after value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PageBreakBefore">
            <summary>
            Gets or sets the page-break-before value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PageBreakInside">
            <summary>
            Gets or sets the page-break-inside value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Perspective">
            <summary>
            Gets or sets the perspective value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PerspectiveOrigin">
            <summary>
            Gets or sets the perspective-origin value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.PointerEvents">
            <summary>
            Gets or sets the pointer-events value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Position">
            <summary>
            Gets or sets the position value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Quotes">
            <summary>
            Gets or sets the quotes value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Right">
            <summary>
            Gets or sets the right value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.RubyAlign">
            <summary>
            Gets or sets the ruby-align value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.RubyOverhang">
            <summary>
            Gets or sets the ruby-overhang value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.RubyPosition">
            <summary>
            Gets or sets the ruby-position value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Scrollbar3dLightColor">
            <summary>
            Gets or sets the scrollbar3d-light-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ScrollbarArrowColor">
            <summary>
            Gets or sets the scrollbar-arrow-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ScrollbarDarkShadowColor">
            <summary>
            Gets or sets the scrollbar-dark-shadow-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ScrollbarFaceColor">
            <summary>
            Gets or sets the scrollbar-face-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ScrollbarHighlightColor">
            <summary>
            Gets or sets the scrollbar-highlight-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ScrollbarShadowColor">
            <summary>
            Gets or sets the scrollbar-shadow-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ScrollbarTrackColor">
            <summary>
            Gets or sets the scrollbar-track-color value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Stroke">
            <summary>
            Gets or sets the stroke value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeDasharray">
            <summary>
            Gets or sets the stroke-dasharray value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeDashoffset">
            <summary>
            Gets or sets the stroke-dashoffset value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeLinecap">
            <summary>
            Gets or sets the stroke-linecap value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeLinejoin">
            <summary>
            Gets or sets the stroke-line-join value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeMiterlimit">
            <summary>
            Gets or sets the stroke-miterlimit value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeOpacity">
            <summary>
            Gets or sets the stroke-opacity value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.StrokeWidth">
            <summary>
            Gets or sets the stroke-width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TableLayout">
            <summary>
            Gets or sets the table-layout value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextAlign">
            <summary>
            Gets or sets the text-align value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextAlignLast">
            <summary>
            Gets or sets the text-align-last value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextAnchor">
            <summary>
            Gets or sets the text-anchor value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextAutospace">
            <summary>
            Gets or sets the text-autospace value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextDecoration">
            <summary>
            Gets or sets the text-decoration value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextIndent">
            <summary>
            Gets or sets the text-indent value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextJustify">
            <summary>
            Gets or sets the text-justify value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextOverflow">
            <summary>
            Gets or sets the text-overflow value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextShadow">
            <summary>
            Gets or sets the text-shadow value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextTransform">
            <summary>
            Gets or sets the text-transform value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TextUnderlinePosition">
            <summary>
            Gets or sets the text-underline-position value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Top">
            <summary>
            Gets or sets the top value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Transform">
            <summary>
            Gets or sets the transform value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TransformOrigin">
            <summary>
            Gets or sets the transform-origin value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TransformStyle">
            <summary>
            Gets or sets the transform-style value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Transition">
            <summary>
            Gets or sets the  value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TransitionDelay">
            <summary>
            Gets or sets the transition-delay value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TransitionDuration">
            <summary>
            Gets or sets the transition-duration value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TransitionProperty">
            <summary>
            Gets or sets the transition-property value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.TransitionTimingFunction">
            <summary>
            Gets or sets the transition-timing-function value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.UnicodeBidi">
            <summary>
            Gets or sets the unicode-bidi value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.VerticalAlign">
            <summary>
            Gets or sets the vertical-align value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Visibility">
            <summary>
            Gets or sets the visibility value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.WhiteSpace">
            <summary>
            Gets or sets the white-space value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Widows">
            <summary>
            Gets or sets the widows value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Width">
            <summary>
            Gets or sets the width value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.WordBreak">
            <summary>
            Gets or sets the word-break value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.WordSpacing">
            <summary>
            Gets or sets the word-spacing value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.WordWrap">
            <summary>
            Gets or sets the word-wrap value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.WritingMode">
            <summary>
            Gets or sets the writing-mode value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.ZIndex">
            <summary>
            Gets or sets the z-index value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleDeclaration.Zoom">
            <summary>
            Gets or sets the zoom value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssStyleRule">
            <summary>
            Represents a general CSS styling rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleRule.SelectorText">
            <summary>
            Gets or sets the textual representation of the selector for this rule, e.g. "h1,h2".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleRule.Style">
            <summary>
            Gets the CSSStyleDeclaration object for the rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssStyleSheet">
            <summary>
            Represents the CSS style sheet for storing CSS styles.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IStyleSheet">
            <summary>
            Represent a stylesheet for collecting style information.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.Type">
            <summary>
            Gets the style sheet language for this style sheet.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.Href">
            <summary>
            Gets the value of the attribute, which is its location. For inline style
            sheets, the value of this attribute is null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.OwnerNode">
            <summary>
            Gets the element that associates this style sheet with the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.Parent">
            <summary>
            Gets the parent stylesheet for style sheet languages that support the
            concept of style sheet inclusion.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.Title">
            <summary>
            Gets the advisory title. The title is often specified in the ownerNode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.Media">
            <summary>
            Gets the intended destination media for style information. The media is often
            specified in the ownerNode. If no media has been specified, the MediaList is empty.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheet.IsDisabled">
            <summary>
            Gets or sets if the stylesheet is applied to the document. Modifying this
            attribute may cause a new resolution of style for the document. If the media
            doesn't apply to the current user agent, the disabled attribute is ignored.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssStyleSheet.Insert(System.String,System.Int32)">
            <summary>
            Inserts a new style rule into the current style sheet.
            </summary>
            <param name="rule">A string containing the rule to be inserted (selector and declaration).</param>
            <param name="index">The index representing the position to be inserted.</param>
            <returns>The index of insertation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ICssStyleSheet.RemoveAt(System.Int32)">
            <summary>
            Removes a style rule from the current style sheet object.
            </summary>
            <param name="index">The index representing the position to be removed.</param>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleSheet.OwnerRule">
            <summary>
            Gets the @import rule if the stylesheet was importated otherwise it returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ICssStyleSheet.Rules">
            <summary>
            Gets a CSSRuleList of the CSS rules in the style sheet.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ICssSupportsRule">
            <summary>
            Represents a ‘@supports’ CSS rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.IPropertyCreator">
            <summary>
            Defines a special property creator.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.IPropertyCreator.Create(System.String,AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Tries to create a declaration with the provided name.
            </summary>
            <param name="name">The name of the declaration.</param>
            <param name="style">The parent declarations.</param>
            <returns>The created property, if any.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Events.ICompositionEvent">
            <summary>
            Represents the event arguments for a composed event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.ICompositionEvent.Init(System.String,System.Boolean,System.Boolean,AngleSharp.DOM.IWindow,System.String)">
            <summary>
            Initializes the composition event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="view">Sets the associated view for the UI event.</param>
            <param name="data">Sets the data to carry.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.ICompositionEvent.Data">
            <summary>
            Gets the associated data.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IErrorEvent">
            <summary>
            Represents the event arguments for an error event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IErrorEvent.Message">
            <summary>
            Gets the message describing the error.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IErrorEvent.FileName">
            <summary>
            Gets the filename where the error occurred.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IErrorEvent.Line">
            <summary>
            Gets the line number of the error.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IErrorEvent.Column">
            <summary>
            Gets the column number of the error.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IErrorEvent.ErrorInformation">
            <summary>
            Gets a custom error information object.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IInputEvent">
            <summary>
            Represents the event arguments for an input event.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IInputEvent.Init(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes the input event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="data">Sets the data for the input event.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IInputEvent.Data">
            <summary>
            Gets the data that has been entered.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IMessageEvent">
            <summary>
            Represents the event arguments when receiving a message.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IMessageEvent.Init(System.String,System.Boolean,System.Boolean,System.Object,System.String,System.String,AngleSharp.DOM.IWindow,AngleSharp.DOM.Events.IMessagePort[])">
            <summary>
            Initializes the message event.
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">Determines if the event bubbles.</param>
            <param name="cancelable">Determines if the event is cancelable.</param>
            <param name="data">Sets the data for the message event.</param>
            <param name="origin">Sets the origin who send the message.</param>
            <param name="lastEventId">Sets the id of the last event.</param>
            <param name="source">Sets the source window of the message.</param>
            <param name="ports">The message ports to include.</param>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMessageEvent.Data">
            <summary>
            Gets the data that is carried by the message.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMessageEvent.Origin">
            <summary>
            Gets the origin of the message.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMessageEvent.LastEventId">
            <summary>
            Gets the id of the last event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMessageEvent.Source">
            <summary>
            Gets the source of the message.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.IMessageEvent.Ports">
            <summary>
            Gets the used message ports.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.IMessagePort">
            <summary>
            Represents a message port as defined here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#messageport
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IMessagePort.Send(System.Object)">
            <summary>
            Sends a message over the current message port.
            </summary>
            <param name="message">The message to send. Will be serialized to a string.</param>
        </member>
        <member name="M:AngleSharp.DOM.Events.IMessagePort.Open">
            <summary>
            Opens the message port.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Events.IMessagePort.Close">
            <summary>
            Closes the message port.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Events.IMessagePort.MessageReceived">
            <summary>
            Fired when a message has been received.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.ITouchEvent">
            <summary>
            Represents the event arguments for a touch event.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.Touches">
            <summary>
            Gets a list with all active touch points.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.TargetTouches">
            <summary>
            Gets a list with touch points over the target.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.ChangedTouches">
            <summary>
            Gets a list with changed touch points.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.IsAltPressed">
            <summary>
            Gets if the alt key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.IsMetaPressed">
            <summary>
            Gets if the meta key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.IsCtrlPressed">
            <summary>
            Gets if the control key is pressed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Events.ITouchEvent.IsShiftPressed">
            <summary>
            Gets if the shift key is pressed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IApplicationCache">
            <summary>
            Provides a way to cache web resources to improve performance,
            reduce server loads, and enable access to content when there
            is no network connectivity.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IApplicationCache.Update">
            <summary>
            Performs an update of the application cache.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IApplicationCache.Abort">
            <summary>
            Aborts the current action (download / update) of the cache.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IApplicationCache.Swap">
            <summary>
            Swaps the application's cache.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IApplicationCache.Status">
            <summary>
            Gets the status of the application cache.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.Checking">
            <summary>
            Event triggered when the cache is being checked.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.Error">
            <summary>
            Event triggered after an error occurred.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.NoUpdate">
            <summary>
            Event triggered after no update is available.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.Downloading">
            <summary>
            Event triggered when the download started.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.Progress">
            <summary>
            Event triggered after progress.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.UpdateReady">
            <summary>
            Event triggered after an update is ready to be applied.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.Cached">
            <summary>
            Event triggered after the cache has been updated.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IApplicationCache.Obsolete">
            <summary>
            Event triggered after the cache has been marked obsolete.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IBrowsingContext">
            <summary>
            Represents the browsing context interface.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IBrowsingContext.Current">
            <summary>
            Gets the current window proxy.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IBrowsingContext.SessionHistory">
            <summary>
            Gets the session history of the given browsing context.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IBrowsingContext.Configuration">
            <summary>
            Gets the configuration for the browsing context.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IBrowsingContext.Parent">
            <summary>
            Gets the parent of the current context, if any.
            If a parent is available, then the current context
            contains only embedded documents.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IBrowsingContext.Creator">
            <summary>
            Gets the document that created the current context, if any.
            The creator is the active document of the parent at the time
            of creation.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ILinkStyle">
            <summary>
            Implemented by elements that may expose stylesheets.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ILinkStyle.Sheet">
            <summary>
            Gets the StyleSheet object associated with the given element,
            or null if there is none.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.IMediaList">
            <summary>
            A collection of media queries.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.IMediaList.Add(System.String)">
            <summary>
            Adds the medium to the end of the list. If the medium is already used,
            it is first removed.
            </summary>
            <param name="medium">The new medium to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.IMediaList.Remove(System.String)">
            <summary>
            Deletes the medium indicated from the list of media queries.
            </summary>
            <param name="medium">The medium to delete from the list.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.IMediaList.Validate(AngleSharp.DOM.IWindow)">
            <summary>
            Validates the list of contained media.
            </summary>
            <param name="window">The current browsing window.</param>
            <returns>True if the constraints are satisfied, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.IMediaList.MediaText">
            <summary>
            Gets or sets the parsable textual representation of the media list.
            This is a comma-separated list of media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.IMediaList.Length">
            <summary>
            Gets the number of media in the list. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.IMediaList.Item(System.Int32)">
            <summary>
            Gets the medium item at the specified index.
            </summary>
            <param name="index">Index into the collection.</param>
            <returns>
            The medium at the index-th position in the MediaList,
            or null if that is not a valid index.
            </returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.ISelector">
            <summary>
            Represents a CSS selector for matching elements.
            More information: http://dev.w3.org/csswg/selectors4/
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ISelector.Match(AngleSharp.DOM.IElement)">
            <summary>
            Determines if the given object is matched by this selector.
            </summary>
            <param name="element">The element to be matched.</param>
            <returns>True if the selector matches the given element, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ISelector.Specifity">
            <summary>
            Gets the specifity of the given selector.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ISelector.Text">
            <summary>
            Gets the string representation of the selector.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IStyleSheetList">
            <summary>
            Represents a list of stylesheet elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheetList.Item(System.Int32)">
            <summary>
            Gets the stylesheet at the specified index.
            If index is greater than or equal to the number
            of style sheets in the list, this returns null.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>The stylesheet.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IStyleSheetList.Length">
            <summary>
            Gets the number of elements in the list of stylesheets.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.IStyleUtilities">
            <summary>
            A set of useful methods for retrieving style information.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.IStyleUtilities.CascadedStyle">
            <summary>
            Gets a live CSS declaration block with properties
            that have a cascaded value for the context object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.IStyleUtilities.RawComputedStyle">
            <summary>
            Gets a live CSS declaration block with properties
            that represent the value computed for the context object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.IStyleUtilities.UsedStyle">
            <summary>
            Gets a live CSS declaration block with properties,
            whcih are the used values computed for the context object.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlAnchorElement">
            <summary>
            Represents the a HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IUrlUtilities">
            <summary>
            The URLUtils interface defines utility methods to work with URLs.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Href">
            <summary>
            Gets or sets the whole URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Protocol">
            <summary>
            Gets or sets the protocol scheme of the URL, including the final ':'.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Host">
            <summary>
            Gets or sets the host, that is the hostname, a ':', and the port of the URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.HostName">
            <summary>
            Gets or sets the domain of the URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Port">
            <summary>
            Gets or sets the port number of the URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.PathName">
            <summary>
            Gets or sets an initial '/' followed by the path of the URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Search">
            <summary>
            Gets or sets a '?' followed by the parameters of the URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Hash">
            <summary>
            Gets or sets a '#' followed by the fragment identifier of the URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.UserName">
            <summary>
            Gets or sets the username specified before the domain name..
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Password">
            <summary>
            Gets or sets the password specified before the domain name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IUrlUtilities.Origin">
            <summary>
            Gets the canonical form of the origin of the specific location.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.Target">
            <summary>
            Gets or sets the name of the target frame to which the resource applies.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.Download">
            <summary>
            Gets or sets the linked resource is intended to be downloaded rather than displayed.
            The value represent the proposed name of the file. If the name is not a valid filename of the
            underlying OS, the navigator will adapt it.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.Ping">
            <summary>
            Gets the element's ping attribute as a settable list of tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.Relation">
            <summary>
            Gets or sets the rel HTML attribute, specifying the relationship
            of the target object to the link object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.RelationList">
            <summary>
            Gets the rel HTML attribute, as a list of tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.TargetLanguage">
            <summary>
            Gets or sets the language code for the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.Type">
            <summary>
            Gets or sets the type of the resource. If present, the attribute must be a valid MIME type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAnchorElement.Text">
            <summary>
            Gets the text of the anchor tag (same as TextContent).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlAreaElement">
            <summary>
            Represents the area HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.AlternativeText">
            <summary>
            Gets or sets the alternative text for the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Coordinates">
            <summary>
            Gets or sets the coordinates to define the hot-spot region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Shape">
            <summary>
            Gets or sets the shape of the hot-spot, limited to known values.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Target">
            <summary>
            Gets or sets the browsing context in which to open the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Download">
            <summary>
            Gets or sets the linked resource is intended to be downloaded rather than displayed.
            The value represent the proposed name of the file. If the name is not a valid filename of the
            underlying OS, the navigator will adapt it.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Ping">
            <summary>
            Gets the ping HTML attribute, as a settable list of otkens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Relation">
            <summary>
            Gets or sets the value indicating relationships of the
            current document to the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.RelationList">
            <summary>
            Gets the value indicating relationships of the current
            document to the linked resource, as a list of tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.TargetLanguage">
            <summary>
            Gets or sets the language of the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlAreaElement.Type">
            <summary>
            Gets or sets the MIME type of the linked resource.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlAudioElement">
            <summary>
            Represents the audio HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlMediaElement">
            <summary>
            Represents the base for all HTML media elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.IMediaController">
            <summary>
            The MediaController for controlling a media.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.IMediaController.Play">
            <summary>
            Plays the underlying media.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.IMediaController.Pause">
            <summary>
            Pauses the underlying media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.BufferedTime">
            <summary>
            Gets the currently buffered time range.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.SeekableTime">
            <summary>
            Gets the currently seekable time range.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.PlayedTime">
            <summary>
            Gets the currently played time range.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.Duration">
            <summary>
            Gets the duration of the controlled media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.CurrentTime">
            <summary>
            Gets or sets the current time of the controlled media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.DefaultPlaybackRate">
            <summary>
            Gets or sets the default playback rate.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.PlaybackRate">
            <summary>
            Gets or sets the current playback rate.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.Volume">
            <summary>
            Gets or sets the volume of the controlled media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.IsMuted">
            <summary>
            Gets or sets if the controlled media is muted.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.IsPaused">
            <summary>
            Gets if the media is currently paused.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.ReadyState">
            <summary>
            Gets the current ready state of the media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaController.PlaybackState">
            <summary>
            Gets the current playback state of the contained media.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.Emptied">
            <summary>
            Event triggered after being emptied.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.LoadedMetadata">
            <summary>
            Event triggered after the meta data has been received.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.LoadedData">
            <summary>
            Event triggered after the data has been loaded.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.CanPlay">
            <summary>
            Event triggered when the media can be played.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.CanPlayThrough">
            <summary>
            Event triggered when the media can be fully played.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.Ended">
            <summary>
            Event triggered after the media ended.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.Waiting">
            <summary>
            Event triggered when waiting for input.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.DurationChanged">
            <summary>
            Event triggered when the media cursor changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.TimeUpdated">
            <summary>
            Event triggered after the time updated.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.Paused">
            <summary>
            Event triggered after the media paused.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.Played">
            <summary>
            Event triggered after the media started.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.Playing">
            <summary>
            Event triggered before the media started.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.RateChanged">
            <summary>
            Event triggered after the rate changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IMediaController.VolumeChanged">
            <summary>
            Event triggered after the volume changed.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlMediaElement.Load">
            <summary>
            Loads the currently assigned media source.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlMediaElement.CanPlayType(System.String)">
            <summary>
            Checks if the given type can be played.
            </summary>
            <param name="type">The type to check for.</param>
            <returns>One of the following values: probably, maybe or an empty string.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlMediaElement.AddTextTrack(System.String,System.String,System.String)">
            <summary>
            Adds a new text track to the media element.
            </summary>
            <param name="kind">The kind of text track to create.</param>
            <param name="label">The optional label of the track.</param>
            <param name="language">The optional language of the track.</param>
            <returns>The freshly created text track.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.Source">
            <summary>
            Gets or sets the media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.CrossOrigin">
            <summary>
            Gets or sets the cross-origin attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.Preload">
            <summary>
            Gets or sets the preload attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.MediaGroup">
            <summary>
            Gets or sets the id of the assigned media group.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.NetworkState">
            <summary>
            Gets the current network state.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.IsSeeking">
            <summary>
            Gets if seeking is currently active.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.CurrentSource">
            <summary>
            Gets the current media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.Error">
            <summary>
            Gets the current media error, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.Controller">
            <summary>
            Gets the current media's controller, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.IsEnded">
            <summary>
            Gets if the media has ended.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.IsAutoplay">
            <summary>
            Gets or sets if the media is automatically played.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.IsLoop">
            <summary>
            Gets or sets if the media should loop.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.IsShowingControls">
            <summary>
            Gets or sets if the controls should be shown to the user.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.IsDefaultMuted">
            <summary>
            Gets or sets if the media is muted by default.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.StartDate">
            <summary>
            Gets the datetime when the download started.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.AudioTracks">
            <summary>
            Gets a list of contained audio tracks.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.VideoTracks">
            <summary>
            Gets a list of contained video tracks.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMediaElement.TextTracks">
            <summary>
            Gets a list of contained text tracks.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlBaseElement">
            <summary>
            Represents the base HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlBaseElement.Href">
            <summary>
            Gets or sets the hyperreference to the base URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlBaseElement.Target">
            <summary>
            Gets or sets the base target.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlBodyElement">
            <summary>
            Represents the body HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IWindowEventHandlers">
            <summary>
            Represents a set of event handlers for a Window.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.Printed">
            <summary>
            Event triggered after printing.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.Printing">
            <summary>
            Event triggered before printing.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.Unloading">
            <summary>
            Event triggered before closing the document.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.HashChanged">
            <summary>
            Event triggered when the hash has been changed.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.MessageReceived">
            <summary>
            Event triggered after receiving a message.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.WentOffline">
            <summary>
            Event triggered after losing connection.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.WentOnline">
            <summary>
            Event triggered after being connected.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.PageHidden">
            <summary>
            Event triggered after the page has been hidden.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.PageShown">
            <summary>
            Event triggered after showing the page.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.PopState">
            <summary>
            Event triggered after popping the state from the history.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.Storage">
            <summary>
            Event triggered after using the provided storage.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.IWindowEventHandlers.Unloaded">
            <summary>
            Event triggered after after closing the document.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlBreakRowElement">
            <summary>
            Represents the br HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlButtonElement">
            <summary>
            Represents the button HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IValidation">
            <summary>
            Implemented by elements that can be validated.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IValidation.CheckValidity">
            <summary>
            Checks the validity of the current element.
            </summary>
            <returns>True if the object is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IValidation.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validation error. If this is not the empty string,
            then the element is suffering from a custom validation error.
            </summary>
            <param name="error">The error message to use.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidation.WillValidate">
            <summary>
            Gets a value if the current element validates.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidation.Validity">
            <summary>
            Gets the current validation state of the current element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidation.ValidationMessage">
            <summary>
            Gets the current validation message.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.Autofocus">
            <summary>
            Gets or sets the autofocus HTML attribute, which indicates whether the
            control should have input focus when the page loads.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.IsDisabled">
            <summary>
            Gets or sets if the button is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.Type">
            <summary>
            Gets or sets the type of button.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.FormAction">
            <summary>
            Gets or sets the URI of a resource that processes information submitted by the button.
            If specified, this attribute overrides the action attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.FormEncType">
            <summary>
            Gets or sets the type of content that is used to submit the form to the server. If specified, this
            attribute overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.FormMethod">
            <summary>
            Gets or sets the HTTP method that the browser uses to submit the form. If specified, this attribute
            overrides the method attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.FormNoValidate">
            <summary>
            Gets or sets that the form is not to be validated when it is submitted. If specified, this attribute
            overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlButtonElement.FormTarget">
            <summary>
            Gets or sets A name or keyword indicating where to display the response that is received after submitting
            the form. If specified, this attribute overrides the target attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlCanvasElement">
            <summary>
            Represents the canvas HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlCanvasElement.ToDataUrl(System.String)">
            <summary>
            Returns a Data URI with the bitmap data of the context.
            </summary>
            <param name="type">The type of image e.g image/png.</param>
            <returns>A data URI with the data if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlCanvasElement.ToBlob(System.Action{System.IO.Stream},System.String)">
            <summary>
            Creates a BLOB out of the canvas pixel data and passes it
            to the given callback.
            </summary>
            <param name="callback">The callback function.</param>
            <param name="type">The type of object to create.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlCanvasElement.GetContext(System.String)">
            <summary>
            Gets the drawing context.
            </summary>
            <param name="contextId">A context id like 2d.</param>
            <returns>An object that defines the drawing context.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlCanvasElement.SetContext(AngleSharp.DOM.Media.IRenderingContext)">
            <summary>
            Changes the context the element is related to the given one.
            </summary>
            <param name="context">The new context.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlCanvasElement.IsSupportingContext(System.String)">
            <summary>
            Gets an indicator if a context with the given parameters could be created.
            </summary>
            <param name="contextId">A context id like 2d.</param>
            <returns>True if the context is supported, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCanvasElement.Width">
            <summary>
            Gets or sets the pixel width of the canvas element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCanvasElement.Height">
            <summary>
            Gets or sets the pixel height of the canvas element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlCommandElement">
            <summary>
            Represents the command HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.Type">
            <summary>
            Gets or sets the type of command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.Label">
            <summary>
            Gets or sets the assigned label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.Icon">
            <summary>
            Gets or sets the icon of the command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.IsDisabled">
            <summary>
            Gets or sets if the command is disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.IsChecked">
            <summary>
            Gets or sets if the command is checked.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.RadioGroup">
            <summary>
            Gets or sets the id of the radio group of the command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlCommandElement.Command">
            <summary>
            Gets the assigned element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlDataListElement">
            <summary>
            Represents the datalist HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlDataListElement.Options">
            <summary>
            Gets the associated options.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlDetailsElement">
            <summary>
            Represents the details HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlDetailsElement.IsOpen">
            <summary>
            Gets or sets if the element is opened.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlDialogElement">
            <summary>
            Repesents the dialog HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlDialogElement.Show(AngleSharp.DOM.IElement)">
            <summary>
            Shows the dialog, optionally anchored to the element.
            </summary>
            <param name="anchor">The element, where the dialog is anchored.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlDialogElement.ShowModal(AngleSharp.DOM.IElement)">
            <summary>
            Shows the dialog modally, optionally anchored to the element.
            </summary>
            <param name="anchor">The element, where the dialog is anchored.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlDialogElement.Close(System.String)">
            <summary>
            Closes the dialog.
            </summary>
            <param name="returnValue">The return value to set.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlDialogElement.Open">
            <summary>
            Gets or sets if the dialog is open.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlDialogElement.ReturnValue">
            <summary>
            Gets or sets the return value of the dialog.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlDivElement">
            <summary>
            Represents the div HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlEmbedElement">
            <summary>
            The embed HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlEmbedElement.Source">
            <summary>
            Gets or sets the source of the object to embed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlEmbedElement.Type">
            <summary>
            Gets or sets the type of the embedded object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlEmbedElement.DisplayWidth">
            <summary>
            Gets or sets the display width of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlEmbedElement.DisplayHeight">
            <summary>
            Gets or sets the display height of the object.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlFieldSetElement">
            <summary>
            Represents the fieldset HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFieldSetElement.IsDisabled">
            <summary>
            Gets or sets if the element is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFieldSetElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFieldSetElement.Name">
            <summary>
            Gets or sets the value of the name attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFieldSetElement.Type">
            <summary>
            Gets the type of input control (fieldset).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFieldSetElement.Elements">
            <summary>
            Gets the elements belonging to this field set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlFormElement">
            <summary>
            Represents the form HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlFormElement.Submit">
            <summary>
            Submits the form element from the form element itself.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlFormElement.Reset">
            <summary>
            Resets the form to the previous (default) state.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlFormElement.CheckValidity">
            <summary>
            Checks if the form is valid, i.e. if all fields fulfill their requirements.
            </summary>
            <returns>True if the form is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlFormElement.ReportValidity">
            <summary>
            Reports the current validity state after checking the current state
            interactively the constraints of the form element.
            </summary>
            <returns>True if the form element is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlFormElement.RequestAutocomplete">
            <summary>
            Requests the input fields to be automatically filled with previous entries.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.AcceptCharset">
            <summary>
            Gets or sets the character encodings that are to be used for the submission.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Action">
            <summary>
            Gets or sets the form's name within the forms collection.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Autocomplete">
            <summary>
            Gets or sets if autocomplete is turned on or off.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Enctype">
            <summary>
            Gets or sets the encoding to use for sending the form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Encoding">
            <summary>
            Gets or sets the encoding to use for sending the form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Method">
            <summary>
            Gets or sets the method to use for transmitting the form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Name">
            <summary>
            Gets or sets the value of the name attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.NoValidate">
            <summary>
            Gets or sets the indicator that the form is not to be validated during submission.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Target">
            <summary>
            Gets or sets the target name of the response to the request.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Length">
            <summary>
            Gets the number of elements in the Elements collection.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Elements">
            <summary>
            Gets all the form controls belonging to this form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Item(System.Int32)">
            <summary>
            Gets the form element at the specified index.
            </summary>
            <param name="index">The index in the elements collection.</param>
            <returns>The element or null.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlFormElement.Item(System.String)">
            <summary>
            Gets the form element(s) with the specified name.
            </summary>
            <param name="name">The name or id of the element.</param>
            <returns>A collection with elements, an element or null.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlHeadElement">
            <summary>
            Represents the head HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlHeadingElement">
            <summary>
            Represents the heading HTML element(s).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlHrElement">
            <summary>
            Represents the hr HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlHtmlElement">
            <summary>
            Represents the html HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlImageElement">
            <summary>
            Represents the image HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.AlternativeText">
            <summary>
            Gets or sets the alternative text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.Source">
            <summary>
            Gets or sets the image source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.CrossOrigin">
            <summary>
            Gets or sets the cross-origin attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.UseMap">
            <summary>
            Gets or sets the usemap attribute, which indicates that the
            image has an associated image map.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.IsMap">
            <summary>
            Gets or sets if the image element is a map.
            The attribute must not be specified on an element that does not
            have an ancestor a element with an href attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.DisplayWidth">
            <summary>
            Gets or sets the displayed width of the image element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.DisplayHeight">
            <summary>
            Gets or sets the displayed width of the image element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.OriginalWidth">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.OriginalHeight">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlImageElement.IsCompleted">
            <summary>
            Gets if the image is completely available.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlInlineFrameElement">
            <summary>
            Represents the iframe HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.Source">
            <summary>
            Gets or sets the frame source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.ContentHtml">
            <summary>
            Gets the content of the page that the nested browsing context is to contain.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.Name">
            <summary>
            Gets or sets the name of the frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.Sandbox">
            <summary>
            Gets the tokens of the sandbox attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.IsSeamless">
            <summary>
            Gets or sets if the seamless attribute has been set.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.IsFullscreenAllowed">
            <summary>
            Gets or sets if the frame's content can trigger the fullscreen mode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.DisplayWidth">
            <summary>
            Gets or sets the display width of the frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.DisplayHeight">
            <summary>
            Gets or sets the display height of the frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.ContentDocument">
            <summary>
            Gets the document this frame contains, if there is any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInlineFrameElement.ContentWindow">
            <summary>
            Gets the frame's parent's window context.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlInputElement">
            <summary>
            Represents the input HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlInputElement.StepUp(System.Int32)">
            <summary>
            Increments the value by (step * n), where n defaults to 1 if not specified.
            </summary>
            <param name="n">Optional: The number of steps to take.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlInputElement.StepDown(System.Int32)">
            <summary>
            Decrements the value by (step * n), where n defaults to 1 if not specified. 
            </summary>
            <param name="n">Optional: The number of steps to take.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlInputElement.SelectAll">
            <summary>
            Selects the contents of the textarea.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlInputElement.Select(System.Int32,System.Int32,System.String)">
            <summary>
            Selects a range of text, and sets selectionStart and selectionEnd.
            If either argument is greater than the length of the value, it is treated
            as pointing to the end of the value. If end is less than start, then
            both are treated as the value of end.
            </summary>
            <param name="selectionStart">The start of the selection.</param>
            <param name="selectionEnd">The end of the selection.</param>
            <param name="selectionDirection">Optional: The direction of the selection.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Autofocus">
            <summary>
            Gets or sets the autofocus HTML attribute, which indicates whether the
            control should have input focus when the page loads.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Accept">
            <summary>
            Gets or sets the accept HTML attribute, containing comma-separated list of
            file types accepted by the server when type is file.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Autocomplete">
            <summary>
            Gets or sets the autocomplete HTML attribute, indicating whether
            the value of the control can be automatically completed by the
            browser. Ignored if the value of the type attribute is hidden,
            checkbox, radio, file, or a button type (button, submit, reset,
            image).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsDisabled">
            <summary>
            Gets or sets if the textarea is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Files">
            <summary>
            Gets a list of selected files.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Type">
            <summary>
            Gets or sets the type of input control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsRequired">
            <summary>
            Gets or sets if the field is required.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsReadOnly">
            <summary>
            Gets or sets if the field is read-only.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.AlternativeText">
            <summary>
            Gets or sets the alternative text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Source">
            <summary>
            Gets or sets the image source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Maximum">
            <summary>
            Gets or sets max HTML attribute, containing the maximum (numeric
            or date-time) value for this item, which must not be less than its
            minimum (min attribute) value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Minimum">
            <summary>
            Gets or sets the min HTML attribute, containing the minimum (numeric
            or date-time) value for this item, which must not be greater than its
            maximum (max attribute) value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Pattern">
            <summary>
            Gets or sets the pattern HTML attribute, containing a regular expression
            that the control's value is checked against. The pattern must match the
            entire value, not just some subset. This attribute applies when the value
            of the type attribute is text, search, tel, url or email; otherwise it is ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Step">
            <summary>
            Gets or sets the step HTML attribute, which works with min and max to limit the
            increments at which a numeric or date-time value can be set. It can be the string
            any or a positive floating point number. If this is not set to any, the control
            accepts only values at multiples of the step value greater than the minimum.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.List">
            <summary>
            Gets the datalist element in the same document. Only options that are valid
            values for this input element will be displayed. This attribute is ignored when
            the type attribute's value is hidden, checkbox, radio, file, or a button type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.FormAction">
            <summary>
            Gets or sets the URI of a resource that processes information submitted by the button.
            If specified, this attribute overrides the action attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.FormEncType">
            <summary>
            Gets or sets the type of content that is used to submit the form to the server. If specified, this
            attribute overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.FormMethod">
            <summary>
            Gets or sets the HTTP method that the browser uses to submit the form. If specified, this attribute
            overrides the method attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.FormNoValidate">
            <summary>
            Gets or sets that the form is not to be validated when it is submitted. If specified, this attribute
            overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.FormTarget">
            <summary>
            Gets or sets A name or keyword indicating where to display the response that is received after submitting
            the form. If specified, this attribute overrides the target attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.ValueAsNumber">
            <summary>
            Gets or sets the value of the element, interpreted as one of the following in order:
            1.) Time value 2.) Number 3.) otherwise NaN.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.ValueAsDate">
            <summary>
            Gets or sets the value of the element, interpreted as a date, or null
            if conversion is not possible.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsIndeterminate">
            <summary>
            Gets or sets if the state if indeterminate.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsDefaultChecked">
            <summary>
            Gets or sets
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsChecked">
            <summary>
            Gets or sets if the input element is checked or not.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Size">
            <summary>
            Gets or sets the display size of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.IsMultiple">
            <summary>
            Gets or sets the multiple HTML attribute, whichindicates whether
            multiple items can be selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.MaxLength">
            <summary>
            Gets or sets the maxlength HTML attribute, indicating
            the maximum number of characters the user can enter.
            This constraint is evaluated only when the value changes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.Placeholder">
            <summary>
            Gets or sets the placeholder HTML attribute, containing a hint to
            the user about what to enter in the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.DisplayWidth">
            <summary>
            Gets or sets the display width of the input element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.DisplayHeight">
            <summary>
            Gets or sets the display height of the input element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.SelectionDirection">
            <summary>
            Gets the direction in which selection occurred. This is "forward" if
            selection was performed in the start-to-end direction of the current
            locale, or "backward" for the opposite direction.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.DirectionName">
            <summary>
            Gets or sets the directionality of the form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.SelectionStart">
            <summary>
            Gets or sets the index of the beginning of selected text.
            If no text is selected, contains the index of the character
            that follows the input cursor. On being set, the control behaves
            as if setSelectionRange() had been called with this as the first
            argument, and selectionEnd as the second argument.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlInputElement.SelectionEnd">
            <summary>
            Gets or sets the index of the end of selected text. If no text
            is selected, contains the index of the character that follows
            the input cursor. On being set, the control behaves as if
            setSelectionRange() had been called with this as the second
            argument, and selectionStart as the first argument.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlKeygenElement">
            <summary>
            Represents the keygen HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.Autofocus">
            <summary>
            Gets or sets the autofocus HTML attribute, which indicates whether the
            control should have input focus when the page loads.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.IsDisabled">
            <summary>
            Gets or sets if the keygen is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.Type">
            <summary>
            Gets the type of input control (keygen).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.KeyEncryption">
            <summary>
            Gets or sets the type of encryption used.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlKeygenElement.Challenge">
            <summary>
            Gets or sets the challenge attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlLabelElement">
            <summary>
            Represents the label HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLabelElement.Form">
            <summary>
            Gets the form element that the label is assigned for, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLabelElement.HtmlFor">
            <summary>
            Gets or sets the ID of the labeled control. Reflects the for attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLabelElement.Control">
            <summary>
            Gets the control that the label is assigned for, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlLegendElement">
            <summary>
            Represents the legend HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLegendElement.Form">
            <summary>
            Gets the associated form element, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlLinkElement">
            <summary>
            Represents a link HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.IsDisabled">
            <summary>
            Gets or sets if the stylesheet is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.Href">
            <summary>
            Gets or sets the URI for the target resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.Relation">
            <summary>
            Gets or sets the forward relationship of the linked resource from the document to the resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.RelationList">
            <summary>
            Gets the list of relations contained in the rel attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.Media">
            <summary>
            Gets or sets the use with one or more target media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.TargetLanguage">
            <summary>
            Gets or sets the language code for the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.Type">
            <summary>
            Gets or sets the content type of the style sheet language.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlLinkElement.Sizes">
            <summary>
            Gets the list of sizes defined in the sizes attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlListItemElement">
            <summary>
            Represents the li HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlListItemElement.Value">
            <summary>
            Gets or sets the value in an ordered list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlMapElement">
            <summary>
            Represents the map HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMapElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMapElement.Areas">
            <summary>
            Gets a collection representing the area elements
            associated to this map.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMapElement.Images">
            <summary>
            Gets a collection representing the img and object
            elements associated to this element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlMenuElement">
            <summary>
            Represents the menu HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuElement.Label">
            <summary>
            Gets or sets the text label of the menu element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuElement.Type">
            <summary>
            Gets or sets the type of the menu element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlMenuItemElement">
            <summary>
            Represents the menuitem HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.Command">
            <summary>
            Gets the assigned master command, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.Type">
            <summary>
            Gets or sets the type of command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.Label">
            <summary>
            Gets or sets the user-visible label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.Icon">
            <summary>
            Gets or sets the icon for the command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.IsDisabled">
            <summary>
            Gets or sets if the menuitem element is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.IsChecked">
            <summary>
            Gets or sets if the menuitem element is checked or not.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.IsDefault">
            <summary>
            Gets or sets if the menuitem element is the default command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMenuItemElement.RadioGroup">
            <summary>
            Gets or sets the name of group of commands to
            treat as a radio button group.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlMetaElement">
            <summary>
            Represents the meta HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMetaElement.Name">
            <summary>
            Gets or sets the name of the meta element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMetaElement.HttpEquivalent">
            <summary>
            Gets or sets the value of the equivalent in a meta element, which
            is effective if the server doesn't send a corresponding real header.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMetaElement.Content">
            <summary>
            Gets or sets the value of the content attribute of the meta element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlMeterElement">
            <summary>
            Represents the meter HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.Low">
            <summary>
            Gets or sets the low value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.High">
            <summary>
            Gets or sets the high value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.Optimum">
            <summary>
            Gets or sets the optimum value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlMeterElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlModElement">
            <summary>
            Represents the mod HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlModElement.Citation">
            <summary>
            Gets the cite HTML attribute, containing a URI of a
            resource explaining the change.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlModElement.DateTime">
            <summary>
            Gets the datetime HTML attribute, containing a date-and-time
            string representing a timestamp for the change.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlObjectElement">
            <summary>
            Represents the object HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.Source">
            <summary>
            Gets or sets the address of the resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.Type">
            <summary>
            Gets or sets the type of the resource. If present,
            the attribute must be a valid MIME type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.TypeMustMatch">
            <summary>
            Gets or sets an attribute whose presence indicates that the resource specified by the data
            attribute is only to be used if the value of the type attribute and the Content-Type of the
            aforementioned resource match.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.UseMap">
            <summary>
            Gets or sets the associated image map of the object if the object element represents an image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.DisplayWidth">
            <summary>
            Gets or sets the display width of the object element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.DisplayHeight">
            <summary>
            Gets or sets the display height of the object element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.ContentDocument">
            <summary>
            Gets the active document of the object element's nested browsing context, if it has one;
            otherwise returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlObjectElement.ContentWindow">
            <summary>
            Gets the object element's nested browsing context, if it has one; otherwise returns null.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlOptionElement">
            <summary>
            Represents the option HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.IsDisabled">
            <summary>
            Gets or sets if the option is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.IsDefaultSelected">
            <summary>
            Gets or sets if the option is selected by default.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.IsSelected">
            <summary>
            Gets or sets if the option is currently selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.Text">
            <summary>
            Gets or sets the text of the option.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionElement.Index">
            <summary>
            Gets the index of the option element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlOptionsGroupElement">
            <summary>
            Represents the optgroup HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionsGroupElement.IsDisabled">
            <summary>
            Gets or sets if the optgroup is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOptionsGroupElement.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlOrderedListElement">
            <summary>
            Represents the ol HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOrderedListElement.IsReversed">
            <summary>
            Gets or sets if the order is reversed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOrderedListElement.Start">
            <summary>
            Gets or sets the lowest number.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOrderedListElement.Type">
            <summary>
            Gets or sets the type of enumeration.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlOutputElement">
            <summary>
            Represents the output HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.HtmlFor">
            <summary>
            Gets or sets the IDs of the input elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.Type">
            <summary>
            Gets the type of input control (output).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlOutputElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlParagraphElement">
            <summary>
            Represents the p HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlParamElement">
            <summary>
            Represents the param HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlParamElement.Name">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlParamElement.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlPreElement">
            <summary>
            Represents the pre HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlProgressElement">
            <summary>
            Represents the progress HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlProgressElement.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlProgressElement.Max">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlProgressElement.Position">
            <summary>
            Gets the position.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlProgressElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlQuoteElement">
            <summary>
            Represents the q HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlQuoteElement.Citation">
            <summary>
            Gets or sets the citation of the element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlScriptElement">
            <summary>
            Represents the script HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.Source">
            <summary>
            Gets or sets the source URL of the script.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.IsAsync">
            <summary>
            Gets or sets if the script should be run asynchronously.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.IsDeferred">
            <summary>
            Gets or sets if script execution should be deferred.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.Type">
            <summary>
            Gets or sets the type of script.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.CharacterSet">
            <summary>
            Gets or sets the character set of the script.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.CrossOrigin">
            <summary>
            Gets or sets the cross-origin attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlScriptElement.Text">
            <summary>
            Gets or sets the script's source code.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlSelectElement">
            <summary>
            Represents the select HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlSelectElement.AddOption(AngleSharp.DOM.Html.IHtmlOptionElement,AngleSharp.DOM.Html.IHtmlElement)">
            <summary>
            Adds an option element to the options collection.
            </summary>
            <param name="element">The element to add.</param>
            <param name="before">The optional reference element for inserting.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlSelectElement.AddOption(AngleSharp.DOM.Html.IHtmlOptionsGroupElement,AngleSharp.DOM.Html.IHtmlElement)">
            <summary>
            Adds an options group element to the options collection.
            </summary>
            <param name="element">The element to add.</param>
            <param name="before">The optional reference element for inserting.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlSelectElement.RemoveOptionAt(System.Int32)">
            <summary>
            Removes an element from the options collection.
            </summary>
            <param name="index">The index of the element of remove.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Autofocus">
            <summary>
            Gets or sets the autofocus HTML attribute, which indicates whether the
            control should have input focus when the page loads.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.IsDisabled">
            <summary>
            Gets or sets if the button is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Type">
            <summary>
            Gets the type of input element (select).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.IsRequired">
            <summary>
            Gets or sets if the field is required.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.SelectedOptions">
            <summary>
            Gets the set of options that are selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Size">
            <summary>
            Gets or sets the display size of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Options">
            <summary>
            Gets the set of option elements contained by this element. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Length">
            <summary>
            Gets the number of option elements in this select element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.IsMultiple">
            <summary>
            Gets or sets the multiple HTML attribute, whichindicates whether multiple items can be selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.SelectedIndex">
            <summary>
            Gets the index of the first selected option element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSelectElement.Item(System.Int32)">
            <summary>
            Gets or sets an HTML option element at the specified index.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>The option at the given position.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlSourceElement">
            <summary>
            Represents the source HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSourceElement.Source">
            <summary>
            Gets or sets the URL for the media resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSourceElement.Type">
            <summary>
            Gets or sets the type of the media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlSourceElement.Media">
            <summary>
            Gets or sets the intended type of the media resource.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlSpanElement">
            <summary>
            Represents the span HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlStyleElement">
            <summary>
            Represents a style HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlStyleElement.IsDisabled">
            <summary>
            Gets or sets if the style is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlStyleElement.Media">
            <summary>
            Gets or sets the use with one or more target media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlStyleElement.Type">
            <summary>
            Gets or sets the content type of the style sheet language.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlStyleElement.IsScoped">
            <summary>
            Gets or sets if the style is scoped.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableCaptionElement">
            <summary>
            Represents the caption HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableDataCellElement">
            <summary>
            Represents the td HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableElement">
            <summary>
            Represents the table HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.CreateCaption">
            <summary>
            Creates a new table caption object or returns the existing one.
            </summary>
            <returns>A caption element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.DeleteCaption">
            <summary>
            Deletes the table caption, if one exists.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.CreateHead">
            <summary>
            Creates a new table header section or returns the existing one.
            </summary>
            <returns>A table header element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.DeleteHead">
            <summary>
            Deletes the header from the table, if one exists. 
            </summary> 
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.CreateFoot">
            <summary>
            Creates a table footer section or returns an existing one.
            </summary>
            <returns>A footer element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.DeleteFoot">
            <summary>
            Deletes the footer from the table, if one exists.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.CreateBody">
            <summary>
            Creates a new table body section.
            </summary>
            <returns>A body element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.InsertRowAt(System.Int32)">
            <summary>
            Inserts a new empty row in the table. The new row is inserted immediately before
            and in the same section as the current indexth row in the table. If index is -1
            or equal to the number of rows, the new row is appended. In addition, when the
            table is empty the row is inserted into a TBODY which is created and inserted
            into the table.
            </summary>
            <param name="index">
            The row number where to insert a new row. This index starts from 0 and is relative
            to the logical order (not document order) of all the rows contained inside the table.
            </param>
            <returns>The inserted table row.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableElement.RemoveRowAt(System.Int32)">
            <summary>
            Deletes a table row.
            </summary>
            <param name="index">
            The index of the row to be deleted. This index starts from 0 and is relative to the
            logical order (not document order) of all the rows contained inside the table. If the
            index is -1 the last row in the table is deleted.
            </param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableElement.Caption">
            <summary>
            Gets or sets the assigned caption element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableElement.Head">
            <summary>
            Gets or sets the assigned head section.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableElement.Foot">
            <summary>
            Gets or sets the assigned foot section.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableElement.Bodies">
            <summary>
            Gets the assigned body sections.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableElement.Rows">
            <summary>
            Gets the assigned table rows.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableElement.Border">
            <summary>
            Gets or sets the border attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableRowElement">
            <summary>
            Represents the tr HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableRowElement.InsertCellAt(System.Int32)">
            <summary>
            Insert an empty TD cell into this row. If index is -1 or equal to the number
            of cells, the new cell is appended.
            </summary>
            <param name="index">[Optional] The place to insert the cell, starting from 0.
            A negative value indicates that the cell should be appended to the row.</param>
            <returns>The inserted table cell.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableRowElement.RemoveCellAt(System.Int32)">
            <summary>
            Deletes a cell from the current row.
            </summary>
            <param name="index">The index of the cell to delete, starting from 0. If the index is
            -1 the last cell in the row is deleted.</param>
            <returns>The current row.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableRowElement.Index">
            <summary>
            Gets the index in the logical order and not in document order. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableRowElement.IndexInSection">
            <summary>
            Gets the index of this row, relative to the current section starting from 0.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableRowElement.Cells">
            <summary>
            Gets the assigned table cells.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTableSectionElement">
            <summary>
            Represent the base of table section (tbody, thead, tfoot) elements.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableSectionElement.InsertRowAt(System.Int32)">
            <summary>
            Inserts a row into this section. The new row is inserted immediately before the
            current indexth row in this section. If index is -1 or equal to the number of
            rows in this section, the new row is appended.
            </summary>
            <param name="index">
            The row number where to insert a new row. This index starts from 0 and is relative
            only to the rows contained inside this section, not all the rows in the table.
            </param>
            <returns>The inserted table row.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTableSectionElement.RemoveRowAt(System.Int32)">
            <summary>
            Deletes a row from this section.
            </summary>
            <param name="index">
            The index of the row to be deleted, or -1 to delete the last row.
            This index starts from 0 and is relative only to the rows contained
            inside this section, not all the rows in the table.
            </param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTableSectionElement.Rows">
            <summary>
            Gets the assigned table rows.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTemplateElement">
            <summary>
            Represents the template HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTemplateElement.Content">
            <summary>
            Gets the template's content for cloning.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTextAreaElement">
            <summary>
            Represents the textarea HTML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTextAreaElement.SelectAll">
            <summary>
            Selects the contents of the textarea.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.IHtmlTextAreaElement.Select(System.Int32,System.Int32,System.String)">
            <summary>
            Selects a range of text, and sets selectionStart and selectionEnd.
            If either argument is greater than the length of the value, it is treated
            as pointing to the end of the value. If end is less than start, then
            both are treated as the value of end.
            </summary>
            <param name="selectionStart">The start of the selection.</param>
            <param name="selectionEnd">The end of the selection.</param>
            <param name="selectionDirection">Optional: The direction of the selection.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Autofocus">
            <summary>
            Gets or sets the autofocus HTML attribute, which indicates whether the
            control should have input focus when the page loads.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.IsDisabled">
            <summary>
            Gets or sets if the textarea is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Type">
            <summary>
            Gets the type (textarea).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.IsRequired">
            <summary>
            Gets or sets if the field is required.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.IsReadOnly">
            <summary>
            Gets or sets if the field is read-only.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Wrap">
            <summary>
            Gets or sets the wrap HTML attribute, indicating how the control wraps text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.TextLength">
            <summary>
            Gets the codepoint length of the control's value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Rows">
            <summary>
            Gets or sets the rows HTML attribute, indicating
            the number of visible text lines for the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Columns">
            <summary>
            Gets or sets the cols HTML attribute, indicating
            the visible width of the text area.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.MaxLength">
            <summary>
            Gets or sets the maxlength HTML attribute, indicating
            the maximum number of characters the user can enter.
            This constraint is evaluated only when the value changes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.Placeholder">
            <summary>
            Gets or sets the placeholder HTML attribute, containing a hint to
            the user about what to enter in the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.SelectionDirection">
            <summary>
            Gets the direction in which selection occurred. This is "forward" if
            selection was performed in the start-to-end direction of the current
            locale, or "backward" for the opposite direction.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.DirectionName">
            <summary>
            Gets or sets the directionality of the form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.SelectionStart">
            <summary>
            Gets or sets the index of the beginning of selected text.
            If no text is selected, contains the index of the character
            that follows the input cursor. On being set, the control behaves
            as if setSelectionRange() had been called with this as the first
            argument, and selectionEnd as the second argument.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTextAreaElement.SelectionEnd">
            <summary>
            Gets or sets the index of the end of selected text. If no text
            is selected, contains the index of the character that follows
            the input cursor. On being set, the control behaves as if
            setSelectionRange() had been called with this as the second
            argument, and selectionStart as the first argument.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTitleElement">
            <summary>
            Represents the title HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTitleElement.Text">
            <summary>
            Gets or sets the text of the title.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlTrackElement">
            <summary>
            Represents the track HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.Kind">
            <summary>
            Gets or sets the kind of the track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.Source">
            <summary>
            Gets or sets the media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.SourceLanguage">
            <summary>
            Gets or sets the language of the source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.Label">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.IsDefault">
            <summary>
            Gets or sets if given track is the default track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.ReadyState">
            <summary>
            Gets the ready state of the given track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlTrackElement.Track">
            <summary>
            Gets the associated text track.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlUnknownElement">
            <summary>
            Represents an unknown HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlUnorderedListElement">
            <summary>
            Represents an ul HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IHtmlVideoElement">
            <summary>
            Represents the video HTML element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlVideoElement.DisplayWidth">
            <summary>
            Gets or sets the displayed width of the video element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlVideoElement.DisplayHeight">
            <summary>
            Gets or sets the displayed height of the video element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlVideoElement.OriginalWidth">
            <summary>
            Gets the width of the video.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlVideoElement.OriginalHeight">
            <summary>
            Gets the height of the video.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IHtmlVideoElement.Poster">
            <summary>
            Gets or sets the URL to a preview image.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IRadioNodeList">
            <summary>
            Represents a list of radio input elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.INodeList">
            <summary>
            NodeList objects are collections of nodes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.INodeList.Item(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds. 
            </summary>
            <param name="index">The 0-based index.</param>
            <returns>The element if it exists, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.INodeList.Length">
            <summary>
            Gets the number of nodes in the NodeList.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IRadioNodeList.Value">
            <summary>
            Gets or sets the currently selected value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IStringList">
            <summary>
            Represents a string list.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IStringList.Contains(System.String)">
            <summary>
            Returns a boolean indicating if the specified entry is available.
            </summary>
            <param name="entry">The entry that will be looked for.</param>
            <returns>True if the element is available, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IStringList.Item(System.Int32)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="index">The index of the value.</param>
            <returns>The string value at the given index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IStringList.Length">
            <summary>
            Gets the number of entries.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IWindowTimers">
            <summary>
            Providers timers to the Window object.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IWindowTimers.SetTimeout(System.Action{AngleSharp.DOM.IWindow},System.Int32)">
            <summary>
            Executes the provided handler after the timeout.
            </summary>
            <param name="handler">The handler that is called after the timeout.</param>
            <param name="timeout">The timeout in milliseconds.</param>
            <returns>The handler to reference clear the timeout.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IWindowTimers.ClearTimeout(System.Int32)">
            <summary>
            Clears a timeout.
            </summary>
            <param name="handle">The handle that specifies, which timeout to clear.</param>
        </member>
        <member name="M:AngleSharp.DOM.IWindowTimers.SetInterval(System.Action{AngleSharp.DOM.IWindow},System.Int32)">
            <summary>
            Keeps executing the provided handler with the interval.
            </summary>
            <param name="handler">The handler that is called each time.</param>
            <param name="timeout">The interval in milliseconds.</param>
            <returns>The handler to reference clear the interval.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IWindowTimers.ClearInterval(System.Int32)">
            <summary>
            Clears an interval.
            </summary>
            <param name="handle">The handle that specifies, which interval to clear.</param>
        </member>
        <member name="T:AngleSharp.DOM.Media.IAudioTrack">
            <summary>
            Represents an audio track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrack.Id">
            <summary>
            Gets the id of the audio track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrack.Kind">
            <summary>
            Gets the kind of audio track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrack.Label">
            <summary>
            Gets the label of the track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrack.Language">
            <summary>
            Gets the language of the track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrack.IsEnabled">
            <summary>
            Gets or sets if the track is enabled.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.IAudioTrackList">
            <summary>
            Represents a list of audio tracks.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.IAudioTrackList.GetTrackById(System.String)">
            <summary>
            Gets the track with the specified id.
            </summary>
            <param name="id">The HTML id of the track.</param>
            <returns>The track with the given id, if any.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrackList.Length">
            <summary>
            Gets the number of tracks.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IAudioTrackList.Item(System.Int32)">
            <summary>
            Gets the track at the given index.
            </summary>
            <param name="index">The 0-based track index.</param>
            <returns>The track at the position.</returns>
        </member>
        <member name="E:AngleSharp.DOM.Media.IAudioTrackList.Changed">
            <summary>
            Event triggered after changing contents.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IAudioTrackList.TrackAdded">
            <summary>
            Event triggered after adding a track.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IAudioTrackList.TrackRemoved">
            <summary>
            Event triggered after removing a track.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.ICanvasRenderingContext2D">
            <summary>
            Represents the canvas rendering context.
            More information is available at the WHATWG homepage:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting.html#canvasrenderingcontext2d
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.IRenderingContext">
            <summary>
            Represents the typedef for any rendering context.
            This is shown is the base interface for all rendering
            contexts.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.ICanvasRenderingContext2D.SaveState">
            <summary>
            Push state on state stack.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.ICanvasRenderingContext2D.RestoreState">
            <summary>
            Pop state stack and restore state.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ICanvasRenderingContext2D.Canvas">
            <summary>
            Gets the associated canvas element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ICanvasRenderingContext2D.Width">
            <summary>
            Gets or sets the width of the canvas.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ICanvasRenderingContext2D.Height">
            <summary>
            Gets or sets the height of the canvas.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.IMediaError">
            <summary>
            Stores information about media errors.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IMediaError.Code">
            <summary>
            Gets the code that represents the media error.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.ITextTrack">
            <summary>
            Information about a text track.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.ITextTrack.Add(AngleSharp.DOM.Media.ITextTrackCue)">
            <summary>
            Adds another cue to the text track.
            </summary>
            <param name="cue">The cue to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Media.ITextTrack.Remove(AngleSharp.DOM.Media.ITextTrackCue)">
            <summary>
            Removes a cue from the text track.
            </summary>
            <param name="cue">The cue that should be removed.</param>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrack.Kind">
            <summary>
            Gets the text track kind of the text track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrack.Label">
            <summary>
            Gets the text track label of the text track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrack.Language">
            <summary>
            Gets the text track language of the text track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrack.Mode">
            <summary>
            Gets or sets the mode of the text track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrack.Cues">
            <summary>
            Gets the available text cues.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrack.ActiveCues">
            <summary>
            Gets the active text cues.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.ITextTrack.CueChanged">
            <summary>
            Event triggered after a cue has changed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.ITextTrackCue">
            <summary>
            Represents a text track cue.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.ITextTrackCue.AsHtml">
            <summary>
            Returns the text track cue text as a DocumentFragment of HTML elements
            and other DOM nodes.
            </summary>
            <returns>The document fragment.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Id">
            <summary>
            Gets the text track cue identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Track">
            <summary>
            Gets the assigned track for this cue.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.StartTime">
            <summary>
            Gets or sets the text track cue start time, in seconds.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.EndTime">
            <summary>
            Gets or sets the text track cue end time, in seconds.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.IsPausedOnExit">
            <summary>
            Gets or sets the text track cue pause-on-exit flag.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Vertical">
            <summary>
            Gets or sets a string representing the text track cue writing direction,
            as follows. If it is horizontal: The empty string. If it is vertical
            growing left: The string "rl". If it is vertical growing right: The string "lr".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.IsSnappedToLines">
            <summary>
            Gets or sets the text track cue snap-to-lines flag.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Line">
            <summary>
            Gets or sets the text track cue line position. In the case of
            the value being auto, the string "auto" is returned.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Position">
            <summary>
            Gets or sets the text track cue text position.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Size">
            <summary>
            Gets or sets the text track cue size.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Alignment">
            <summary>
            Gets or sets a string representing the text track cue alignment, as
            follows. If it is start alignment: the string "start". If it is middle
            alignment: the string "middle". If it is end alignment: the string "end".
            If it is left alignment: the string "left". If it is right alignment:
            the string "right".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Text">
            <summary>
            Gets or sets the text track cue text in raw unparsed form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Entered">
            <summary>
            Event triggered after entering.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCue.Exited">
            <summary>
            Event triggered after exiting.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.ITextTrackCueList">
            <summary>
            Contains a list of text cues.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.ITextTrackCueList.GetCueById(System.String)">
            <summary>
            Gets the cue with the specified id.
            </summary>
            <param name="id">The HTML id of the cue.</param>
            <returns>The cue with the given id, if any.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCueList.Length">
            <summary>
            Gets the number of cues.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackCueList.Item(System.Int32)">
            <summary>
            Gets the cue at the given index.
            </summary>
            <param name="index">The 0-based cue index.</param>
            <returns>The cue at the position.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Media.ITextTrackList">
            <summary>
            Represents a list of text tracks.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackList.Length">
            <summary>
            Gets the number of tracks.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITextTrackList.Item(System.Int32)">
            <summary>
            Gets the track at the given index.
            </summary>
            <param name="index">The 0-based track index.</param>
            <returns>The track at the position.</returns>
        </member>
        <member name="E:AngleSharp.DOM.Media.ITextTrackList.TrackAdded">
            <summary>
            Event triggered after adding a track.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.ITextTrackList.TrackRemoved">
            <summary>
            Event triggered after removing a track.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.ITimeRanges">
            <summary>
            Represents a media time range.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.ITimeRanges.Start(System.Int32)">
            <summary>
            Returns the time offset at which a specified time range begins.
            </summary>
            <param name="index">The range number to return the starting time for.</param>
            <returns>The time offset.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Media.ITimeRanges.End(System.Int32)">
            <summary>
            Returns the time offset at which a specified time range ends.
            </summary>
            <param name="index">The range number to return the ending time for.</param>
            <returns>The time offset.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Media.ITimeRanges.Length">
            <summary>
            Gets the length of the range in frames.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.IVideoTrack">
            <summary>
            Represents an video track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrack.Id">
            <summary>
            Gets the id of the video track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrack.Kind">
            <summary>
            Gets the kind of video track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrack.Label">
            <summary>
            Gets the label of the track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrack.Language">
            <summary>
            Gets the language of the track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrack.IsSelected">
            <summary>
            Gets or sets if the track is selected.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Media.IVideoTrackList">
            <summary>
            Represents a list of video tracks.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Media.IVideoTrackList.GetTrackById(System.String)">
            <summary>
            Gets the track with the specified id.
            </summary>
            <param name="id">The HTML id of the track.</param>
            <returns>The track with the given id, if any.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrackList.Length">
            <summary>
            Gets the number of tracks.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrackList.SelectedIndex">
            <summary>
            Gets the currently selected index.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Media.IVideoTrackList.Item(System.Int32)">
            <summary>
            Gets the track at the given index.
            </summary>
            <param name="index">The 0-based track index.</param>
            <returns>The track at the position.</returns>
        </member>
        <member name="E:AngleSharp.DOM.Media.IVideoTrackList.Changed">
            <summary>
            Event triggered after changing contents.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IVideoTrackList.TrackAdded">
            <summary>
            Event triggered after adding a track.
            </summary>
        </member>
        <member name="E:AngleSharp.DOM.Media.IVideoTrackList.TrackRemoved">
            <summary>
            Event triggered after removing a track.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IAttr">
            <summary>
            This type represents a DOM element's attribute as an object. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IAttr.LocalName">
            <summary>
            Gets the local name of the attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IAttr.Name">
            <summary>
            Gets the attribute's name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IAttr.Value">
            <summary>
            Gets the attribute's value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IAttr.NamespaceUri">
            <summary>
            Gets the namespace URL of the attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IAttr.Prefix">
            <summary>
            Gets the prefix used by the namespace.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ICharacterData">
            <summary>
            The CharacterData abstract interface represents a Node object that contains characters. 
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.ICharacterData.Substring(System.Int32,System.Int32)">
            <summary>
            Returns a string containing the part of Data of the specified
            length and starting at the specified offset.
            </summary>
            <param name="offset">The point where to start.</param>
            <param name="count">The numbers of characters to copy.</param>
            <returns>A string that contains a subset of the characters of Data.</returns>
        </member>
        <member name="M:AngleSharp.DOM.ICharacterData.Append(System.String)">
            <summary>
            Appends the given value to the Data string.
            </summary>
            <param name="value">The text to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.ICharacterData.Insert(System.Int32,System.String)">
            <summary>
            Inserts the specified characters, at the specified offset,
            in the Data text.
            </summary>
            <param name="offset">The offset where to insert the text.</param>
            <param name="value">The text to insert.</param>
        </member>
        <member name="M:AngleSharp.DOM.ICharacterData.Delete(System.Int32,System.Int32)">
            <summary>
            Removes the specified amount of characters, starting at
            the specified offset, from the Data.
            </summary>
            <param name="offset">The offset, where the removal should begin.</param>
            <param name="count">The number of characters to remove.</param>
        </member>
        <member name="M:AngleSharp.DOM.ICharacterData.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the specified amount of characters, starting at the
            specified offset, with the specified value.
            </summary>
            <param name="offset">The offset, where the text should be inserted.</param>
            <param name="count">The amount of characters that should be overwritten.</param>
            <param name="value">The value to insert.</param>
        </member>
        <member name="P:AngleSharp.DOM.ICharacterData.Data">
            <summary>
            Gets or sets the contained text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ICharacterData.Length">
            <summary>
            Gets the length of the contained text.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IComment">
            <summary>
            The Comment interface represents textual notations within markup;
            although it is generally not visually shown, such comments are
            available to be read in the source view.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IDocumentFragment">
            <summary>
            The DocumentFragment interface represents a minimal document object that has no parent.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IDocumentType">
            <summary>
            The DocumentType interface represents a Node containing a doctype.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentType.Name">
            <summary>
            Gets or sets the name of the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentType.PublicIdentifier">
            <summary>
            Gets or sets the public ID of the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDocumentType.SystemIdentifier">
            <summary>
            Gets or sets the system ID of the document type.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IDomException">
            <summary>
            Defines how a DOMException should look like.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IDomException.Code">
            <summary>
            Gets the error code for this exception.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IHistory">
            <summary>
            The History interface allows to manipulate the browser session history, that
            is the pages visited in the tab or frame that the current page is loaded in.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IHistory.Go(System.Int32)">
            <summary>
            Loads a page from the session history, identified by its relative location to the current
            page, for example -1 for the previous page or 1 for the next page. When integerDelta is out
            of bounds (e.g. -1 when there are no previously visited pages in the session history), the
            method doesn't do anything and doesn't raise an exception. Calling go() without parameters
            or with a non-integer argument has no effect.
            </summary>
            <param name="delta">The number of states to surpass.</param>
        </member>
        <member name="M:AngleSharp.DOM.IHistory.Back">
            <summary>
            Goes to the previous page in session history, the same action as when the user
            clicks the browser's Back button. Equivalent to history.go(-1).
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IHistory.Forward">
            <summary>
            Goes to the next page in session history, the same action as when the user clicks
            the browser's Forward button; this is equivalent to history.go(1).
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IHistory.PushState(System.Object,System.String,System.String)">
            <summary>
            Pushes the given data onto the session history stack with the specified title and,
            if provided, URL. The data is treated as opaque by the DOM.
            </summary>
            <param name="data">The data to use.</param>
            <param name="title">The title to take.</param>
            <param name="url">The URL to consider.</param>
        </member>
        <member name="M:AngleSharp.DOM.IHistory.ReplaceState(System.Object,System.String,System.String)">
            <summary>
            Updates the most recent entry on the history stack to have the specified data, title, and,
            if provided, URL. The data is treated as opaque by the DOM.
            </summary>
            <param name="data">The data to use.</param>
            <param name="title">The title to take.</param>
            <param name="url">The URL to consider.</param>
        </member>
        <member name="P:AngleSharp.DOM.IHistory.Length">
            <summary>
            Gets the number of elements in the session history, including the currently loaded page.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IHistory.State">
            <summary>
            Gets an any value representing the state at the top of the history stack.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IImplementation">
            <summary>
            The DOMImplementation interface represent an object providing
            methods which are not dependent on any particular document. 
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IImplementation.CreateDocument(System.String,System.String,AngleSharp.DOM.IDocumentType)">
            <summary>
            Creates and returns an XMLDocument.
            </summary>
            <param name="namespaceUri">The namespace URI of the document to be created, or null if the document doesn't belong to one.</param>
            <param name="qualifiedName">The qualified name, that is an optional prefix and colon plus the local root element name, of the document to be created.</param>
            <param name="doctype">The DocumentType of the document to be created. It defaults to null.</param>
            <returns>A new document.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IImplementation.CreateHtmlDocument(System.String)">
            <summary>
            Creates and returns an HTML Document.
            </summary>
            <param name="title">The title to give the new HTML document.</param>
            <returns>A new document.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IImplementation.CreateDocumentType(System.String,System.String,System.String)">
            <summary>
            Creates and returns a DocumentType.
            </summary>
            <param name="qualifiedName">The qualified name, like svg:svg.</param>
            <param name="publicId">The PUBLIC identifier.</param>
            <param name="systemId">The SYSTEM identifiers.</param>
            <returns>A document type with the specified attributes.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IImplementation.HasFeature(System.String,System.String)">
            <summary>
            Returns a Boolean indicating if a given feature is supported or not. This function
            is unreliable and kept for compatibility purpose alone: except for SVG-related queries,
            it always returns true.
            </summary>
            <param name="feature">The feature name.</param>
            <param name="version">The version of the specification defining the feature.</param>
            <returns></returns>
        </member>
        <member name="T:AngleSharp.DOM.DomEventHandler">
            <summary>
            Defines the callback signature for an event.
            </summary>
            <param name="sender">The callback this argument.</param>
            <param name="ev">The event arguments.</param>
        </member>
        <member name="T:AngleSharp.DOM.Html.ILabelabelElement">
            <summary>
            This interface marks elements that
            allow to have an attached label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ILabelabelElement.SupportsLabels">
            <summary>
            Gets if labels are supported.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ILabelabelElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ILocation">
            <summary>
            The Location interface represents the location of the object it is linked to.
            Changes done on it are reflected on the object it relates to. 
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.ILocation.Assign(System.String)">
            <summary>
            Loads the resource at the URL provided in parameter.
            </summary>
            <param name="url">The path to the resource.</param>
        </member>
        <member name="M:AngleSharp.DOM.ILocation.Replace(System.String)">
            <summary>
            Replaces the current resource with the one at the provided URL. The difference from the assign()
            method is that after using replace() the current page will not be saved in session History, meaning
            the user won't be able to use the back button to navigate to it.
            </summary>
            <param name="url">The path to the resource that should replace the current resource.</param>
        </member>
        <member name="M:AngleSharp.DOM.ILocation.Reload">
            <summary>
            Reloads the resource from the current URL.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IMutationObserver">
            <summary>
            MutationObserver provides developers a way to react to changes in a DOM.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IMutationObserver.Connect(AngleSharp.DOM.INode,AngleSharp.DOM.IMutationObserverInit)">
            <summary>
            Registers the MutationObserver instance to receive
            notifications of DOM mutations on the specified node.
            </summary>
            <param name="target">The Node on which to observe DOM mutations.</param>
            <param name="options">Specifies which DOM mutations should be reported.</param>
        </member>
        <member name="M:AngleSharp.DOM.IMutationObserver.Disconnect">
            <summary>
            Stops the MutationObserver instance from receiving
            notifications of DOM mutations. Until the observe()
            method is used again, observer's callback will not be invoked.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IMutationObserver.Flush">
            <summary>
            Empties the MutationObserver instance's record queue and
            returns what was in there.
            </summary>
            <returns>Returns an Array of MutationRecords.</returns>
        </member>
        <member name="T:AngleSharp.DOM.IMutationObserverInit">
            <summary>
            Defines a set of options to use with the mutation observer.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.ObserveTargetChildNodes">
            <summary>
            Gets or sets if additions and removals of the target node's child
            elements (including text nodes) are to be observed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.ObserveTargetDescendents">
            <summary>
            Gets or sets if mutations to not just target, but also
            target's descendants are to be observed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.ObserveTargetAttributes">
            <summary>
            Gets or sets if mutations to target's attributes are to be observed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.ObserveTargetData">
            <summary>
            Gets or sets if mutations to target's data are to be observed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.StorePreviousAttributeValue">
            <summary>
            Gets or sets if attributes is set to true and target's attribute
            value before the mutation needs to be recorded.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.StorePreviousDataValue">
            <summary>
            Gets or sets if characterData is set to true and target's
            data before the mutation needs to be recorded.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationObserverInit.AttributeFilters">
            <summary>
            Gets or sets if the attributes to observe. If this is not set,
            then all attributes are being observed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IMutationRecord">
            <summary>
            MutationRecord defines an interface that will be passed
            to the observer's callback.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.Type">
            <summary>
            Gets attributes if the mutation was an attribute mutation,
            characterData if it was a mutation to a CharacterData node,
            and childList if it was a mutation to the tree of nodes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.Target">
            <summary>
            Gets the node the mutation affected, depending on the type. For
            attributes, it is the Element whose attribute changed. For CharacterData,
            it is the CharacterData node. For ChildList, it is the node whose
            children changed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.Added">
            <summary>
            Gets the nodes added, or null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.Removed">
            <summary>
            Gets the nodes removed, or null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.PreviousSibling">
            <summary>
            Gets the previous sibling of the added or removed nodes, or null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.NextSibling">
            <summary>
            Gets the next sibling of the added or removed nodes, or null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.AttributeName">
            <summary>
            Gets the local name of the changed attribute, or null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.AttributeNamespace">
            <summary>
            Gets the namespace of the changed attribute, or null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IMutationRecord.PreviousValue">
            <summary>
            Gets a string depending on the type. For attributes, it is the value
            of the changed attribute before the change. For characterData, it is
            the data of the changed node before the change. For childList, it is
            null.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Io.IBlob">
            <summary>
            Represents a binary large object.
            http://dev.w3.org/2006/webapi/FileAPI/#dfn-Blob
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Io.IBlob.Slice(System.Int32,System.Int32,System.String)">
            <summary>
            Slices a subset of the blob into a another blob.
            </summary>
            <param name="start">The start of the slicing in bytes.</param>
            <param name="end">The end of the slicing in bytes.</param>
            <param name="contentType">The mime-type of the new blob.</param>
            <returns>A new blob with this blob's subset.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Io.IBlob.Close">
            <summary>
            Closes the stream to the blob.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.IBlob.Length">
            <summary>
            Gets the length of the blob.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.IBlob.Type">
            <summary>
            Gets the mime-type of the blob.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.IBlob.IsClosed">
            <summary>
            Gets if the stream to the blob is closed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Io.IFile">
            <summary>
            Represents a concrete file.
            http://dev.w3.org/2006/webapi/FileAPI/#dfn-file
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.IFile.Name">
            <summary>
            Gets the file's name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.IFile.LastModified">
            <summary>
            Gets the last modified date of the file.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Io.IFileList">
            <summary>
            Represents a list of files.
            http://dev.w3.org/2006/webapi/FileAPI/#dfn-filelist
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.IFileList.Item(System.Int32)">
            <summary>
            Gets the file at the specified index.
            </summary>
            <param name="index">The index of the file.</param>
            <returns>The file at the provided index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Io.IFileList.Length">
            <summary>
            Gets the number of files in the list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Navigator.INavigator">
            <summary>
            Represents the navigator information of a browsing context.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Navigator.INavigatorId">
            <summary>
            Holds the user-agent information.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Navigator.INavigatorId.Name">
            <summary>
            Gets the name of the application.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Navigator.INavigatorId.Version">
            <summary>
            Gets the version of the application.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Navigator.INavigatorId.Platform">
            <summary>
            Gets the platform of the application.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Navigator.INavigatorId.UserAgent">
            <summary>
            Gets the full name of the user-agent.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Navigator.INavigatorContentUtilities">
            <summary>
            A set of utilities to modify the navigator's behavior.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorContentUtilities.RegisterProtocolHandler(System.String,System.String,System.String)">
            <summary>
            Allows web sites to register themselves as possible handlers for particular protocols.
            </summary>
            <param name="scheme">The protocol the site wishes to handle, specified as a string.</param>
            <param name="url">The URI to the handler as a string.</param>
            <param name="title">The title of the handler presented to the user as a string.</param>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorContentUtilities.RegisterContentHandler(System.String,System.String,System.String)">
            <summary>
            Allows web sites to register themselves as possible handlers for content of a particular MIME type.
            </summary>
            <param name="mimeType">The desired MIME type as a string.</param>
            <param name="url">The URI to the handler as a string.</param>
            <param name="title">The title of the handler presented to the user as a string.</param>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorContentUtilities.IsProtocolHandlerRegistered(System.String,System.String)">
            <summary>
            Checks if any handler is registered at the given URI for the specified scheme.
            </summary>
            <param name="scheme">The scheme to check for.</param>
            <param name="url">The URI to the handler.</param>
            <returns>True if a handler is registered, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorContentUtilities.IsContentHandlerRegistered(System.String,System.String)">
            <summary>
            Checks if any handler is registered at the given URI for the specified mime-type.
            </summary>
            <param name="mimeType">The mime-type to check for.</param>
            <param name="url">The URI to the handler.</param>
            <returns>True if a handler is registered, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorContentUtilities.UnregisterProtocolHandler(System.String,System.String)">
            <summary>
            Removes the specified protocol handler, if any.
            </summary>
            <param name="scheme">The name of the handled scheme to remove.</param>
            <param name="url">The URI to the handler of the scheme.</param>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorContentUtilities.UnregisterContentHandler(System.String,System.String)">
            <summary>
            Removes the specified content handler, if any.
            </summary>
            <param name="mimeType">The name of the handled mime-type to remove.</param>
            <param name="url">The URI to the handler of the mime-type.</param>
        </member>
        <member name="T:AngleSharp.DOM.Navigator.INavigatorStorageUtilities">
            <summary>
            Defines a set of methods for working with IO.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Navigator.INavigatorStorageUtilities.WaitForStorageUpdates">
            <summary>
            Blocks the current operation until storage operations have completed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Navigator.INavigatorOnline">
            <summary>
            Connectivity information regarding the navigator.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Navigator.INavigatorOnline.IsOnline">
            <summary>
            Gets if the connection is established.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IProcessingInstruction">
            <summary>
            A processing instruction provides an opportunity for application-specific
            instructions to be embedded within XML and which can be ignored by XML
            processors which do not support processing their instructions (outside
            of their having a place in the DOM).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IProcessingInstruction.Target">
            <summary>
            Gets the target of the processing instruction.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IStringMap">
            <summary>
            The DOMStringMap interface represents a set of name-value pairs.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IStringMap.Remove(System.String)">
            <summary>
            Deletes the string with the given name from the map.
            </summary>
            <param name="name">The name of the string to remove.</param>
        </member>
        <member name="P:AngleSharp.DOM.IStringMap.Item(System.String)">
            <summary>
            Gets or sets an item in the dictionary.
            </summary>
            <param name="name">The name of the item to get or set.</param>
            <returns>The item with the associated name.</returns>
        </member>
        <member name="T:AngleSharp.DOM.IText">
            <summary>
            The Text interface represents the textual content of Element or Attr.
            If an element has no markup within its content, it has a single child
            implementing Text that contains the element's text.  However, if the
            element contains markup, it is parsed into information items and Text
            nodes that form its children.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IText.Split(System.Int32)">
            <summary>
            Breaks the node into two nodes at a specified offset.
            </summary>
            <param name="offset">The point where the Node should be split.</param>
            <returns>The freshly created Text element with the rest of the content.</returns>
        </member>
        <member name="P:AngleSharp.DOM.IText.Text">
            <summary>
            Gets a string containing the text of all Text nodes logically adjacent
            to this Node, concatenated in document order.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.IValidityState">
            <summary>
            The ValidityState interface represents the validity states that an element
            can be in, with respect to constraint validation. Together, they help explain
            why an element's value fails to validate, if it's not valid.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsValueMissing">
            <summary>
            Gets if the element has a required attribute, but no value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsTypeMismatch">
            <summary>
            Gets if the value is not in the required syntax (when type is email or url).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsPatternMismatch">
            <summary>
            Gets if the value does not match the specified pattern.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsTooLong">
            <summary>
            Gets if the value exceeds the specified maxlength.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsRangeUnderflow">
            <summary>
            Gets if the value is less than the minimum specified by the min attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsRangeOverflow">
            <summary>
            Gets if the value is greater than the maximum specified by the max attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsStepMismatch">
            <summary>
            Gets if the value does not fit the rules determined by the step attribute
            (that is, it's not evenly divisible by the step value).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsCustomError">
            <summary>
            Gets the element's custom validity message.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.IValidityState.IsValid">
            <summary>
            Gets if the element meets all constraint validations, and is therefore
            considered to be valid.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.IWindow">
            <summary>
            The interface for a browsing window element.
            https://developer.mozilla.org/en-US/docs/Web/API/Window
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.GetComputedStyle(AngleSharp.DOM.IElement,System.String)">
            <summary>
            Gives the values of all the CSS properties of an element after
            applying the active stylesheets and resolving any basic computation
            those values may contain.
            </summary>
            <param name="element">The element to compute the styles for.</param>
            <param name="pseudo">The optional pseudo selector to use.</param>
            <returns>The style declaration describing the element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Stop">
            <summary>
            Stops the current document from being loaded.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Focus">
            <summary>
            Focuses the current window.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Blur">
            <summary>
            Removes the focus from the current window.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Alert(System.String)">
            <summary>
            Shows the messagebox with the given message.
            </summary>
            <param name="message">The message to display.</param>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Confirm(System.String)">
            <summary>
            Opens a confirmation box with the provided message.
            </summary>
            <param name="message">The message to display.</param>
            <returns>True if the message has been confirmed, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.IWindow.Print">
            <summary>
            Opens the print dialog for the current window.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.Document">
            <summary>
            Gets a reference to the document that the window contains.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.Location">
            <summary>
            Gets the location of the current document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.Status">
            <summary>
            Gets or sets the status of the window.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.Name">
            <summary>
            Gets or sets the name of the window.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.OuterHeight">
            <summary>
            Gets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.OuterWidth">
            <summary>
            Gets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.ScreenX">
            <summary>
            Gets the horizontal distance of the left border of the user's
            browser from the left side of the screen.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.ScreenY">
            <summary>
            Gets the vertical distance of the top border of the user's
            browser from the top side of the screen.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.Proxy">
            <summary>
            Gets the proxy to the current browsing context.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.Navigator">
            <summary>
            Gets the user-agent information.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.IWindow.History">
            <summary>
            Gets the history of the current window.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.ISvgCircleElement">
            <summary>
            Represents the circle SVG element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.ISvgElement">
            <summary>
            The SVGElement interface represents any SVG element. Some elements directly
            implement this interface, other implement it via an interface that inherit it.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.ISvgDescriptionElement">
            <summary>
            Represents the desc SVG element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.ISvgForeignObjectElement">
            <summary>
            Represents the foreignobject SVG element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.ISvgSvgElement">
            <summary>
            Represents the svg SVG element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.ISvgTitleElement">
            <summary>
            Represents the title SVG element.
            </summary>
        </member>
        <member name="T:AngleSharp.Media.IAudioInfo">
            <summary>
            Contains information about a sound file.
            </summary>
        </member>
        <member name="T:AngleSharp.Media.IMediaInfo">
            <summary>
            Contains information about a media resource.
            </summary>
        </member>
        <member name="T:AngleSharp.Media.IResourceInfo">
            <summary>
            Specifies general resource information.
            </summary>
        </member>
        <member name="P:AngleSharp.Media.IMediaInfo.Controller">
            <summary>
            Gets the controller responsible for the media.
            </summary>
        </member>
        <member name="T:AngleSharp.Media.IImageInfo">
            <summary>
            Contains information about an image file.
            </summary>
        </member>
        <member name="P:AngleSharp.Media.IImageInfo.Width">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.Media.IImageInfo.Height">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="T:AngleSharp.Media.IVideoInfo">
            <summary>
            Contains information about a video file.
            </summary>
        </member>
        <member name="P:AngleSharp.Media.IVideoInfo.Width">
            <summary>
            Gets the width of the video.
            </summary>
        </member>
        <member name="P:AngleSharp.Media.IVideoInfo.Height">
            <summary>
            Gets the height of the video.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.CorsSetting">
            <summary>
            CORS settings attributes (2.6.6).
            </summary>
        </member>
        <member name="F:AngleSharp.Network.CorsSetting.None">
            <summary>
            The default (missing) value.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.CorsSetting.Anonymous">
            <summary>
            Cross-origin CORS requests for the element will have the
            omit credentials flag set. 
            </summary>
        </member>
        <member name="F:AngleSharp.Network.CorsSetting.UseCredentials">
            <summary>
            Cross-origin CORS requests for the element will not have
            the omit credentials flag set
            </summary>
        </member>
        <member name="T:AngleSharp.Network.DefaultPorts">
            <summary>
            Contains a collection of default ports.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.FtpPort">
            <summary>
            Gets the default port for the file transfer protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.FilePort">
            <summary>
            Gets the default port for the local file protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.GopherPort">
            <summary>
            Gets the default port for the gopher protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.HttpPort">
            <summary>
            Gets the default port for the hyper-text transfer protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.HttpsPort">
            <summary>
            Gets the default port for the secure hyper-text transfer protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.WsPort">
            <summary>
            Gets the default port for the websocket protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.WssPort">
            <summary>
            Gets the default port for the secure websocket protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.TelnetPort">
            <summary>
            Gets the default port for the secure websocket protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.DefaultPorts.SshPort">
            <summary>
            Gets the default port for the secure websocket protocol.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.DefaultPorts.GetDefaultPort(System.String)">
            <summary>
            Gets the default port for the given protocol, if the protocol
            is a relative scheme protocol.
            </summary>
            <param name="protocol">The protocol to get the port for.</param>
            <returns>The string representing the default port, or null, if the protocol is not known.</returns>
        </member>
        <member name="T:AngleSharp.Network.KnownProtocols">
            <summary>
            Contains a list of known protocol names.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Http">
            <summary>
            The Hypertext Transfer Protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Https">
            <summary>
            The Hypertext Transfer Protocol Secure.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Ftp">
            <summary>
            The File Transfer Protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.JavaScript">
            <summary>
            The pseudo JavaScript protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Data">
            <summary>
            The pseudo Data protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Mailto">
            <summary>
            The pseudo Mailto protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.File">
            <summary>
            The pseudo File protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Ws">
            <summary>
            The WebSocket protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Wss">
            <summary>
            The WebSocket Secure protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Telnet">
            <summary>
            The Telnet protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Ssh">
            <summary>
            The Secure Shell protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Gopher">
            <summary>
            The legacy gopher protocol.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.KnownProtocols.Blob">
            <summary>
            The binary large object protocol.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.KnownProtocols.IsRelative(System.String)">
            <summary>
            Checks if the given protocol (without a colon in the end) is
            what is called a relative scheme.
            </summary>
            <param name="protocol">The protocol to examine.</param>
            <returns>True if the protocol is a relative scheme, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Network.KnownProtocols.IsOriginable(System.String)">
            <summary>
            Checks if the given protocol (without a colon in the end) is
            what is suitable for deriving the origin.
            </summary>
            <param name="protocol">The protocol to examine.</param>
            <returns>True if the protocol is suited for origin, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.Css.Frequency">
            <summary>
            Represents a time value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Frequency.#ctor(System.Single,AngleSharp.Css.Frequency.Unit)">
            <summary>
            Creates a new frequency value.
            </summary>
            <param name="value">The value of the frequency.</param>
            <param name="unit">The unit of the frequency.</param>
        </member>
        <member name="M:AngleSharp.Css.Frequency.op_Explicit(AngleSharp.Css.Frequency)~System.Single">
            <summary>
            Converts the frequency to a single floating point.
            </summary>
            <param name="frequency">The frequency.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Frequency.Equals(AngleSharp.Css.Frequency)">
            <summary>
            Checks for equality with the other frequency.
            </summary>
            <param name="other">The frequency to compare to.</param>
            <returns>True if both frequencies are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Frequency.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Frequency.GetHashCode">
            <summary>
            Returns a hash code that defines the current frequency.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Frequency.ToString">
            <summary>
            Returns a string representing the frequency.
            </summary>
            <returns>The unit string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Frequency.ToCss">
            <summary>
            Returns a CSS representation of the frequency.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Frequency.Value">
            <summary>
            Gets the value of frequency in Hz.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Frequency.Type">
            <summary>
            Gets the type of the length.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Frequency.UnitString">
            <summary>
            Gets the representation of the unit as a string.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Frequency.Unit">
            <summary>
            The various frequency units.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Frequency.Unit.Hz">
            <summary>
            The value is a frequency (Hz).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Frequency.Unit.Khz">
            <summary>
            The value is a frequency (kHz).
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Number">
            <summary>
            Represents a float value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Number.Zero">
            <summary>
            Gets a zero value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Number.Infinite">
            <summary>
            Gets the positive infinite value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Number.One">
            <summary>
            Gets the neutral element.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Number.#ctor(System.Single)">
            <summary>
            Creates a new number value.
            </summary>
            <param name="value">The value of the number.</param>
        </member>
        <member name="M:AngleSharp.Css.Number.op_Equality(AngleSharp.Css.Number,AngleSharp.Css.Number)">
            <summary>
            Compares two numbers for equality.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>True if both numbers are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_Inequality(AngleSharp.Css.Number,AngleSharp.Css.Number)">
            <summary>
            Compares two numbers for inequality.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>True if both numbers are not equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_GreaterThanOrEqual(AngleSharp.Css.Number,AngleSharp.Css.Number)">
            <summary>
            Compares two numbers if the first one is greater or equal to the second one.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>True if the first number is greater or equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_GreaterThan(AngleSharp.Css.Number,AngleSharp.Css.Number)">
            <summary>
            Compares two numbers if the first one is greater than the second one.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>True if the first number is greater, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_LessThanOrEqual(AngleSharp.Css.Number,AngleSharp.Css.Number)">
            <summary>
            Compares two numbers if the second one is greater or equal to the second one.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>True if the second number is greater or equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_LessThan(AngleSharp.Css.Number,AngleSharp.Css.Number)">
            <summary>
            Compares two numbers if the first one is smaller than the second one.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>True if the first number is smaller, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_Explicit(AngleSharp.Css.Number)~System.Single">
            <summary>
            Converts the number to a floating point value.
            </summary>
            <param name="number">The number to convert.</param>
            <returns>The floating point value of the number.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.op_Explicit(AngleSharp.Css.Number)~System.Int32">
            <summary>
            Converts the number to an integer value.
            </summary>
            <param name="number">The number to convert.</param>
            <returns>The integer value of the number.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.Equals(AngleSharp.Css.Number)">
            <summary>
            Checks for equality with a given number.
            </summary>
            <param name="other">The number to compare to.</param>
            <returns>True if both numbers are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.GetHashCode">
            <summary>
            Returns a hash code that defines the current number.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.ToString">
            <summary>
            Returns a string representing the number.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Number.ToCss">
            <summary>
            Returns a CSS representation of the number.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Number.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Number.IsInteger">
            <summary>
            Gets if the stored value is an integer number.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Percent">
            <summary>
            Represents a percentage value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Percent.Zero">
            <summary>
            Gets a zero percent value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Percent.Fifty">
            <summary>
            Gets a fifty percent value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Percent.Hundred">
            <summary>
            Gets a hundred percent value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Percent.#ctor(System.Single)">
            <summary>
            Creates a new percentage value.
            </summary>
            <param name="value">The value in percent (0 to 100).</param>
        </member>
        <member name="M:AngleSharp.Css.Percent.op_Explicit(AngleSharp.Css.Percent)~System.Single">
            <summary>
            Converts the percent value to its probability representation.
            </summary>
            <param name="number">The percent number to convert.</param>
            <returns>The number between 0 and 1.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.op_Explicit(AngleSharp.Css.Percent)~System.Int32">
            <summary>
            Converts the percent value to its common representation.
            </summary>
            <param name="number">The percent number to convert.</param>
            <returns>The integer between 0 and 100.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.op_Equality(AngleSharp.Css.Percent,AngleSharp.Css.Percent)">
            <summary>
            Checks the equality of the two given percentages.
            </summary>
            <param name="a">The left percentage.</param>
            <param name="b">The right percentage.</param>
            <returns>True if both percentages are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.op_Inequality(AngleSharp.Css.Percent,AngleSharp.Css.Percent)">
            <summary>
            Checks the inequality of the two given percentages.
            </summary>
            <param name="a">The left percentage.</param>
            <param name="b">The right percentage.</param>
            <returns>True if both percentages are not equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.ToPixel">
            <summary>
            Converts the length to a number of pixels, if possible. If the
            current unit is relative, then an exception will be thrown.
            </summary>
            <returns>The number of pixels represented by the current length.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.Equals(AngleSharp.Css.Percent)">
            <summary>
            Checks if the given percent value is equal to the current one.
            </summary>
            <param name="other">The other percent value.</param>
            <returns>True if both have the same value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.GetHashCode">
            <summary>
            Returns a hash code that defines the current percentage.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.ToString">
            <summary>
            Returns a string representing the percentage.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Percent.ToCss">
            <summary>
            Returns a CSS representation of the percentage.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Percent.NormalizedValue">
            <summary>
            Gets the value (0 to 1).
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Time">
            <summary>
            Represents a time value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Time.Zero">
            <summary>
            Gets the zero time.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Time.#ctor(System.Single,AngleSharp.Css.Time.Unit)">
            <summary>
            Creates a new time value.
            </summary>
            <param name="value">The value of the time.</param>
            <param name="unit">The unit of the time.</param>
        </member>
        <member name="M:AngleSharp.Css.Time.op_Explicit(AngleSharp.Css.Time)~System.Single">
            <summary>
            Converts the time to the number of milliseconds.
            </summary>
            <param name="time">The time to convert.</param>
            <returns>The number of milliseconds.</returns>
        </member>
        <member name="M:AngleSharp.Css.Time.Equals(AngleSharp.Css.Time)">
            <summary>
            Checks if the current time is equal to the other time.
            </summary>
            <param name="other">The time to compare to.</param>
            <returns>True if both represent the same value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Time.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Time.GetHashCode">
            <summary>
            Returns a hash code that defines the current time.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Time.ToString">
            <summary>
            Returns a string representing the time.
            </summary>
            <returns>The unit string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Time.ToCss">
            <summary>
            Returns a CSS representation of the time.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Time.Value">
            <summary>
            Gets the value of time in ms.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Time.Type">
            <summary>
            Gets the type of the length.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Time.UnitString">
            <summary>
            Gets the representation of the unit as a string.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Time.Unit">
            <summary>
            An enumeration of time units.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Time.Unit.Ms">
            <summary>
            The value is a time (ms).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Time.Unit.S">
            <summary>
            The value is a time (s).
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Resolution">
            <summary>
            Represents a resolution value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Resolution.#ctor(System.Single,AngleSharp.Css.Resolution.Unit)">
            <summary>
            Creates a new resolution value.
            </summary>
            <param name="value">The value of the resolution.</param>
            <param name="unit">The unit of the resolution.</param>
        </member>
        <member name="M:AngleSharp.Css.Resolution.Equals(AngleSharp.Css.Resolution)">
            <summary>
            Checks if the current resolution equals the given one.
            </summary>
            <param name="other">The given resolution to check for equality.</param>
            <returns>True if both are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Resolution.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Resolution.GetHashCode">
            <summary>
            Returns a hash code that defines the current resolution.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Resolution.ToString">
            <summary>
            Returns a string representing the resolution.
            </summary>
            <returns>The unit string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Resolution.ToCss">
            <summary>
            Returns a CSS representation of the resolution.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Resolution.Value">
            <summary>
            Gets the value of resolution.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Resolution.Type">
            <summary>
            Gets the type of the length.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Resolution.UnitString">
            <summary>
            Gets the representation of the unit as a string.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Resolution.Unit">
            <summary>
            The various resolution units.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Resolution.Unit.Dpi">
            <summary>
            The value is a resolution (dots per in).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Resolution.Unit.Dpcm">
            <summary>
            The value is a resolution (dots per cm).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Resolution.Unit.Dppx">
            <summary>
            The value is a resolution (dots per px).
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Length">
            <summary>
            Represents an absolute length value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Zero">
            <summary>
            Gets a zero pixel length value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Thin">
            <summary>
            Gets a thin length value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Medium">
            <summary>
            Gets a medium length value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Thick">
            <summary>
            Gets a thick length value.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Length.#ctor(System.Single,AngleSharp.Css.Length.Unit)">
            <summary>
            Creates a new length value.
            </summary>
            <param name="value">The value of the length.</param>
            <param name="unit">The unit of the length.</param>
        </member>
        <member name="M:AngleSharp.Css.Length.op_Equality(AngleSharp.Css.Length,AngleSharp.Css.Length)">
            <summary>
            Checks the equality of the two given lengths.
            </summary>
            <param name="a">The left length.</param>
            <param name="b">The right length.</param>
            <returns>True if both lengths are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.op_Inequality(AngleSharp.Css.Length,AngleSharp.Css.Length)">
            <summary>
            Checks the inequality of the two given lengths.
            </summary>
            <param name="a">The left length.</param>
            <param name="b">The right length.</param>
            <returns>True if both lengths are not equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.ToPixel">
            <summary>
            Converts the length to a number of pixels, if possible. If the
            current unit is relative, then an exception will be thrown.
            </summary>
            <returns>The number of pixels represented by the current length.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.To(AngleSharp.Css.Length.Unit)">
            <summary>
            Converts the length to the given unit, if possible. If the current
            or given unit is relative, then an exception will be thrown.
            </summary>
            <param name="unit">The unit to convert to.</param>
            <returns>The value in the given unit of the current length.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.Equals(AngleSharp.Css.Length)">
            <summary>
            Checks if both lengths are actually equal.
            </summary>
            <param name="other">The other length to compare to.</param>
            <returns>True if both lengths are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.GetHashCode">
            <summary>
            Returns a hash code that defines the current length.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.ToCss">
            <summary>
            Returns a CSS representation of the length.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Length.ToString">
            <summary>
            Returns a string representing the length.
            </summary>
            <returns>The unit string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Length.IsAbsolute">
            <summary>
            Gets if the length is given in absolute units.
            Such a length may be converted to pixels.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Length.IsRelative">
            <summary>
            Gets if the length is given in relative units.
            Such a length cannot be converted to pixels.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Length.Type">
            <summary>
            Gets the type of the length.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Length.Value">
            <summary>
            Gets the value of the length.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Length.UnitString">
            <summary>
            Gets the representation of the unit as a string.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Length.Unit">
            <summary>
            An enumeration of length units.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Px">
            <summary>
            The value is a length (px).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Em">
            <summary>
            The value is a length (em).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Ex">
            <summary>
            The value is a length (ex). Usually about 0.5em for most fonts.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Cm">
            <summary>
            The value is a length (cm).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Mm">
            <summary>
            The value is a length (mm).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.In">
            <summary>
            The value is a length (in).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Pt">
            <summary>
            The value is a length (pt).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Pc">
            <summary>
            The value is a length (pc).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Ch">
            <summary>
            The value is a length (width of the 0-character).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Rem">
            <summary>
            The value is the relative to the font-size of the root element (in em).
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Vw">
            <summary>
            The value is relative to the viewport width.
            1vw = 1/100 of the viewport width.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Vh">
            <summary>
            The value is relative to the viewport height.
            1vh = 1/100 of the viewport height.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Vmin">
            <summary>
            The value is relative to the minimum of viewport width and height.
            1vmin = 1/100 of the minimum viewport dimension.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Length.Unit.Vmax">
            <summary>
            The value is relative to the maximum of viewport width and height.
            1vmax = 1/100 of the maximum viewport dimension.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.NodeExtensions">
            <summary>
            Useful methods for node objects.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.GetRoot(AngleSharp.DOM.INode)">
            <summary>
            Gets the root of the given node, which is the node itself, if it has
            no parent, or the root of the parent.
            </summary>
            <param name="node">The node to get the root of.</param>
            <returns>The root node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsDescendantOf(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the node is an descendant of the given parent.
            </summary>
            <param name="node">The descendant node to use.</param>
            <param name="parent">The possible parent to use.</param>
            <returns>True if the given parent is actually an ancestor of the provided node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.GetDescendantsOf(AngleSharp.DOM.INode)">
            <summary>
            Gets the descendant nodes of the provided parent, in tree order.
            </summary>
            <param name="parent">The parent of the descendants.</param>
            <returns>An iterator over all descendants.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsInclusiveDescendantOf(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the node is an inclusive descendant of the given parent.
            </summary>
            <param name="node">The descendant node to use.</param>
            <param name="parent">The possible parent to use.</param>
            <returns>True if the given parent is actually an inclusive ancestor of the provided node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsAncestorOf(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the parent is an ancestor of the given node.
            </summary>
            <param name="parent">The possible parent to use.</param>
            <param name="node">The node to check for being descendent.</param>
            <returns>True if the given parent is actually an ancestor of the provided node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.GetAncestorsOf(AngleSharp.DOM.INode)">
            <summary>
            Gets the ancestor nodes of the provided node, in tree order.
            </summary>
            <param name="node">The child of the ancestors.</param>
            <returns>An iterator over all ancestors.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsInclusiveAncestorOf(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the parent is an inclusive ancestor of the given node.
            </summary>
            <param name="parent">The possible parent to use.</param>
            <param name="node">The node to check for being descendent.</param>
            <returns>True if the given parent is actually an inclusive ancestor of the provided node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsSiblingOf(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the current node is a sibling of the specified element.
            </summary>
            <param name="node">The maybe sibling.</param>
            <param name="element">The node to check for having the same parent.</param>
            <returns>True if the parent is actually non-null and actually the same.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IndexOf(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Finds the index of the given node of the provided parent node.
            </summary>
            <param name="parent">The parent of the given node.</param>
            <param name="node">The node which needs to know its index.</param>
            <returns>The index of the node or -1 if the node is not a child of the parent.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsPreceding(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the context node is before the provided node.
            </summary>
            <param name="before">The context node.</param>
            <param name="after">The provided reference node.</param>
            <returns>True if the context node is preceding the reference node in tree order.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsFollowing(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks if the context node is after the provided node.
            </summary>
            <param name="after">The context node.</param>
            <param name="before">The provided reference node.</param>
            <returns>True if the context node is following the reference node in tree order.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.GetAssociatedHost(AngleSharp.DOM.INode)">
            <summary>
            Gets the associated host object, if any. This is mostly interesting for the HTML5 template tag.
            </summary>
            <param name="node">The node that probably has an host object</param>
            <returns>The host object or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsHostIncludingInclusiveAncestor(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Checks for an inclusive ancestor relationship or if the host (if any) has such a relationship.
            </summary>
            <param name="parent">The possible parent to use.</param>
            <param name="node">The node to check for being descendent.</param>
            <returns>True if the given parent is actually an inclusive ancestor (including the host) of the provided node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.EnsurePreInsertionValidity(AngleSharp.DOM.INode,AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Ensures the validity for inserting the given node at parent before the
            provided child. Throws an error is the insertation is invalid.
            </summary>
            <param name="parent">The origin that will be mutated.</param>
            <param name="node">The node to be inserted.</param>
            <param name="child">The reference node of the insertation.</param>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.PreInsert(AngleSharp.DOM.INode,AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Pre-inserts the given node at the parent before the provided child.
            </summary>
            <param name="parent">The origin that will be mutated.</param>
            <param name="node">The node to be inserted.</param>
            <param name="child">The reference node of the insertation.</param>
            <returns>The inserted node, which is node.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.PreRemove(AngleSharp.DOM.INode,AngleSharp.DOM.INode)">
            <summary>
            Pre-removes the given child of the parent.
            </summary>
            <param name="parent">The origin that will be mutated.</param>
            <param name="child">The node that will be removed.</param>
            <returns>The removed node, which is child.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.AdoptNode(AngleSharp.DOM.IDocument,AngleSharp.DOM.INode)">
            <summary>
            Adopts the given node for the provided document context.
            </summary>
            <param name="document">The new owner of the node.</param>
            <param name="node">The node to change its owner.</param>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.HasTextNodes(AngleSharp.DOM.INode)">
            <summary>
            Checks if the node has any text node children.
            </summary>
            <param name="node">The parent of the potential text nodes.</param>
            <returns>True if the node has any text nodes, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsFollowedByDoctype(AngleSharp.DOM.INode)">
            <summary>
            Checks if the given child is followed by a document type.
            </summary>
            <param name="child">The child that precedes the doctype.</param>
            <returns>True if a doctype node is following the provided child, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.IsPrecededByElement(AngleSharp.DOM.INode)">
            <summary>
            Checks if the given child is preceded by an element node.
            </summary>
            <param name="child">The child that follows any element.</param>
            <returns>True if an element node is preceded the provided child, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.GetElementCount(AngleSharp.DOM.INode)">
            <summary>
            Gets the element count of the given node.
            </summary>
            <param name="parent">The parent of potential element nodes.</param>
            <returns>The number of element nodes in the parent.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.FindChild``1(AngleSharp.DOM.INode)">
            <summary>
            Tries to find a direct child of a certain type.
            </summary>
            <typeparam name="TNode">The node type to find.</typeparam>
            <param name="parent">The parent that contains the elements.</param>
            <returns>The instance or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.FindDescendant``1(AngleSharp.DOM.INode)">
            <summary>
            Tries to find a descendant of a certain type.
            </summary>
            <typeparam name="TNode">The node type to find.</typeparam>
            <param name="parent">The parent that contains the elements.</param>
            <returns>The instance or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.NodeExtensions.ToCss(System.Object)">
            <summary>
            Tries to print the CSS representation of the Object, if any.
            Otherwise the an empty string is returned.
            </summary>
            <param name="obj">The object to convert.</param>
            <returns>The CSS string representation.</returns>
        </member>
        <member name="T:AngleSharp.Extensions.ValueExtensions">
            <summary>
            A bunch of useful extension methods.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.OriginBehavior">
            <summary>
            The default origin behaviour states.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.OriginBehavior.Taint">
            <summary>
            Data is gathered.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.OriginBehavior.Fail">
            <summary>
            Data is discarded in NO CORS.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.RequesterExtensions">
            <summary>
            Useful extensions for IRequester objects.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.RequestAsync(AngleSharp.Network.IRequester,AngleSharp.Network.IRequest)">
            <summary>
            Performs an asynchronous http request with the given options without
            taking a custom cancellation token.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="request">The options to consider.</param>
            <returns>The task that will eventually give the response data.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.LoadAsync(AngleSharp.Network.IRequester,AngleSharp.Url)">
            <summary>
            Loads the given URI by using an asynchronous GET request.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="url">The url that yields the path to the desired action.</param>
            <returns>The task which will eventually return the response.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.LoadAsync(AngleSharp.Network.IRequester,AngleSharp.Url,System.Threading.CancellationToken)">
            <summary>
            Loads the given URI by using an asynchronous GET request.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="url">The url that yields the path to the desired action.</param>
            <param name="cancel">The token which can be used to cancel the request.</param>
            <returns>The task which will eventually return the response.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.LoadWithCorsAsync(AngleSharp.Network.IRequester,AngleSharp.Url,AngleSharp.Network.CorsSetting,System.String,AngleSharp.Network.OriginBehavior)">
            <summary>
            Performs a potentially CORS-enabled fetch from the given URI by using an asynchronous GET request.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="url">The url that yields the path to the desired action.</param>
            <param name="cors">The cross origin settings to use.</param>
            <param name="origin">The origin of the page that requests the loading.</param>
            <param name="defaultBehavior">The default behavior in case it is undefined.</param>
            <returns>The task which will eventually return the stream.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.LoadWithCorsAsync(AngleSharp.Network.IRequester,AngleSharp.Url,AngleSharp.Network.CorsSetting,System.String,AngleSharp.Network.OriginBehavior,System.Threading.CancellationToken)">
            <summary>
            Performs a potentially CORS-enabled fetch from the given URI by using an asynchronous GET request.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="url">The url that yields the path to the desired action.</param>
            <param name="cors">The cross origin settings to use.</param>
            <param name="origin">The origin of the page that requests the loading.</param>
            <param name="defaultBehavior">The default behavior in case it is undefined.</param>
            <param name="cancel">The token which can be used to cancel the request.</param>
            <returns>The task which will eventually return the stream.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.SendAsync(AngleSharp.Network.IRequester,AngleSharp.Url,System.IO.Stream,System.String,AngleSharp.Network.HttpMethod)">
            <summary>
            Loads the given URI by using an asynchronous request with the given method and body.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="url">The url that yields the path to the desired action.</param>
            <param name="content">The body that should be used in the request.</param>
            <param name="mimeType">The mime-type of the request.</param>
            <param name="method">The method that is used for sending the request asynchronously.</param>
            <returns>The task which will eventually return the response.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.RequesterExtensions.SendAsync(AngleSharp.Network.IRequester,AngleSharp.Url,System.IO.Stream,System.String,AngleSharp.Network.HttpMethod,System.Threading.CancellationToken)">
            <summary>
            Loads the given URI by using an asynchronous request with the given method and body.
            </summary>
            <param name="requester">The requester to use.</param>
            <param name="url">The url that yields the path to the desired action.</param>
            <param name="content">The body that should be used in the request.</param>
            <param name="mimeType">The mime-type of the request.</param>
            <param name="method">The method that is used for sending the request asynchronously.</param>
            <param name="cancel">The token which can be used to cancel the request.</param>
            <returns>The task which will eventually return the response.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssTokenizer">
            <summary>
            The CSS tokenizer.
            See http://dev.w3.org/csswg/css-syntax/#tokenization for more details.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.BaseTokenizer">
            <summary>
            Common methods and variables of all tokenizers.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.SourceManager">
            <summary>
            Represents the source code manager.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.#ctor">
            <summary>
            Prepares everything.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.#ctor(AngleSharp.ITextSource)">
            <summary>
            Constructs a new instance of the source code manager.
            </summary>
            <param name="reader">The underlying text stream to read.</param>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.#ctor(System.String)">
            <summary>
            Constructs a new instance of the source code manager.
            </summary>
            <param name="source">The source code to manage.</param>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.ResetInsertionPoint">
            <summary>
            Resets the insertion point to the end of the buffer.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.SkipSpaces">
            <summary>
            Advances to the next non-space character.
            </summary>
            <returns>The next non-space character.</returns>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Advance">
            <summary>
            Advances one character in the source code.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Advance(System.Int32)">
            <summary>
            Advances n characters in the source code.
            </summary>
            <param name="n">The number of characters to advance.</param>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Advance(System.Threading.CancellationToken)">
            <summary>
            Advances one character in the source code.
            </summary>
            <param name="cancelToken">The cancellation token to use.</param>
            <returns>The task to await.</returns>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Advance(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Advances n characters in the source code.
            </summary>
            <param name="n">The number of characters to advance.</param>
            <param name="cancelToken">The cancellation token to use.</param>
            <returns>The task to await.</returns>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Back">
            <summary>
            Moves back one character in the source code.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Back(System.Int32)">
            <summary>
            Moves back n characters in the source code.
            </summary>
            <param name="n">The number of characters to rewind.</param>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.ContinuesWith(System.String,System.Boolean)">
            <summary>
            Looks if the current character / next characters match a certain string.
            </summary>
            <param name="s">The string to compare to.</param>
            <param name="ignoreCase">Optional flag to set the case sensitivity.</param>
            <returns>The status of the check.</returns>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.ContinuesWithAsync(System.String,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Looks if the current character / next characters match a certain string.
            </summary>
            <param name="s">The string to compare to.</param>
            <param name="cancelToken">The cancellation token to use.</param>
            <param name="ignoreCase">Optional flag to set the case sensitivity.</param>
            <returns>A task that results in the status of the check.</returns>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.AdvanceUnsafe">
            <summary>
            Just advances one character without checking
            if the end is already reached.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.AdvanceUnsafeAsync(System.Threading.CancellationToken)">
            <summary>
            Just advances one character without checking
            if the end is already reached.
            </summary>
            <param name="cancelToken">The cancellation token to use.</param>
            <returns>The task to await.</returns>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.BackUnsafe">
            <summary>
            Just goes back one character without checking
            if the beginning is already reached.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.SourceManager.Dispose">
            <summary>
            Disposes all disposable objects.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.InsertionPoint">
            <summary>
            Gets or sets the insertion point.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.Line">
            <summary>
            Gets the current line within the source code.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.Column">
            <summary>
            Gets the current column within the source code.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.Position">
            <summary>
            Gets the current position within the source code.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.IsEnded">
            <summary>
            Gets the status of reading the source code, are we beyond the stream?
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.Current">
            <summary>
            Gets the current character.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.Next">
            <summary>
            Gets the next character (by advancing and returning the current character).
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.SourceManager.Previous">
            <summary>
            Gets the previous character (by rewinding and returning the current character).
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.BaseTokenizer.GetCurrentPosition">
            <summary>
            Gets the current position.
            </summary>
            <returns>A new text position.</returns>
        </member>
        <member name="M:AngleSharp.Parser.BaseTokenizer.RaiseErrorOccurred(AngleSharp.ErrorCode)">
            <summary>
            Fires an error occurred event.
            </summary>
            <param name="code">The associated error code.</param>
        </member>
        <member name="M:AngleSharp.Parser.BaseTokenizer.RaiseErrorOccurred(AngleSharp.Parser.ParseErrorEventArgs)">
            <summary>
            Fires an error occurred event.
            </summary>
            <param name="args">The arguments to pass on.</param>
        </member>
        <member name="E:AngleSharp.Parser.BaseTokenizer.ErrorOccurred">
            <summary>
            The event will be fired once an error has been detected.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.Data(System.Char)">
            <summary>
            4.4.1. Data state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.StringDQ(System.Char)">
            <summary>
            4.4.2. Double quoted string state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.StringSQ(System.Char)">
            <summary>
            4.4.3. Single quoted string state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.HashStart(System.Char)">
            <summary>
            4.4.4. Hash state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.HashRest(System.Char)">
            <summary>
            4.4.5. Hash-rest state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.Comment(System.Char)">
            <summary>
            4.4.6. Comment state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.AtKeywordStart(System.Char)">
            <summary>
            4.4.7. At-keyword state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.AtKeywordRest(System.Char)">
            <summary>
            4.4.8. At-keyword-rest state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.IdentStart(System.Char)">
            <summary>
            4.4.9. Ident state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.IdentRest(System.Char)">
            <summary>
            4.4.10. Ident-rest state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.TransformFunctionWhitespace(System.Char)">
            <summary>
            4.4.11. Transform-function-whitespace state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.NumberStart(System.Char)">
            <summary>
            4.4.12. Number state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.NumberRest(System.Char)">
            <summary>
            4.4.13. Number-rest state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.NumberFraction(System.Char)">
            <summary>
            4.4.14. Number-fraction state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.Dimension(System.Char,System.String)">
            <summary>
            4.4.15. Dimension state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.SciNotation(System.Char)">
            <summary>
            4.4.16. SciNotation state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UrlStart(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            4.4.17. URL state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UrlDQ(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            4.4.18. URL-double-quoted state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UrlSQ(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            4.4.19. URL-single-quoted state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UrlUQ(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            4.4.21. URL-unquoted state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UrlEnd(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            4.4.20. URL-end state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UrlBad(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            4.4.22. Bad URL state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.UnicodeRange(System.Char)">
            <summary>
            4.4.23. Unicode-range State
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.NumberExponential(System.Char)">
            <summary>
            Substate of several Number states.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.NumberDash(System.Char)">
            <summary>
            Substate of several Number states.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.ConsumeEscape(System.Char)">
            <summary>
            Consumes an escaped character AFTER the solidus has already been
            consumed.
            </summary>
            <returns>The escaped character.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssTokenizer.IsValidEscape(System.Char)">
            <summary>
            Checks if the current position is the beginning of a valid escape sequence.
            </summary>
            <returns>The result of the check.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssTokenizer.IgnoreWhitespace">
            <summary>
            Gets or sets if whitespace tokens should be ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssTokenizer.IgnoreComments">
            <summary>
            Gets or sets if HTML comment tokens should be ignored.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssValueBuilder">
            <summary>
            The class that is responsible for book-keeping information
            about the current CSS value that is been build.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.#ctor">
            <summary>
            Creates a new CSS value builder instance.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.AddFunction(System.String)">
            <summary>
            Adds a function to the current value with the given name.
            </summary>
            <param name="name">The name of the function.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.AddValue(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Adds the new value to the current value (or replaces it).
            </summary>
            <param name="value">The value to add.</param>
            <returns>The status.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.CloseFunction">
            <summary>
            Closes the current function.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.InsertDelimiter">
            <summary>
            Inserts a delimiter / into the current value.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.NextArgument">
            <summary>
            Closes the current argument and appends another.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.Reset">
            <summary>
            Resets the builder for reprocessing.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.ToValue">
            <summary>
            Converts the current stage to a CSSValue.
            </summary>
            <returns>The instance of a value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.Create(System.Int32)">
            <summary>
            Creates a value from the given index.
            </summary>
            <param name="start">The inclusive start index.</param>
            <returns>The created value (primitive or list).</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.Create(System.Int32,System.Int32)">
            <summary>
            Creates a value from the given span.
            </summary>
            <param name="start">The inclusive start index.</param>
            <param name="end">The exclusive end index.</param>
            <returns>The created value (primitive or list).</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssValueBuilder.AddValue(AngleSharp.ICssObject)">
            <summary>
            TODO: Temporary method that will be removed when CSSValue is removed.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssValueBuilder.IsFaulted">
            <summary>
            Gets or sets if the current value contains syntax errors.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssValueBuilder.FunctionBuffer">
            <summary>
            A buffer for functions.
            </summary>
        </member>
        <member name="T:AngleSharp.DocumentBuilder">
            <summary>
            A handy helper to construct various kinds of documents
            from a given source code, URL or stream.
            </summary>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.#ctor(AngleSharp.IConfiguration)">
            <summary>
            Creates a new builder and optionally sets the configuration.
            </summary>
            <param name="defaultConfiguration">The configuration to use. If this
            is not specified, then the default configuration will be used.</param>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtml(System.String)">
            <summary>
            Builds a new HTML Document with the given source code string.
            </summary>
            <param name="sourceCode">The string to use as source code.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtml(System.Uri)">
            <summary>
            Builds a new HTML Document with the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtmlAsync(System.Uri)">
            <summary>
            Builds a new HTML Document by asynchronously requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtmlAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Builds a new HTML Document by asynchronously requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtml(System.IO.Stream)">
            <summary>
            Builds a new HTML Document with the given stream.
            </summary>
            <param name="stream">The stream containing the source code.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtmlAsync(System.IO.Stream)">
            <summary>
            Builds a new HTML Document by asynchronously moving through the stream.
            </summary>
            <param name="stream">The stream containing the source code.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromHtmlAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Builds a new HTML Document by asynchronously moving through the stream.
            </summary>
            <param name="stream">The stream containing the source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCss(System.String)">
            <summary>
            Builds a new CSSStyleSheet with the given source code string.
            </summary>
            <param name="sourceCode">The string to use as source code.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCss(System.Uri)">
            <summary>
            Builds a new CSSStyleSheet with the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCssAsync(System.Uri)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCssAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCss(System.IO.Stream)">
            <summary>
            Builds a new CSSStyleSheet with the given stream.
            </summary>
            <param name="stream">The stream containing the source code.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCssAsync(System.IO.Stream)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by moving through the stream.
            </summary>
            <param name="stream">The stream containing the source code.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.FromCssAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by moving through the stream.
            </summary>
            <param name="stream">The stream containing the source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Html(System.String,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new HTML Document with the given source code string.
            </summary>
            <param name="sourceCode">The string to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Html(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Builds a new HTML Document with the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.HtmlAsync(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Builds a new HTML Document by asynchronously requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.HtmlAsync(System.Uri,System.Threading.CancellationToken,AngleSharp.IConfiguration)">
            <summary>
            Builds a new HTML Document by asynchronously requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The task that constructs the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Html(System.IO.Stream,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new HTML Document with the given (network) stream.
            </summary>
            <param name="content">The stream of chars to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The constructed HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.HtmlAsync(System.IO.Stream,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new HTML Document asynchronously with the given (network) stream.
            </summary>
            <param name="content">The stream of chars to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The task to construct the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.HtmlAsync(System.IO.Stream,System.Threading.CancellationToken,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new HTML Document asynchronously with the given (network) stream.
            </summary>
            <param name="content">The stream of chars to use as source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The task to construct the HTML document.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.HtmlFragment(System.String,AngleSharp.DOM.IElement,AngleSharp.IConfiguration)">
            <summary>
            Builds a list of nodes according with 8.4 Parsing HTML fragments.
            </summary>
            <param name="sourceCode">The string to use as source code.</param>
            <param name="context">[Optional] The context element to use.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>A list of parsed nodes.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Css(System.String,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new CSSStyleSheet with the given source code string.
            </summary>
            <param name="sourceCode">The string to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Css(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Builds a new CSSStyleSheet with the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.CssAsync(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.CssAsync(System.Uri,System.Threading.CancellationToken,AngleSharp.IConfiguration)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given URL.
            </summary>
            <param name="url">The URL which points to the address containing the source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Css(System.IO.Stream,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new CSSStyleSheet with the given (network) stream.
            </summary>
            <param name="stream">The stream of chars to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The constructed CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.CssAsync(System.IO.Stream,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given (network) stream.
            </summary>
            <param name="stream">The stream of chars to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.CssAsync(System.IO.Stream,System.Threading.CancellationToken,AngleSharp.IConfiguration,System.String)">
            <summary>
            Builds a new CSSStyleSheet asynchronously by requesting the given (network) stream.
            </summary>
            <param name="stream">The stream of chars to use as source code.</param>
            <param name="cancel">The cancellation token for cancelling the asynchronous request.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <param name="url">[Optional] The base URL of the document.</param>
            <returns>The task which constructs the CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Construct(AngleSharp.DOM.Document,AngleSharp.IConfiguration)">
            <summary>
            Creates a new parser with the specified source.
            </summary>
            <param name="document">The document to fill.</param>
            <param name="configuration">Options to use for the document generation.</param>
        </member>
        <member name="M:AngleSharp.DocumentBuilder.Construct(AngleSharp.DOM.Css.CSSStyleSheet,AngleSharp.IConfiguration)">
            <summary>
            Creates a new parser with the specified source.
            </summary>
            <param name="sheet">The document to fill.</param>
            <param name="configuration">Options to use for the document generation.</param>
        </member>
        <member name="P:AngleSharp.DocumentBuilder.Configuration">
            <summary>
            Gets the configuration to use.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSDocumentRule">
            <summary>
            Contains the rules specified by a
            @document { /* ... */ } rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSGroupingRule">
            <summary>
            Represents the CSSGroupingRule interface.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSRule">
            <summary>
            Represents a CSS rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSRule._type">
            <summary>
            The type of CSS rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSRule._ownerSheet">
            <summary>
            The parent stylesheet.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSRule._parentRule">
            <summary>
            The parent rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRule.#ctor">
            <summary>
            Creates a new CSS rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRule.ReplaceWith(AngleSharp.DOM.Css.ICssRule)">
            <summary>
            Replaces the current object with the given rule.
            The types are equal.
            </summary>
            <param name="rule">The new rule.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRule.ComputeStyle(AngleSharp.DOM.Css.CssPropertyBag,AngleSharp.DOM.IWindow,AngleSharp.DOM.IElement)">
            <summary>
            Computes the style for the given element within the specified window
            context. Writes the properties into the specified style declaration.
            </summary>
            <param name="style">The declaration that is used.</param>
            <param name="window">The given window context.</param>
            <param name="element">The element that is computed.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSRule.CssText">
            <summary>
            Gets the textual representation of the rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSRule.Parent">
            <summary>
            Gets the containing rule, otherwise null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSRule.Owner">
            <summary>
            Gets the CSSStyleSheet object for the style sheet that contains this rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSRule.Type">
            <summary>
            Gets the type constant indicating the type of CSS rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSGroupingRule.#ctor">
            <summary>
            Creates a new CSS grouping rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSGroupingRule.Insert(System.String,System.Int32)">
            <summary>
            Used to insert a new rule into the media block.
            </summary>
            <param name="rule">
            The parsable text representing the rule. For rule sets this contains
            both the selector and the style declaration. For at-rules, this
            specifies both the at-identifier and the rule content.
            </param>
            <param name="index">
            The index within the media block's rule collection of the rule before
            which to insert the specified rule.
            </param>
            <returns>
            The index within the media block's rule collection of the newly
            inserted rule.
            </returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSGroupingRule.RemoveAt(System.Int32)">
            <summary>
            Used to delete a rule from the media block.
            </summary>
            <param name="index">
            The index within the media block's rule collection of the rule to remove.
            </param>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSGroupingRule.Rules">
            <summary>
            Gets a list of all CSS rules contained within the grouping block.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSDocumentRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSDocumentRule.ConditionText">
            <summary>
            Gets the condition text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSDocumentRule.Conditions">
            <summary>
            Gets the list with the conditions.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSDocumentRule.DocumentFunction">
            <summary>
            An enumeration over possible functions.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSDocumentRule.DocumentFunction.Url">
            <summary>
            Take as url function.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSDocumentRule.DocumentFunction.UrlPrefix">
            <summary>
            Take as a url prefix function.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSDocumentRule.DocumentFunction.Domain">
            <summary>
            Take as domain.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CSSDocumentRule.DocumentFunction.RegExp">
            <summary>
            Use regular expression function.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.AdjacentPosition">
            <summary>
            Enumeration with possible values for the adjacent position insertation.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.AdjacentPosition.BeforeBegin">
            <summary>
            Before the element itself.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.AdjacentPosition.AfterBegin">
            <summary>
            Just inside the element, before its first child.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.AdjacentPosition.BeforeEnd">
            <summary>
            Just inside the element, after its last child.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.AdjacentPosition.AfterEnd">
            <summary>
            After the element itself.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HtmlElementFactory">
            <summary>
            Provides string to HTMLElement instance creation mappings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HtmlElementFactory.Create(System.String,AngleSharp.DOM.Document)">
            <summary>
            Returns a specialized HTMLElement instance for the given tag name.
            </summary>
            <param name="tag">The given tag name.</param>
            <param name="document">The document that owns the element.</param>
            <returns>The specialized HTMLElement instance.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathElementFactory">
            <summary>
            Provides string to MathElement instance creation mappings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Mathml.MathElementFactory.Create(System.String,AngleSharp.DOM.Document)">
            <summary>
            Returns a specialized MathMLElement instance for the given tag name.
            </summary>
            <param name="tagName">The given tag name.</param>
            <param name="document">The document that owns the element.</param>
            <returns>The specialized MathMLElement instance.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Io.FileEntry">
            <summary>
            Represents a file captured in the FileList.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileEntry.FromFile(System.String,System.IO.Stream)">
            <summary>
            Creates a new file entry from the given file properties.
            </summary>
            <param name="name">The name of the file (not the full path).</param>
            <param name="body">The stream of bytes of the file's contents.</param>
            <returns>The file entry.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileEntry.Name">
            <summary>
            Gets the file name for the captured file.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileEntry.Type">
            <summary>
            Gets the mime-type for the captured file.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileEntry.Body">
            <summary>
            Gets the body / content of the captured file.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileEntry.LastModified">
            <summary>
            Gets the last modified date.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileEntry.Length">
            <summary>
            Gets the length of the content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileEntry.IsClosed">
            <summary>
            Gets if the stream is closed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SvgElementFactory">
            <summary>
            Provides string to SVGElement instance creation mappings.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Svg.SvgElementFactory.Create(System.String,AngleSharp.DOM.Document)">
            <summary>
            Returns a specialized SVGElement instance for the given tag name.
            </summary>
            <param name="tagName">The given tag name.</param>
            <param name="document">The document that owns the element.</param>
            <returns>The specialized SVGElement instance.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParserExtensions.SetAttributes(AngleSharp.DOM.Element,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Checks for each attribute on the token if the attribute is already present on the node.
            If it is not, the attribute and its corresponding value is added to the node.
            </summary>
            <param name="element">The node with the target attributes.</param>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParserExtensions.AddFormatting(System.Collections.Generic.List{AngleSharp.DOM.Element},AngleSharp.DOM.Element)">
            <summary>
            Adds an element to the list of active formatting elements.
            </summary>
            <param name="formatting">The list of formatting elements to modify.</param>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParserExtensions.ClearFormatting(System.Collections.Generic.List{AngleSharp.DOM.Element})">
            <summary>
            Clear the list of active formatting elements up to the last marker.
            </summary>
            <param name="formatting">The list of formatting elements to modify.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParserExtensions.AddScopeMarker(System.Collections.Generic.List{AngleSharp.DOM.Element})">
            <summary>
            Inserts a scope marker at the end of the list of active formatting elements.
            </summary>
            <param name="formatting">The list of formatting elements to modify.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParserExtensions.AddComment(AngleSharp.DOM.Node,System.String)">
            <summary>
            Appends a comment node to the specified node.
            </summary>
            <param name="parent">The node which will contain the comment node.</param>
            <param name="data">The comment.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParserExtensions.IsTableElement(AngleSharp.DOM.INode)">
            <summary>
            Examines if the given element is one of the table elements (table, tbody, tfoot, thead, tr).
            </summary>
            <param name="node">The node to examine</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.Parser.ParseErrorEventArgs">
            <summary>
            The ParseErrorEventArgs package.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.ParseErrorEventArgs.#ctor(System.Int32,System.String,AngleSharp.Parser.TextPosition,AngleSharp.Parser.TextPosition)">
            <summary>
            Creates a new ErrorEventArgs package.
            </summary>
            <param name="code">The provided error code.</param>
            <param name="msg">The associated error message.</param>
            <param name="start">The start position.</param>
            <param name="end">The end position.</param>
        </member>
        <member name="M:AngleSharp.Parser.ParseErrorEventArgs.ToString">
            <summary>
            Creates a string containing the relevant information.
            </summary>
            <returns>The string containing the error message, error 
            code as well as line and column.</returns>
        </member>
        <member name="P:AngleSharp.Parser.ParseErrorEventArgs.Start">
            <summary>
            Gets the start position of the error.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.ParseErrorEventArgs.End">
            <summary>
            Gets the end position of the error.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.ParseErrorEventArgs.ErrorCode">
            <summary>
            Gets the provided error code.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.ParseErrorEventArgs.ErrorMessage">
            <summary>
            Gets the associated error message.
            </summary>
        </member>
        <member name="T:AngleSharp.ApiExtensions">
            <summary>
            A set of useful extension methods when dealing with the DOM.
            </summary>
        </member>
        <member name="M:AngleSharp.ApiExtensions.CreateElement``1(AngleSharp.DOM.IDocument)">
            <summary>
            Creates an element of the given type or returns null, if there is
            no such type.
            </summary>
            <typeparam name="TElement">The type of element to create.</typeparam>
            <param name="document">The responsible document.</param>
            <returns>The new element, if available.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Attr``1(``0,System.String,System.String)">
            <summary>
            Sets the specified attribute name to the specified value for all
            elements in the given collection.
            </summary>
            <typeparam name="T">The type of element collection.</typeparam>
            <param name="elements">The collection.</param>
            <param name="attributeName">The name of the attribute.</param>
            <param name="attributeValue">The value of the attribute.</param>
            <returns>The collection itself.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Empty``1(``0)">
            <summary>
            Empties all provided elements.
            </summary>
            <typeparam name="T">The type of element collection.</typeparam>
            <param name="elements">The collection.</param>
            <returns>The collection itself.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Css``1(``0,System.String)">
            <summary>
            Extends the CSS of the given elements with the specified declarations.
            </summary>
            <typeparam name="T">The type of element collection.</typeparam>
            <param name="elements">The collection.</param>
            <param name="declarations">The declarations to apply in the inline CSS.</param>
            <returns>The collection itself.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Html``1(``0)">
            <summary>
            Gets the inner HTML of the given element.
            </summary>
            <typeparam name="T">The type of element.</typeparam>
            <param name="element">The element.</param>
            <returns>The source code of the inner HTML.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Html``1(``0,System.String)">
            <summary>
            Sets the inner HTML of the given elements.
            </summary>
            <typeparam name="T">The type of collection.</typeparam>
            <param name="elements">The collection.</param>
            <param name="html">The source code of the inner HTML to set.</param>
            <returns>The collection itself.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Text``1(``0)">
            <summary>
            Gets the content text of the given DOM element.
            </summary>
            <typeparam name="T">The type of element.</typeparam>
            <param name="element">The element to stringify.</param>
            <returns>The text of the element and its children.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Text``1(``0,System.String)">
            <summary>
            Sets the text content of the given elements.
            </summary>
            <typeparam name="T">The type of collection.</typeparam>
            <param name="elements">The collection.</param>
            <param name="text">The text that should be set.</param>
            <returns>The collection itself.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Wrap``1(``0)">
            <summary>
            Wraps a single element to use it with jQuery like methods.
            </summary>
            <typeparam name="T">The type of element.</typeparam>
            <param name="element">The element to wrap.</param>
            <returns>An enumeration over the single element.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.Index``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Gets the index of the given item in the list of elements.
            </summary>
            <typeparam name="T">The type of element.</typeparam>
            <param name="elements">The source list of elements.</param>
            <param name="item">The item to search for.</param>
            <returns>The index of the item or -1 if not found.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.QueryXpath(AngleSharp.DOM.IDocument,System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that match the specified XPath.
            </summary>
            <param name="document">The document to use as starting point.</param>
            <param name="xpath">A string containing a valid XPath query.</param>
            <returns>A HTMLCollection with all elements that match the selection.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.QueryXpath(AngleSharp.DOM.IElement,System.String)">
            <summary>
            Returns a list of the elements within the element (using depth-first pre-order traversal
            of the element's nodes) that match the specified XPath.
            </summary>
            <param name="element">The element to use as starting point.</param>
            <param name="xpath">A string containing a valid XPath query.</param>
            <returns>A HTMLCollection with all elements that match the selection.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.QueryXpath(AngleSharp.DOM.INodeList,System.String)">
            <summary>
            Returns a list of the elements for the given list of elements that match the specified XPath.
            </summary>
            <param name="nodes">The nodes to search in (first order children).</param>
            <param name="xpath">A string containing a valid XPath query.</param>
            <returns>A HTMLCollection with all elements that match the selection.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.ParseHtml(System.String,AngleSharp.IConfiguration)">
            <summary>
            Interprets the string as HTML source code and returns new HTMLDocument
            with the DOM representation.
            </summary>
            <param name="content">The string to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.ParseCss(System.String,AngleSharp.IConfiguration)">
            <summary>
            Interprets the string as CSS source code and returns new CSSStyleSheet
            with the CSS-OM representation.
            </summary>
            <param name="content">The string to use as source code.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.GetHtml(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Uses the URL to download the content, parse it as HTML and returning
            a new HTMLDocument with the DOM representation.
            </summary>
            <param name="uri">The source of the HTML content.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.GetCss(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Uses the URL to download the content, parse it as CSS and returning
            a new CSSStyleSheet with the CSS-OM representation.
            </summary>
            <param name="uri">The source of the CSS content.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.GetHtmlAsync(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Uses the URL to download the content asynchronously, parse it as HTML and returning
            a new HTMLDocument with the DOM representation.
            </summary>
            <param name="uri">The source of the HTML content.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.GetHtmlAsync(System.Uri,System.Threading.CancellationToken,AngleSharp.IConfiguration)">
            <summary>
            Uses the URL to download the content asynchronously, parse it as HTML and returning
            a new HTMLDocument with the DOM representation.
            </summary>
            <param name="uri">The source of the HTML content.</param>
            <param name="cancel">The cancellation token for aborting the download.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The HTML document.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.GetCssAsync(System.Uri,AngleSharp.IConfiguration)">
            <summary>
            Uses the URL to download the content asynchronously, parse it as CSS and returning
            a new CSSStyleSheet with the CSS-OM representation.
            </summary>
            <param name="uri">The source of the CSS content.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The CSS stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.ApiExtensions.GetCssAsync(System.Uri,System.Threading.CancellationToken,AngleSharp.IConfiguration)">
            <summary>
            Uses the URL to download the content asynchronously, parse it as CSS and returning
            a new CSSStyleSheet with the CSS-OM representation.
            </summary>
            <param name="uri">The source of the CSS content.</param>
            <param name="cancel">The cancellation token for aborting the download.</param>
            <param name="configuration">[Optional] Custom options to use for the document generation.</param>
            <returns>The CSS stylesheet.</returns>
        </member>
        <member name="T:AngleSharp.Html.AttributeNames">
            <summary>
            The collection of (known / used) attribute names.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Name">
            <summary>
            The name attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.HttpEquiv">
            <summary>
            The http-equiv attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Scheme">
            <summary>
            The scheme attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Content">
            <summary>
            The content attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Class">
            <summary>
            The class attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Style">
            <summary>
            The style attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Label">
            <summary>
            The label attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Action">
            <summary>
            The action attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Prompt">
            <summary>
            The prompt attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Href">
            <summary>
            The href attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.HrefLang">
            <summary>
            The hreflang attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Lang">
            <summary>
            The lang attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Disabled">
            <summary>
            The disabled attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Selected">
            <summary>
            The selected attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Value">
            <summary>
            The value attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Title">
            <summary>
            The title attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Type">
            <summary>
            The type attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Rel">
            <summary>
            The rel attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Rev">
            <summary>
            The rev attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.AccessKey">
            <summary>
            The accesskey attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Download">
            <summary>
            The download attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Media">
            <summary>
            The media attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Target">
            <summary>
            The target attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Charset">
            <summary>
            The charset attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Alt">
            <summary>
            The alt attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Coords">
            <summary>
            The coords attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Shape">
            <summary>
            The shape attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.FormNoValidate">
            <summary>
            The formnovalidate attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.DirName">
            <summary>
            The dirname attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Dir">
            <summary>
            The dir attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.NoResize">
            <summary>
            The noresize attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Src">
            <summary>
            The src attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Scrolling">
            <summary>
            The scrolling attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.LongDesc">
            <summary>
            The longdesc attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.FrameBorder">
            <summary>
            The frameborder attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Width">
            <summary>
            The width attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Height">
            <summary>
            The height attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.MarginWidth">
            <summary>
            The marginwidth attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.MarginHeight">
            <summary>
            The marginheight attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Cols">
            <summary>
            The cols attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Rows">
            <summary>
            The rows attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Align">
            <summary>
            The align attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Encoding">
            <summary>
            The encoding attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Standalone">
            <summary>
            The standalone attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Version">
            <summary>
            The version attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.DropZone">
            <summary>
            The dropzone attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Draggable">
            <summary>
            The draggable attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Spellcheck">
            <summary>
            The spellcheck attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.TabIndex">
            <summary>
            The tabindex attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.ContentEditable">
            <summary>
            The contenteditable attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Translate">
            <summary>
            The translate attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.ContextMenu">
            <summary>
            The contextmenu attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Hidden">
            <summary>
            The hidden attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Id">
            <summary>
            The id attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Sizes">
            <summary>
            The sizes attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Scoped">
            <summary>
            The scoped attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Reversed">
            <summary>
            The reversed attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Start">
            <summary>
            The start attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Ping">
            <summary>
            The ping attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.IsMap">
            <summary>
            The ismap attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.UseMap">
            <summary>
            The usemap attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.CrossOrigin">
            <summary>
            The crossorigin attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Sandbox">
            <summary>
            The sandbox attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.SrcDoc">
            <summary>
            The srcdoc attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.AllowFullscreen">
            <summary>
            The allowfullscreen attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Data">
            <summary>
            The data attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.TypeMustMatch">
            <summary>
            The typemustmatch attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.AutoFocus">
            <summary>
            The autofocus attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.AcceptCharset">
            <summary>
            The acceptcharset attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Enctype">
            <summary>
            The enctype attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.AutoComplete">
            <summary>
            The autocomplete attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Method">
            <summary>
            The method attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.NoValidate">
            <summary>
            The novalidate attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.For">
            <summary>
            The for attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Seamless">
            <summary>
            The seamless attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Valign">
            <summary>
            The valign attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Span">
            <summary>
            The span attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.BgColor">
            <summary>
            The bgcolor attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.ColSpan">
            <summary>
            The colspan attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.RowSpan">
            <summary>
            The rowspan attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.NoWrap">
            <summary>
            The nowrap attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Abbr">
            <summary>
            The abbr attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Scope">
            <summary>
            The scope attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Headers">
            <summary>
            The headers attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Axis">
            <summary>
            The axis attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Border">
            <summary>
            The border attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.CellPadding">
            <summary>
            The cellpadding attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Rules">
            <summary>
            The rules attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Summary">
            <summary>
            The summary attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.CellSpacing">
            <summary>
            The cellspacing attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Frame">
            <summary>
            The frame attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Form">
            <summary>
            The form attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Required">
            <summary>
            The required attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Multiple">
            <summary>
            The multiple attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Min">
            <summary>
            The min attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Max">
            <summary>
            The max attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Open">
            <summary>
            The open attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Challenge">
            <summary>
            The challenge attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Keytype">
            <summary>
            The keytype attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Size">
            <summary>
            The size attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Wrap">
            <summary>
            The wrap attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.MaxLength">
            <summary>
            The maxlength attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Placeholder">
            <summary>
            The placeholder attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Readonly">
            <summary>
            The readonly attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Accept">
            <summary>
            The accept attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Pattern">
            <summary>
            The pattern attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Step">
            <summary>
            The step attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.List">
            <summary>
            The list attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Checked">
            <summary>
            The checked attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Kind">
            <summary>
            The kind attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.SrcLang">
            <summary>
            The srclang attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Default">
            <summary>
            The default attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Autoplay">
            <summary>
            The autoplay attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Preload">
            <summary>
            The preload attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Loop">
            <summary>
            The loop attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Controls">
            <summary>
            The controls attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Muted">
            <summary>
            The muted attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.MediaGroup">
            <summary>
            The mediagroup attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Poster">
            <summary>
            The poster attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Color">
            <summary>
            The color attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Face">
            <summary>
            The face attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Command">
            <summary>
            The command attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Icon">
            <summary>
            The icon attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Radiogroup">
            <summary>
            The radiogroup attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Cite">
            <summary>
            The cite attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Async">
            <summary>
            The async attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Defer">
            <summary>
            The defer attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Language">
            <summary>
            The language attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Event">
            <summary>
            The event attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Alink">
            <summary>
            The alink attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Background">
            <summary>
            The background attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Link">
            <summary>
            The link attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Text">
            <summary>
            The text attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Vlink">
            <summary>
            THe vlink attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Show">
            <summary>
            The show attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Role">
            <summary>
            The role attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Actuate">
            <summary>
            The actuate attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Arcrole">
            <summary>
            The arcrole attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.AttributeNames.Space">
            <summary>
            The space attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.FunctionNames">
            <summary>
            Contains a list of known CSS functions.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Url">
            <summary>
            The url function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Url_Prefix">
            <summary>
            The url-prefix function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Domain">
            <summary>
            The domain function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Regexp">
            <summary>
            The regexp function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Rgba">
            <summary>
            The rgba function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Rgb">
            <summary>
            The rgb function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Hsl">
            <summary>
            The hsl function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Hsla">
            <summary>
            The hsla function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Rect">
            <summary>
            The rect function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Attr">
            <summary>
            The attr function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.LinearGradient">
            <summary>
            The linear-gradient function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.RadialGradient">
            <summary>
            The radial-gradient function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.RepeatingLinearGradient">
            <summary>
            The repeating-linear-gradient function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.RepeatingRadialGradient">
            <summary>
            The repeating-radial-gradient function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Image">
            <summary>
            The image function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Counter">
            <summary>
            The counter function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Counters">
            <summary>
            The counters function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Calc">
            <summary>
            The calc function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Toggle">
            <summary>
            The toggle function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Translate">
            <summary>
            The translate function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.TranslateX">
            <summary>
            The translatex function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.TranslateY">
            <summary>
            The translatey function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.TranslateZ">
            <summary>
            The translatez function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Translate3d">
            <summary>
            The translate3d function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Matrix">
            <summary>
            The matrix function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Matrix3d">
            <summary>
            The matrix3d function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Rotate">
            <summary>
            The rotate function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Rotate3d">
            <summary>
            The rotate3d function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.RotateX">
            <summary>
            The rotatex function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.RotateY">
            <summary>
            The rotatey function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.RotateZ">
            <summary>
            The rotatez function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Skew">
            <summary>
            The skew function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.SkewX">
            <summary>
            The skewx function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.SkewY">
            <summary>
            The skewy function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Scale">
            <summary>
            The scale function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Scale3d">
            <summary>
            The scale3d function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.ScaleX">
            <summary>
            The scalez function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.ScaleY">
            <summary>
            The scaley function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.ScaleZ">
            <summary>
            The scalex function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.Steps">
            <summary>
            The steps function.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.FunctionNames.CubicBezier">
            <summary>
            The cubic-bezier function.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.FunctionNames.Build(System.String,System.String[])">
            <summary>
            Creates a function call expression from the given strings.
            </summary>
            <param name="function">The name of the function.</param>
            <param name="arguments">The arguments of the function.</param>
            <returns>The CSS function call expression.</returns>
        </member>
        <member name="T:AngleSharp.Html.EventNames">
            <summary>
            The collection of (known / used) event names.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Invalid">
            <summary>
            The invalid event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Load">
            <summary>
            The load event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DomContentLoaded">
            <summary>
            The DOMContentLoaded event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Error">
            <summary>
            The error event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.BeforeScriptExecute">
            <summary>
            The beforescriptexecute event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.AfterScriptExecute">
            <summary>
            The afterscriptexecute event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.ReadyStateChanged">
            <summary>
            The readystatechanged event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Abort">
            <summary>
            The abort event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Blur">
            <summary>
            The blur event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Cancel">
            <summary>
            The cancel event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Click">
            <summary>
            The click event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Change">
            <summary>
            The change event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.CanPlayThrough">
            <summary>
            The canplaythrough event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.CanPlay">
            <summary>
            The canplay event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.CueChange">
            <summary>
            The cuechange event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DblClick">
            <summary>
            The dblclick event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Drag">
            <summary>
            The drag event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DragEnd">
            <summary>
            The dragend event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DragEnter">
            <summary>
            The dragenter event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DragExit">
            <summary>
            The dragexit event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DragLeave">
            <summary>
            The dragleave event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DragOver">
            <summary>
            The dragover event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DragStart">
            <summary>
            The dragstart event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Drop">
            <summary>
            The drop event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.DurationChange">
            <summary>
            The durationchange event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Emptied">
            <summary>
            The emptied event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Focus">
            <summary>
            The focus event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.FullscreenChange">
            <summary>
            The fullscreenchange event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.FullscreenError">
            <summary>
            The fullscreenerror event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.HashChange">
            <summary>
            The hashchange event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Input">
            <summary>
            The input event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Message">
            <summary>
            The message event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Keydown">
            <summary>
            The keydown event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Keypress">
            <summary>
            The keypress event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Keyup">
            <summary>
            The keyup event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Ended">
            <summary>
            The ended event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.LoadedData">
            <summary>
            The loadeddata event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.LoadedMetaData">
            <summary>
            The loadedmetadata event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.LoadEnd">
            <summary>
            The loadend event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.LoadStart">
            <summary>
            The loadstart event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Wheel">
            <summary>
            The wheel event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mouseup">
            <summary>
            The mouseup event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mouseover">
            <summary>
            The mouseover event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mouseout">
            <summary>
            The mouseout event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mousemove">
            <summary>
            The mousemove event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mouseleave">
            <summary>
            The mouseleave event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mouseenter">
            <summary>
            The mouseenter event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Mousedown">
            <summary>
            The mousedown event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Pause">
            <summary>
            The pause event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Play">
            <summary>
            The play event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Playing">
            <summary>
            The playing event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Progress">
            <summary>
            The progress event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.RateChange">
            <summary>
            The ratechange event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Waiting">
            <summary>
            The waiting event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.VolumeChange">
            <summary>
            The volumechange event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Toggle">
            <summary>
            The toggle event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.TimeUpdate">
            <summary>
            The timeupdate event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Suspend">
            <summary>
            The suspend event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Submit">
            <summary>
            The submit event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Stalled">
            <summary>
            The stalled event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Show">
            <summary>
            The show event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Select">
            <summary>
            The select event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Seeking">
            <summary>
            The seeking event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Seeked">
            <summary>
            The seeked event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Scroll">
            <summary>
            The scroll event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Resize">
            <summary>
            The resize event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Reset">
            <summary>
            The reset event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.AfterPrint">
            <summary>
            The afterprint event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.BeforePrint">
            <summary>
            The beforeprint event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Unloading">
            <summary>
            The unloading event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Offline">
            <summary>
            The offline event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Online">
            <summary>
            The online event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.PageHide">
            <summary>
            The pagehide event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.PageShow">
            <summary>
            The pageshow event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.PopState">
            <summary>
            The popstate event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Unload">
            <summary>
            The unload event.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.EventNames.Storage">
            <summary>
            The storage event.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.HeaderNames">
            <summary>
            The collection of (known / used) header names.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.CacheControl">
            <summary>
            Tells all caching mechanisms from server to client or vice-versa
            whether they may cache this object. It is measured in seconds.
            e.g. Cache-Control: no-cache
            e.g. Cache-Control: max-age=3600
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Connection">
            <summary>
            Options that are desired for the connection,
            e.g. Connection: keep-alive
            e.g. Connection: close
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentLength">
            <summary>
            The length of the request/response body in octets (8-bit bytes)
            Content-Length: 348
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentMd5">
            <summary>
            A Base64-encoded binary MD5 sum of the content of the response,
            e.g. Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentType">
            <summary>
            The MIME type of this content (requests use this only with POST / PUT methods),
            e.g. Content-Type: application/x-www-form-urlencoded
            e.g. Content-Type: text/html; charset=utf-8
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Date">
            <summary>
            The date and time that the message was sent,
            e.g. Date: Tue, 15 Nov 1994 08:12:31 GMT
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Pragma">
            <summary>
            Implementation-specific headers that may have various effects anywhere along the
            request-response chain.
            e.g. Pragma: no-cache
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Via">
            <summary>
            Informs the client or server of proxies through which the response / request was sent.
            e.g. Via: 1.0 fred, 1.1 example.com (Apache/1.1)
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Warning">
            <summary>
            A general warning about possible problems with the entity body.
            e.g. Warning: 199 Miscellaneous warning
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Accept">
            <summary>
            Content-Types that are acceptable for the response,
            e.g. Accept: text/plain
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.AcceptCharset">
            <summary>
            Character sets that are acceptable,
            e.g. Accept-Charset: utf-8
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.AcceptEncoding">
            <summary>
            List of acceptable encodings. See HTTP compression.
            e.g. Accept-Encoding: gzip, deflate
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.AcceptLanguage">
            <summary>
            List of acceptable human languages for response,
            e.g. Accept-Language: en-US
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.AcceptDatetime">
            <summary>
            Acceptable version in time, 
            e.g. Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Authorization">
            <summary>
            Authentication credentials for HTTP authentication,
            e.g. Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Cookie">
            <summary>
            An HTTP cookie previously sent by the server with Set-Cookie (below),
            e.g. Cookie: $Version=1; Skin=new;
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Expect">
            <summary>
            Indicates that particular server behaviors are required by the client,
            e.g. Expect: 100-continue
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.From">
            <summary>
            The email address of the user making the request,
            e.g. From: user@example.com
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Host">
            <summary>
            The domain name of the server (for virtual hosting), and the TCP port number on which
            the server is listening. The port number may be omitted if the port is the standard
            port for the service requested. Mandatory since HTTP/1.1. Although domain name are
            specified as case-insensitive, it is not specified whether the contents of the
            Host field should be interpreted in a case-insensitive manner and in practice some
            implementations of virtual hosting interpret the contents of the Host field in a
            case-sensitive manner.
            e.g. Host: en.wikipedia.org:80
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.IfMatch">
            <summary>
            Only perform the action if the client supplied entity matches the same entity on the
            server. This is mainly for methods like PUT to only update a resource if it has not
            been modified since the user last updated it.
            e.g. If-Match: "737060cd8c284d8af7ad3082f209582d"
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.IfModifiedSince">
            <summary>
            Allows a 304 Not Modified to be returned if content is unchanged,
            e.g. If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.IfNoneMatch">
            <summary>
            Allows a 304 Not Modified to be returned if content is unchanged, see HTTP ETag,
            e.g. If-None-Match: "737060cd8c284d8af7ad3082f209582d"
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.IfRange">
            <summary>
            If the entity is unchanged, send me the part(s) that I am missing; otherwise, send
            me the entire new entity.
            e.g. If-Range: "737060cd8c284d8af7ad3082f209582d"
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.IfUnmodifiedSince">
            <summary>
            Only send the response if the entity has not been modified since a specific time,
            e.g. If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.MaxForwards">
            <summary>
            Limit the number of times the message can be forwarded through proxies or gateways,
            e.g. Max-Forwards: 10
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Origin">
            <summary>
            Initiates a request for cross-origin resource sharing (asks server for an
            'Access-Control-Allow-Origin' response header),
            e.g. Origin: http://www.example-social-network.com
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ProxyAuthorization">
            <summary>
            Authorization credentials for connecting to a proxy,
            e.g. Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Range">
            <summary>
            Request only part of an entity. Bytes are numbered from 0.
            e.g. Range: bytes=500-999
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Referer">
            <summary>
            This is the address of the previous web page from which a link to the currently requested
            page was followed. (The word referrer is misspelled in the RFC as well as in most implementations.),
            e.g. Referer: http://en.wikipedia.org/wiki/Main_Page
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Te">
            <summary>
            The transfer encodings the user agent is willing to accept: the same values as for the response
            header Transfer-Encoding can be used, plus the "trailers" value (related to the "chunked" transfer
            method) to notify the server it expects to receive additional headers (the trailers) after the last,
            zero-sized, chunk.	
            e.g. TE: trailers, deflate
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Upgrade">
            <summary>
            Ask the server to upgrade to another protocol.
            e.g. Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.UserAgent">
            <summary>
            The user agent string of the user agent,
            e.g. User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.AccessControlAllowOrigin">
            <summary>
            Specifying which web sites can participate in cross-origin resource sharing,
            e.g. Access-Control-Allow-Origin: *
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.AcceptRanges">
            <summary>
            What partial content range types this server supports,
            e.g. Accept-Ranges: bytes
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Age">
            <summary>
            The age the object has been in a proxy cache in seconds,
            e.g. Age: 12
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Allow">
            <summary>
            Valid actions for a specified resource. To be used for a 405 Method not allowed.
            e.g. Allow: GET, HEAD
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentEncoding">
            <summary>
            The type of encoding used on the data. See HTTP compression.
            e.g. Content-Encoding: gzip
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentLanguage">
            <summary>
            The language the content is in,
            e.g. Content-Language: da
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentLocation">
            <summary>
            An alternate location for the returned data
            Content-Location: /index.htm
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentDisposition">
            <summary>
            An opportunity to raise a "File Download" dialogue box for a known MIME type with
            binary format or suggest a filename for dynamic content. Quotes are necessary with
            special characters. 
            e.g. Content-Disposition: attachment; filename="fname.ext"
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ContentRange">
            <summary>
            Where in a full body message this partial message belongs,
            e.g. Content-Range: bytes 21010-47021/47022
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ETag">
            <summary>
            An identifier for a specific version of a resource, often a message digest,
            e.g. ETag: "737060cd8c284d8af7ad3082f209582d"
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Expires">
            <summary>
            Gives the date/time after which the response is considered stale,
            e.g. Expires: Thu, 01 Dec 1994 16:00:00 GMT
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.LastModified">
            <summary>
            The last modified date for the requested object, in RFC 2822 format
            e.g. Last-Modified: Tue, 15 Nov 1994 12:45:26 +0000
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Link">
            <summary>
            Used to express a typed relationship with another resource, where the relation type is
            defined by RFC 5988
            e.g. Link: &lt;/feed&gt;; rel="alternate"
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Location">
            <summary>
            Used in redirection, or when a new resource has been created.
            e.g. Location: http://www.w3.org/pub/WWW/People.html
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.P3p">
            <summary>
            This header is supposed to set P3P policy, in the form of P3P:CP="your_compact_policy".
            However, P3P did not take off, most browsers have never fully implemented it, a lot of
            websites set this header with fake policy text, that was enough to fool browsers the
            existence of P3P policy and grant permissions for third party cookies.
            e.g. P3P: CP="This is not a P3P policy! See ... for more info."
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.ProxyAuthenticate">
            <summary>
            Request authentication to access the proxy.
            e.g. Proxy-Authenticate: Basic
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Refresh">
            <summary>
            Used in redirection, or when a new resource has been created. This refresh
            redirects after 5 seconds.
            e.g. Refresh: 5; url=http://www.w3.org/pub/WWW/People.html
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.RetryAfter">
            <summary>
            If an entity is temporarily unavailable, this instructs the client to try again
            after a specified period of time (seconds).
            e.g. Retry-After: 120
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Server">
            <summary>
            A name for the server,
            e.g. Server: Apache/2.4.1 (Unix)
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.SetCookie">
            <summary>
            An HTTP cookie,
            e.g. Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Status">
            <summary>
            The HTTP status of the response. "Status" is not listed as a registered header. The
            "Status-Line" of a "Response" is defined by RFC2616 without any explicit Status: header name.
            e.g. Status: 200 OK
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.StrictTransportSecurity">
            <summary>
            A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and
            whether this applies to subdomains.
            e.g. Strict-Transport-Security: max-age=16070400; includeSubDomains
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Trailer">
            <summary>
            The Trailer general field value indicates that the given set of header fields is present in
            the trailer of a message encoded with chunked transfer-coding.
            e.g. Trailer: Max-Forwards
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.TransferEncoding">
            <summary>
            The form of encoding used to safely transfer the entity to the user. Currently defined methods
            are: chunked, compress, deflate, gzip, identity.	
            e.g. Transfer-Encoding: chunked
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.Vary">
            <summary>
            Tells downstream proxies how to match future request headers to decide whether the cached response can
            be used rather than requesting a fresh one from the origin server.
            e.g. Vary: *
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HeaderNames.WwwAuthenticate">
            <summary>
            Indicates the authentication scheme that should be used to access the requested entity.
            e.g. WWW-Authenticate: Basic
            </summary>
        </member>
        <member name="T:AngleSharp.Css.PropertyNames">
            <summary>
            The collection of (known / used) property names.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AlignContent">
            <summary>
            The align-content declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AlignItems">
            <summary>
            The align-items declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AlignBaseline">
            <summary>
            The align-baseline declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AlignSelf">
            <summary>
            The align-self declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Accelerator">
            <summary>
            The accelerator declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Animation">
            <summary>
            The animation declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationDelay">
            <summary>
            The animation-delay declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationDirection">
            <summary>
            The animation-direction declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationDuration">
            <summary>
            The animation-duration declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationFillMode">
            <summary>
            The animation-fill-mode declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationIterationCount">
            <summary>
            The animation-iteration-count declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationName">
            <summary>
            The animation-name declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationPlayState">
            <summary>
            The animation-play-state declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.AnimationTimingFunction">
            <summary>
            The animation-timing-function declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundAttachment">
            <summary>
            The background-attachment declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundColor">
            <summary>
            The background-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundClip">
            <summary>
            The background-clip declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundOrigin">
            <summary>
            The background-origin declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundSize">
            <summary>
            The background-size declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundImage">
            <summary>
            The background-image declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundPosition">
            <summary>
            The background-position declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundPositionX">
            <summary>
            The background-position-x declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundPositionY">
            <summary>
            The background-position-y declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackgroundRepeat">
            <summary>
            The background-repeat declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Background">
            <summary>
            The background declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Behavior">
            <summary>
            The behavior declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BaselineShift">
            <summary>
            The baseline-shift declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderColor">
            <summary>
            The border-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderSpacing">
            <summary>
            The border-spacing declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderCollapse">
            <summary>
            The border-collapse declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderStyle">
            <summary>
            The border-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderRadius">
            <summary>
            The border-radius declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderTopLeftRadius">
            <summary>
            The border-top-left-radius declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderTopRightRadius">
            <summary>
            The border-top-right-radius declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderBottomLeftRadius">
            <summary>
            The border-bottom-left-radius declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderBottomRightRadius">
            <summary>
            The border-bottom-right-radius declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BoxShadow">
            <summary>
            The box-shadow declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BoxSizing">
            <summary>
            The box-sizing declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BoxDecorationBreak">
            <summary>
            The box-decoration-break declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BreakAfter">
            <summary>
            The break-after declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BreakBefore">
            <summary>
            The break-before declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BreakInside">
            <summary>
            The break-inside declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BackfaceVisibility">
            <summary>
            The backface-visibility declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderImage">
            <summary>
            The border-image declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderImageOutset">
            <summary>
            The border-image-outset declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderImageRepeat">
            <summary>
            The border-image-repeat declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderImageSource">
            <summary>
            The border-image-source declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderImageSlice">
            <summary>
            The border-image-slice declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderImageWidth">
            <summary>
            The border-image-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderTop">
            <summary>
            The border-top declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderRight">
            <summary>
            The border-right declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderBottom">
            <summary>
            The border-bottom declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderLeft">
            <summary>
            The border-left declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderTopColor">
            <summary>
            The border-top-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderLeftColor">
            <summary>
            The border-left-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderRightColor">
            <summary>
            The border-right-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderBottomColor">
            <summary>
            The border-bottom-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderTopStyle">
            <summary>
            The border-top-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderLeftStyle">
            <summary>
            The border-left-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderRightStyle">
            <summary>
            The border-right-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderBottomStyle">
            <summary>
            The border-bottom-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderTopWidth">
            <summary>
            The border-top-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderLeftWidth">
            <summary>
            The border-left-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderRightWidth">
            <summary>
            The border-right-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderBottomWidth">
            <summary>
            The border-bottom-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.BorderWidth">
            <summary>
            The border-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Border">
            <summary>
            The border declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Bottom">
            <summary>
            The bottom declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Columns">
            <summary>
            The columns declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnCount">
            <summary>
            The column-count declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnFill">
            <summary>
            The column-fill declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnGap">
            <summary>
            The column-gap declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnRule">
            <summary>
            The column-rule declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnRuleColor">
            <summary>
            The column-rule-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnRuleStyle">
            <summary>
            The column-rule-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnRuleWidth">
            <summary>
            The column-rule-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnSpan">
            <summary>
            The column-span declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColumnWidth">
            <summary>
            The column-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.CaptionSide">
            <summary>
            The caption-side declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Clear">
            <summary>
            The clear declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Clip">
            <summary>
            The clip declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ClipLeft">
            <summary>
            The clip-left declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ClipTop">
            <summary>
            The clip-top declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ClipRight">
            <summary>
            The clip-right declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ClipBottom">
            <summary>
            The clip-bottom declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ClipPath">
            <summary>
            The clip-path declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ClipRule">
            <summary>
            The clip-rule declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Color">
            <summary>
            The color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ColorInterpolationFilters">
            <summary>
            The color-interpolation-filters declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Content">
            <summary>
            The content declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.CounterIncrement">
            <summary>
            The counter-increment declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.CounterReset">
            <summary>
            The counter-reset declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Cursor">
            <summary>
            The cursor declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Direction">
            <summary>
            The direction declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Display">
            <summary>
            The display declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.DominantBaseline">
            <summary>
            The dominant-baseline declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.EmptyCells">
            <summary>
            The empty-cells declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.EnableBackground">
            <summary>
            The enable-background declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Fill">
            <summary>
            The fill declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FillOpacity">
            <summary>
            The fill-opacity declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FillRule">
            <summary>
            The fill-rule declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Filter">
            <summary>
            The filter declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Flex">
            <summary>
            The flex declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FlexBasis">
            <summary>
            The flex-basis declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FlexDirection">
            <summary>
            The flex-direction declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FlexFlow">
            <summary>
            The flex-flow declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FlexGrow">
            <summary>
            The flex-grow declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FlexShrink">
            <summary>
            The flex-shrink declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FlexWrap">
            <summary>
            The flex-wrap declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Float">
            <summary>
            The float declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontFamily">
            <summary>
            The font-family declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontFeatureSettings">
            <summary>
            The font-feature-settings declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontSize">
            <summary>
            The font-size declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontSizeAdjust">
            <summary>
            The font-size-adjust declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontStyle">
            <summary>
            The font-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontStretch">
            <summary>
            The font-stretch declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontVariant">
            <summary>
            The font-variant declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.FontWeight">
            <summary>
            The font-weight declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Font">
            <summary>
            The font declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.GlyphOrientationHorizontal">
            <summary>
            The glyph-orientation-horizontal declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.GlyphOrientationVertical">
            <summary>
            The glyph-orientation-vertical declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Height">
            <summary>
            The height declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ImeMode">
            <summary>
            The ime-mode declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.JustifyContent">
            <summary>
            The justify-content declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LayoutGrid">
            <summary>
            The layout-grid declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LayoutGridChar">
            <summary>
            The layout-grid-char declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LayoutGridType">
            <summary>
            The layout-grid-type declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LayoutGridMode">
            <summary>
            The layout-grid-mode declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LayoutGridLine">
            <summary>
            The layout-grid-line declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Left">
            <summary>
            The left declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LetterSpacing">
            <summary>
            The letter-spacing declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.LineHeight">
            <summary>
            The line-height declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ListStyleImage">
            <summary>
            The list-style-image declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ListStylePosition">
            <summary>
            The list-style-position declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ListStyleType">
            <summary>
            The list-style-type declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ListStyle">
            <summary>
            The list-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarginRight">
            <summary>
            The margin-right declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarginLeft">
            <summary>
            The margin-left declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarginTop">
            <summary>
            The margin-top declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarginBottom">
            <summary>
            The margin-bottom declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Margin">
            <summary>
            The margin declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Marker">
            <summary>
            The marker declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarkerEnd">
            <summary>
            The marker-end declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarkerMid">
            <summary>
            The marker-mid declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MarkerStart">
            <summary>
            The marker-start declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Mask">
            <summary>
            The mask declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MaxHeight">
            <summary>
            The max-height declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MaxWidth">
            <summary>
            The max-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MinHeight">
            <summary>
            The min-height declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.MinWidth">
            <summary>
            The min-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Opacity">
            <summary>
            The opacity declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Order">
            <summary>
            The order declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Orphans">
            <summary>
            The orphans declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.OutlineColor">
            <summary>
            The outline-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.OutlineStyle">
            <summary>
            The outline-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.OutlineWidth">
            <summary>
            The outline-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Outline">
            <summary>
            The outline declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Overflow">
            <summary>
            The overflow declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.OverflowX">
            <summary>
            The overflow-x declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.OverflowY">
            <summary>
            The overflow-y declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PaddingTop">
            <summary>
            The padding-top declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PaddingRight">
            <summary>
            The padding-right declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PaddingLeft">
            <summary>
            The padding-left declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PaddingBottom">
            <summary>
            The padding-bottom declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Padding">
            <summary>
            The padding declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PageBreakAfter">
            <summary>
            The page-break-after declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PageBreakBefore">
            <summary>
            The page-break-before declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PageBreakInside">
            <summary>
            The page-break-inside declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Perspective">
            <summary>
            The perspective declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PerspectiveOrigin">
            <summary>
            The perspective-origin declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.PointerEvents">
            <summary>
            The pointer-events declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Position">
            <summary>
            The position declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Quotes">
            <summary>
            The quotes declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Right">
            <summary>
            The right declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.RubyAlign">
            <summary>
            The ruby-align declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.RubyOverhang">
            <summary>
            The ruby-overhang declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.RubyPosition">
            <summary>
            The ruby-position declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Scrollbar3dLightColor">
            <summary>
            The scrollbar3d-light-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ScrollbarArrowColor">
            <summary>
            The scrollbar-arrow-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ScrollbarDarkShadowColor">
            <summary>
            The scrollbar-dark-shadow-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ScrollbarFaceColor">
            <summary>
            The scrollbar-face-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ScrollbarHighlightColor">
            <summary>
            The scrollbar-highlight-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ScrollbarShadowColor">
            <summary>
            The scrollbar-shadow-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ScrollbarTrackColor">
            <summary>
            The scrollbar-track-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Stroke">
            <summary>
            The stroke declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeDasharray">
            <summary>
            The stroke-dasharray declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeDashoffset">
            <summary>
            The stroke-dashoffset declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeLinecap">
            <summary>
            The stroke-linecap declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeLinejoin">
            <summary>
            The stroke-linejoin declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeMiterlimit">
            <summary>
            The stroke-miterlimit declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeOpacity">
            <summary>
            The stroke-opacity declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.StrokeWidth">
            <summary>
            The stroke-width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TableLayout">
            <summary>
            The table-layout declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextAlign">
            <summary>
            The text-align declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextAlignLast">
            <summary>
            The text-align-last declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextAnchor">
            <summary>
            The text-anchor declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextAutospace">
            <summary>
            The text-autospace declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextDecoration">
            <summary>
            The text-decoration declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextDecorationColor">
            <summary>
            The text-decoration-color declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextDecorationLine">
            <summary>
            The text-decoration-line declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextDecorationStyle">
            <summary>
            The text-decoration-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextIndent">
            <summary>
            The text-indent declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextJustify">
            <summary>
            The text-justify declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextOverflow">
            <summary>
            The text-overflow declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextShadow">
            <summary>
            The text-shadow declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextTransform">
            <summary>
            The text-transform declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TextUnderlinePosition">
            <summary>
            The text-underline-position declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Transform">
            <summary>
            The transform declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TransformOrigin">
            <summary>
            The transform-origin declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TransformStyle">
            <summary>
            The transform-style declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Transition">
            <summary>
            The transition declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TransitionDelay">
            <summary>
            The transition-delay declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TransitionDuration">
            <summary>
            The transition-duration declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TransitionTimingFunction">
            <summary>
            The transition-timing-function declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.TransitionProperty">
            <summary>
            The transition-property declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Top">
            <summary>
            The top declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.UnicodeBidi">
            <summary>
            The unicode-bidi declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.VerticalAlign">
            <summary>
            The vertical-align declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Visibility">
            <summary>
            The visibility declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.WhiteSpace">
            <summary>
            The white-space declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Widows">
            <summary>
            The widows declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Width">
            <summary>
            The width declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.WordBreak">
            <summary>
            The word-break declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.WordSpacing">
            <summary>
            The word-spacing declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.WordWrap">
            <summary>
            The word-wrap declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.WritingMode">
            <summary>
            The writing-mode declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.ZIndex">
            <summary>
            The z-index declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Zoom">
            <summary>
            The zoom declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.UnicodeRange">
            <summary>
            The unicode-range declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.PropertyNames.Src">
            <summary>
            The src declaration.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.RuleNames">
            <summary>
            Contains all CSS rule names.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Supports">
            <summary>
            The @supports rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Charset">
            <summary>
            The @charset rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Document">
            <summary>
            The @document rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.FontFace">
            <summary>
            The @font-face rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Import">
            <summary>
            The @import rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Keyframes">
            <summary>
            The @keyframes rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Media">
            <summary>
            The @media rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Namespace">
            <summary>
            The @namespace rule.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.RuleNames.Page">
            <summary>
            The @page rule.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.XmlExtensions">
            <summary>
            Useful helpers for the XML parser.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsPubidChar(System.Char)">
            <summary>
            Determines if the given character is a legal character for the public id field:
            http://www.w3.org/TR/REC-xml/#NT-PubidChar
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsXmlNameStart(System.Char)">
            <summary>
            Determines if the given character is a legal name start character for XML.
            http://www.w3.org/TR/REC-xml/#NT-NameStartChar
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsXmlName(System.Char)">
            <summary>
            Determines if the given character is a name character for XML.
            http://www.w3.org/TR/REC-xml/#NT-NameChar
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsXmlName(System.String)">
            <summary>
            Determines if the given string is a valid (local or qualified) name.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsQualifiedName(System.String)">
            <summary>
            Determines if the given string is a valid qualified name.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsXmlChar(System.Char)">
            <summary>
            Checks if the given char is a valid character.
            </summary>
            <param name="chr">The char to examine.</param>
            <returns>True if the char would indeed be valid.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.XmlExtensions.IsValidAsCharRef(System.Int32)">
            <summary>
            Checks if the given integer would be a valid character.
            </summary>
            <param name="chr">The integer to examine.</param>
            <returns>True if the integer would indeed be valid.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Html.FormDataSet">
            <summary>
            Bundles information stored in HTML forms.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.AsMultipart(System.Text.Encoding)">
            <summary>
            Applies the multipart/form-data algorithm.
            http://www.w3.org/html/wg/drafts/html/master/forms.html#multipart/form-data-encoding-algorithm
            </summary>
            <param name="encoding">(Optional) Explicit encoding.</param>
            <returns>A stream containing the body.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.AsUrlEncoded(System.Text.Encoding)">
            <summary>
            Applies the urlencoded algorithm.
            http://www.w3.org/html/wg/drafts/html/master/forms.html#application/x-www-form-urlencoded-encoding-algorithm
            </summary>
            <param name="encoding">(Optional) Explicit encoding.</param>
            <returns>A stream containing the body.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.AsPlaintext(System.Text.Encoding)">
            <summary>
            Applies the plain encoding algorithm.
            http://www.w3.org/html/wg/drafts/html/master/forms.html#text/plain-encoding-algorithm
            </summary>
            <param name="encoding">(Optional) Explicit encoding.</param>
            <returns>A stream containing the body.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.ReplaceCharset(System.Text.Encoding)">
            <summary>
            Replaces a charset field (if any) that is hidden with the given character encoding.
            </summary>
            <param name="encoding">The encoding to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.CheckBoundaries(System.Text.Encoding)">
            <summary>
            Checks the entries for boundary collisions. If a collision is detected, then a new
            boundary string is generated. This algorithm will produce a boundary string that
            satisfies all requirements.
            </summary>
            <param name="encoding">The encoding to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.Normalize(System.String)">
            <summary>
            Replaces every occurrence of a "CR" (U+000D) character not followed by a "LF" (U+000A)
            character, and every occurrence of a "LF" (U+000A) character not preceded by a "CR"
            (U+000D) character, by a two-character string consisting of a U+000D CARRIAGE RETURN
            "CRLF" (U+000A) character pair.
            </summary>
            <param name="value">The value to normalize.</param>
            <returns>The normalized string.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.FormDataSet.GetEnumerator">
            <summary>
            Gets an enumerator over all entry names.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.FormDataSet.Boundary">
            <summary>
            Gets the chosen boundary.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.FormDataSet.FormDataSetEntry">
            <summary>
            Encapsulates the data contained in an entry.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.FormDataSet.FormDataSetEntry.Name">
            <summary>
            Gets or sets the entry's name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.FormDataSet.FormDataSetEntry.Type">
            <summary>
            Gets or sets the entry's type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.FormDataSet.TextDataSetEntry.Value">
            <summary>
            Gets or sets the entry's value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.FormDataSet.FileDataSetEntry.Value">
            <summary>
            Gets or sets the entry's value.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlHelpers">
            <summary>
            Useful helpers for the HTML parser.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlHelpers.IsTableElement(System.String)">
            <summary>
            Examines if the given element is one of the table elements (table, tbody, tfoot, thead, tr).
            </summary>
            <param name="tagName">The tag name to examine</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlHelpers.IsTableSectionElement(System.String)">
            <summary>
            Examines if the given tag name matches one of the elements (tbody, tfoot, thead).
            </summary>
            <param name="tagName">The tag name to examine</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlHelpers.IsTableCellElement(System.String)">
            <summary>
            Examines if the given tag name matches one of the elements (td, th).
            </summary>
            <param name="tagName">The tag name to examine</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlHelpers.IsGeneralTableElement(System.String,System.Boolean)">
            <summary>
            Examines if the given tag name matches one of the elements (caption, col, colgroup, tbody, tfoot, thead).
            </summary>
            <param name="tagName">The tag name to examine</param>
            <param name="includeRow">True if the tr element should also be tested.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlHelpers.IsSpecialTableElement(System.String,System.Boolean)">
            <summary>
            Examines if the given tag name matches one of the elements (body, caption, col, colgroup, html, td, th).
            </summary>
            <param name="tagName">The tag name to examine</param>
            <param name="includeRow">True if the tr element should also be tested.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.Extensions.StringExtensions">
            <summary>
            Useful methods for string objects.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.Contains(System.Collections.Generic.IEnumerable{System.Char},System.Char)">
            <summary>
            Examines if a the given list of characters contains a certain element.
            </summary>
            <param name="list">The list of characters.</param>
            <param name="element">The element to search for.</param>
            <returns>The status of the check.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.ToEnum``1(System.String,``0)">
            <summary>
            Converts the given value to an enumeration value (or not).
            </summary>
            <param name="value">The value to convert.</param>
            <param name="defaultValue">The default value to consider (optional).</param>
            <returns>The converted enum value.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.ToDouble(System.String,System.Double)">
            <summary>
            Converts the given value to a double (or not).
            </summary>
            <param name="value">The value to convert.</param>
            <param name="defaultValue">The default value to consider (optional).</param>
            <returns>The converted double.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.ToInteger(System.String,System.Int32)">
            <summary>
            Converts the given value to an integer (or not).
            </summary>
            <param name="value">The value to convert.</param>
            <param name="defaultValue">The default value to consider (optional).</param>
            <returns>The converted integer.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.ToInteger(System.String,System.UInt32)">
            <summary>
            Converts the given value to an unsigned integer (or not).
            </summary>
            <param name="value">The value to convert.</param>
            <param name="defaultValue">The default value to consider (optional).</param>
            <returns>The converted unsigned integer.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.ToBoolean(System.String,System.Boolean)">
            <summary>
            Converts the given value to a boolean (or not).
            </summary>
            <param name="value">The value to convert.</param>
            <param name="defaultValue">The default value to consider (optional).</param>
            <returns>The converted boolean.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.ReplaceFirst(System.String,System.String,System.String)">
            <summary>
            Replaces the first occurance of the string search with replace.
            </summary>
            <param name="text">The text to use.</param>
            <param name="search">The string to search for.</param>
            <param name="replace">The one-time replacement string.</param>
            <returns>The result of the search-and-replace.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.Contains(System.String,System.String)">
            <summary>
            Returns a value indicating whether the specified object occurs within this string.
            This method might seem obsolete, but it is quite useful in case of porting
            AngleSharp to a PCL, where String instances to not have a Contains method.
            </summary>
            <param name="str">The string to examine.</param>
            <param name="content">The string to seek.</param>
            <returns>True if the value parameter occurs within this string, or if value is the empty string.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.CollapseAndStrip(System.String)">
            <summary>
            Collapses and strips all spaces in the given string.
            </summary>
            <param name="str">The string to collapse and strip.</param>
            <returns>The modified string with collapsed and stripped spaces.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.Collapse(System.String)">
            <summary>
            Collapses all spaces in the given string.
            </summary>
            <param name="str">The string to collapse.</param>
            <returns>The modified string with collapsed spaces.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.Contains(System.String[],System.String,System.StringComparison)">
            <summary>
            Examines if a the given list of string contains a certain element.
            </summary>
            <param name="list">The list of strings.</param>
            <param name="element">The element to search for.</param>
            <param name="comparison">The default comparison to use.</param>
            <returns>The status of the check.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsOneOf(System.String,System.String,System.String)">
            <summary>
            Examines if the given element is equal to one of the given elements.
            </summary>
            <param name="element">The element to check for equality.</param>
            <param name="item1">The first item to compare to.</param>
            <param name="item2">The second item to compare to.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsOneOf(System.String,System.String,System.String,System.String)">
            <summary>
            Examines if the given element is equal to one of the given elements.
            </summary>
            <param name="element">The element to check for equality.</param>
            <param name="item1">The first item to compare to.</param>
            <param name="item2">The second item to compare to.</param>
            <param name="item3">The third item to compare to.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsOneOf(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Examines if the given element is equal to one of the given elements.
            </summary>
            <param name="element">The element to check for equality.</param>
            <param name="item1">The first item to compare to.</param>
            <param name="item2">The second item to compare to.</param>
            <param name="item3">The third item to compare to.</param>
            <param name="item4">The fourth item to compare to.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsOneOf(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Examines if the given element is equal to one of the given elements.
            </summary>
            <param name="element">The element to check for equality.</param>
            <param name="item1">The first item to compare to.</param>
            <param name="item2">The second item to compare to.</param>
            <param name="item3">The third item to compare to.</param>
            <param name="item4">The fourth item to compare to.</param>
            <param name="item5">The fifth item to compare to.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsOneOf(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Examines if the given element is equal to one of the given elements.
            </summary>
            <param name="element">The element to check for equality.</param>
            <param name="item1">The first item to compare to.</param>
            <param name="item2">The second item to compare to.</param>
            <param name="item3">The third item to compare to.</param>
            <param name="item4">The fourth item to compare to.</param>
            <param name="item5">The fifth item to compare to.</param>
            <param name="item6">The sixth item to compare to.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsOneOf(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Examines if the given element is equal to one of the given elements.
            </summary>
            <param name="element">The element to check for equality.</param>
            <param name="item1">The first item to compare to.</param>
            <param name="item2">The second item to compare to.</param>
            <param name="item3">The third item to compare to.</param>
            <param name="item4">The fourth item to compare to.</param>
            <param name="item5">The fifth item to compare to.</param>
            <param name="item6">The sixth item to compare to.</param>
            <param name="item7">The seventh item to compare to.</param>
            <returns>True if the element is equal to one of the elements, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.StripLineBreaks(System.String)">
            <summary>
            Strips all line breaks from the given string.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>A new string, which excludes the line breaks.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.StripLeadingTailingSpaces(System.String)">
            <summary>
            Strips all leading and tailing space characters from the given string.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>A new string, which excludes the leading and tailing spaces.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.StripLeadingTailingSpaces(System.Char[])">
            <summary>
            Strips all leading and tailing space characters from the given char array.
            </summary>
            <param name="array">The array of characters to examine.</param>
            <returns>A new string, which excludes the leading and tailing spaces.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.SplitWithoutTrimming(System.String,System.Char)">
            <summary>
            Splits the string with the given char delimiter.
            </summary>
            <param name="str">The string to examine.</param>
            <param name="c">The delimiter character.</param>
            <returns>The list of tokens.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.SplitWithoutTrimming(System.Char[],System.Char)">
            <summary>
            Splits the char array with the given char delimiter.
            </summary>
            <param name="chars">The char array to examine.</param>
            <param name="c">The delimiter character.</param>
            <returns>The list of tokens.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.SplitCommas(System.String)">
            <summary>
            Splits the string on commas.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>The list of tokens.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.SplitHyphens(System.String)">
            <summary>
            Splits the string on dash characters.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>The list of tokens.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.SplitSpaces(System.String)">
            <summary>
            Splits the string on space characters.
            </summary>
            <param name="str">The string to examine.</param>
            <returns>The list of tokens.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.SplitWithTrimming(System.String,System.Char)">
            <summary>
            Splits the string with the given char delimiter and trims the leading and tailing spaces.
            </summary>
            <param name="str">The string to examine.</param>
            <param name="c">The delimiter character.</param>
            <returns>The list of tokens.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsDigit(System.String)">
            <summary>
            Determines if the given string consists only of digits (0-9) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#ascii-digits
            </summary>
            <param name="s">The characters to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.IsHex(System.String)">
            <summary>
            Determines if the given string only contains characters, which are hexadecimal (0-9a-fA-F) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#ascii-hex-digits
            </summary>
            <param name="s">The string to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.FromHex(System.String)">
            <summary>
            Converts the given string to an integer.
            </summary>
            <param name="s">The hexadecimal representation.</param>
            <returns>The integer number.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.FromDec(System.String)">
            <summary>
            Converts the given string to an integer.
            </summary>
            <param name="s">The decimal representation.</param>
            <returns>The integer number.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.HtmlEncode(System.String,System.Text.Encoding)">
            <summary>
            Replaces characters in names and values that cannot be expressed by using the given
            encoding with &amp;#...; base-10 unicode point.
            </summary>
            <param name="value">The value to sanatize.</param>
            <param name="encoding">The encoding to consider.</param>
            <returns>The sanatized value.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.CssString(System.String)">
            <summary>
            Serializes the string to a CSS string.
            </summary>
            <param name="value">The value to serialize.</param>
            <returns>The CSS string representation.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.CssUrl(System.String)">
            <summary>
            Serializes the string to a CSS url.
            </summary>
            <param name="value">The value to serialize.</param>
            <returns>The CSS url representation.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.StringExtensions.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            Replaces characters in names and values that should not be in URL values.
            Replaces the bytes 0x20 (U+0020 SPACE if interpreted as ASCII) with a single 0x2B byte ("+" (U+002B)
            character if interpreted as ASCII).
            If a byte is not in the range 0x2A, 0x2D, 0x2E, 0x30 to 0x39, 0x41 to 0x5A, 0x5F, 0x61 to 0x7A, it is
            replaced with its hexadecimal value (zero-padded if necessary), starting with the percent sign.
            </summary>
            <param name="value">The value to encode.</param>
            <param name="encoding">The encoding to consider.</param>
            <returns>The encoded value.</returns>
        </member>
        <member name="T:AngleSharp.Network.IInfo">
            <summary>
            Represents some basic information about the AngleSharp library.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IInfo.Version">
            <summary>
            Gets the current version of AngleSharp.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IInfo.Agent">
            <summary>
            Gets the transmitted default user-agent identifier.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.DefaultInfo">
            <summary>
            General information to be used internally about the library.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultInfo.Version">
            <summary>
            Gets the version of AngleSharp.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultInfo.Agent">
            <summary>
            Gets the agent string of AngleSharp.
            </summary>
        </member>
        <member name="T:AngleSharp.Pool">
            <summary>
            Provides a pool of used / recycled resources.
            </summary>
        </member>
        <member name="M:AngleSharp.Pool.NewStringBuilder">
            <summary>
            Either creates a fresh stringbuilder or gets a (cleaned) used one.
            </summary>
            <returns>A stringbuilder to use.</returns>
        </member>
        <member name="M:AngleSharp.Pool.NewSelectorConstructor">
            <summary>
            Either creates a fresh selector constructor or gets a (cleaned) used one.
            </summary>
            <returns>A selector constructor to use.</returns>
        </member>
        <member name="M:AngleSharp.Pool.ToPool(System.Text.StringBuilder)">
            <summary>
            Returns the given stringbuilder to the pool and gets the current
            string content.
            </summary>
            <param name="sb">The stringbuilder to recycle.</param>
            <returns>The string that is contained in the stringbuilder.</returns>
        </member>
        <member name="M:AngleSharp.Pool.ToPool(AngleSharp.Parser.Css.CssSelectorConstructor)">
            <summary>
            Returns the given selector constructor to the pool and gets the
            constructed selector.
            </summary>
            <param name="ctor">The constructor to recycle.</param>
            <returns>The Selector that is contained in the constructor.</returns>
        </member>
        <member name="T:AngleSharp.Network.DefaultRequest">
            <summary>
            The default HTTP request encapsulation type.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.IRequest">
            <summary>
            Specifies what is used for requesting data.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IRequest.Method">
            <summary>
            Gets the used request method.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IRequest.Address">
            <summary>
            Gets the specified request url.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IRequest.Headers">
            <summary>
            Gets the headers to send with the request.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IRequest.Content">
            <summary>
            Gets content to send with the request.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequest.#ctor">
            <summary>
            Creates a new default requests.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultRequest.Method">
            <summary>
            Gets or sets the method that should be used.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultRequest.Address">
            <summary>
            Gets or sets the address should be requested.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultRequest.Headers">
            <summary>
            Gets or sets a list of headers (key-values) that should be used.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultRequest.Content">
            <summary>
            Gets or sets a stream to the content (positioned at the origin).
            </summary>
        </member>
        <member name="T:AngleSharp.Network.DefaultRequester">
            <summary>
            The default (ready-to-use) HTTP requester.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.IRequester">
            <summary>
            Defines the required methods any requester object must have.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.IRequester.SupportsProtocol(System.String)">
            <summary>
            Checks if the given protocol is supported.
            </summary>
            <param name="protocol">The protocol to check for, e.g. http.</param>
            <returns>True if the protocol is supported, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Network.IRequester.RequestAsync(AngleSharp.Network.IRequest,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous request that can be cancelled.
            </summary>
            <param name="request">The options to consider.</param>
            <param name="cancel">The token for cancelling the task.</param>
            <returns>The task that will eventually give the response data.</returns>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.#ctor">
            <summary>
            Constructs a default HTTP requester with the default
            user-agent information.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.#ctor(AngleSharp.Network.IInfo)">
            <summary>
            Constructs a default HTTP requester with the information
            presented in the info object.
            </summary>
            <param name="info">The information to use.</param>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.SupportsProtocol(System.String)">
            <summary>
            Checks if the given protocol is supported.
            </summary>
            <param name="protocol">The protocol to check for, e.g. http.</param>
            <returns>True if the protocol is supported, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.RequestAsync(AngleSharp.Network.IRequest)">
            <summary>
            Performs an asynchronous http request with the given options.
            </summary>
            <param name="request">The options to consider.</param>
            <returns>The task that will eventually give the response data.</returns>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.RequestAsync(AngleSharp.Network.IRequest,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous http request that can be cancelled.
            </summary>
            <param name="request">The options to consider.</param>
            <param name="cancellationToken">The token for cancelling the task.</param>
            <returns>The task that will eventually give the response data.</returns>
        </member>
        <member name="P:AngleSharp.Network.DefaultRequester.Headers">
            <summary>
            Gets the used headers.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultRequester.Timeout">
            <summary>
            Gets or sets the timeout value.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.RequestState.AddHeader(System.String,System.String)">
            <summary>
            Dirty dirty workaround since the webrequester itself is
            already quite stupid, but the one here (for the PCL) is
            really not the way things should be programmed ...
            </summary>
            <param name="key">The key to add or change.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:AngleSharp.Network.DefaultRequester.RequestState.SetProperty(System.String,System.Object)">
            <summary>
            Sets properties of the special headers (desc. here
            http://msdn.microsoft.com/en-us/library/system.net.httpwebrequest.headers.aspx)
            which are not accessible (in general) in this profile (profile78).
            However, usually they are here and can be modified with reflection.
            If not they are not set.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property, which will be set.</param>
        </member>
        <member name="T:AngleSharp.Network.DefaultResponse">
            <summary>
            The default HTTP response encapsulation object.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.IResponse">
            <summary>
            Specifies what is stored when receiving data.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IResponse.StatusCode">
            <summary>
            Gets the status code that has been send with the response.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IResponse.Address">
            <summary>
            Gets the url of the response.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IResponse.Headers">
            <summary>
            Gets the headers that have been send with the response.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.IResponse.Content">
            <summary>
            Gets the content that has been send with the response.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.DefaultResponse.#ctor">
            <summary>
            Creates a new default response object.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultResponse.StatusCode">
            <summary>
            Gets or sets the status code of the response.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultResponse.Address">
            <summary>
            Gets or sets the url of the response.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultResponse.Headers">
            <summary>
            Gets or sets the headers (key-value pairs) of the response.
            </summary>
        </member>
        <member name="P:AngleSharp.Network.DefaultResponse.Content">
            <summary>
            Gets or sets a stream for content of the response.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSStyleDeclaration">
            <summary>
            Represents a single CSS declaration block.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.#ctor(System.String)">
            <summary>
            Creates a new CSS style declaration with no parent.
            </summary>
            <param name="source">The source to start with.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.#ctor(AngleSharp.DOM.Css.CSSRule)">
            <summary>
            Creates a new CSS style declaration.
            </summary>
            <param name="parent">The parent of the style declaration.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.#ctor(System.Collections.Generic.IEnumerable{AngleSharp.DOM.Css.ICssProperty})">
            <summary>
            Creates a new read-only CSS style declaration.
            </summary>
            <param name="properties">The properties to show.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.RemoveProperty(System.String)">
            <summary>
            Removes the given property and returns its value.
            </summary>
            <param name="propertyName">The name of the property to be removed.</param>
            <returns>The value of the deleted property, if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.GetPropertyPriority(System.String)">
            <summary>
            Returns the optional priority, "important".
            </summary>
            <param name="propertyName">The name of the property to get the priority of.</param>
            <returns>A priority or the empty string.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.GetPropertyValue(System.String)">
            <summary>
            Returns the value of a property.
            </summary>
            <param name="propertyName">The name of the property to get the value of.</param>
            <returns>A value or the empty string if nothing has been set.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.SetProperty(System.String,System.String,System.String)">
            <summary>
            Sets a property with the given name and value.
            </summary>
            <param name="propertyName">The property's name.</param>
            <param name="propertyValue">The value of the property.</param>
            <param name="priority">The optional priority.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.CreateProperty(System.String)">
            <summary>
            Creates the given property, if it does not already exist.
            Otherwise returns the existing declaration.
            </summary>
            <param name="name">The name of the property to retrieve or create.</param>
            <returns>The created / existing property.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.GetProperty(System.String)">
            <summary>
            Gets the given CSS property.
            </summary>
            <param name="name">The name of the property to get.</param>
            <returns>The property with the specified name or null.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.SetProperty(AngleSharp.DOM.Css.CSSProperty)">
            <summary>
            Sets the given CSS property, if the property is equal or higher.
            </summary>
            <param name="property">The property to set.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.Update(System.String)">
            <summary>
            Updates the CSSStyleDeclaration with the given value.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.TakeFrom(AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Takes the declarations from the other style declaration.
            Clears the other style declarations.
            </summary>
            <param name="style">The style to take the declarations from.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.ToCss">
            <summary>
            Returns the CSS representation of the list of rules.
            </summary>
            <returns>A string containing the CSS code of the declarations.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.GetEnumerator">
            <summary>
            Returns an ienumerator that enumerates over all entries.
            </summary>
            <returns>The iterator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleDeclaration.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a common ienumerator to enumerate all entries.
            </summary>
            <returns>The iterator.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.CssText">
            <summary>
            Gets or sets the textual representation of the declaration block.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.IsReadOnly">
            <summary>
            Gets if the style declaration is read-only and must not be modified.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.Length">
            <summary>
            Gets the number of properties in the declaration.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.Parent">
            <summary>
            Gets the containing CSSRule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.Item(System.Int32)">
            <summary>
            Gets the name of the property at the given index.
            </summary>
            <param name="index">The index of the property to get.</param>
            <returns>The name of the property at the given index or null.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AlignContent">
            <summary>
            Gets or sets how a flex item's lines align within the flex container when there
            is extra space along the axis that is perpendicular to the axis defined by the
            flex-direction property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AlignItems">
            <summary>
            Gets or sets the alignment value (perpendicular to the layout axis
            defined by the flex-direction property) of flex items of the flex container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AlignSelf">
            <summary>
            Gets or sets the alignment value (perpendicular to the layout
            axis defined by the flex-direction property) of flex items of
            the flex container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Accelerator">
            <summary>
            Gets or sets a string that indicates whether the object represents a
            keyboard shortcut.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AlignmentBaseline">
            <summary>
            Gets or sets which baseline of this element is to be aligned
            with the corresponding baseline of the parent.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Animation">
            <summary>
            Gets or sets one or more shorthand values that define all animation
            properties (except animation-play-state) for a set of corresponding object
            properties identified in the CSS @keyframes at-rule specified by the
            animations-name property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationDelay">
            <summary>
            Gets or sets the offset within an animation cycle
            (the amount of time from the start of a cycle) before
            the animation is displayed for a set of corresponding
            object properties identified in the CSS @keyframes at-rule
            specified by the animation-name property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationDirection">
            <summary>
            Gets or sets the direction of play for an animation cycle.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationDuration">
            <summary>
            Gets or sets the length of time to complete one cycle of the animation.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationFillMode">
            <summary>
            Gets or sets whether the effects of an animation are visible before or after it plays.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationIterationCount">
            <summary>
            Gets or sets the number of times an animation cycle is played.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationName">
            <summary>
            Gets or sets one or more animation names. An animation name
            selects a CSS @keyframes at-rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationPlayState">
            <summary>
            Gets or sets whether an animation is playing or paused.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#AnimationTimingFunction">
            <summary>
            Gets or sets the intermediate property values to be used during a
            single cycle of an animation on a set of corresponding object
            properties identified in the CSS @keyframes at-rule specified by
            the animation-name property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackfaceVisibility">
            <summary>
            Gets or sets a value that specifies whether the back face
            (reverse side) of an object is visible.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Background">
            <summary>
            Gets or sets up to five separate background properties of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundAttachment">
            <summary>
            Gets or sets how the background image (or images) is attached
            to the object within the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundClip">
            <summary>
            Gets or sets the background painting area or areas relative to the
            element's bounding boxes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundColor">
            <summary>
            Gets or sets the color behind the content of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundImage">
            <summary>
            Gets or sets the background image or images of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundOrigin">
            <summary>
            Gets or sets the positioning area of an element or multiple elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundPosition">
            <summary>
            Gets or sets the position of the background of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundPositionX">
            <summary>
            Gets or sets the x-coordinate of the background-position property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundPositionY">
            <summary>
            Gets or sets the y-coordinate of the background-position property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundRepeat">
            <summary>
            Gets or sets whether and how the background image (or images) is tiled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BackgroundSize">
            <summary>
            Gets or sets the size of the background images.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BaselineShift">
            <summary>
            Gets or sets a value that indicates how the dominant baseline
            should be repositioned relative to the dominant baseline of the
            parent text content element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Behavior">
            <summary>
            Gets or sets the location of the Dynamic HTML (DHTML) behaviorDHTML Behaviors.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Border">
            <summary>
            Gets or sets the properties of a border drawn around an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderBottom">
            <summary>
            Gets or sets the properties of the bottom border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderBottomColor">
            <summary>
            Gets or sets the foreground color of the bottom border of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderBottomLeftRadius">
            <summary>
            Gets or sets the radii of the quarter ellipse that defines
            the shape of the lower-left corner for the outer border edge of the current box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderBottomRightRadius">
            <summary>
            Gets or sets one or two values that define the radii of the
            quarter ellipse that defines the shape of the lower-right corner
            for the outer border edge of the current box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderBottomStyle">
            <summary>
            Gets or sets the style of the bottom border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderBottomWidth">
            <summary>
            Gets or sets the thickness of the bottom border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderCollapse">
            <summary>
            Gets or sets whether the row and cell borders of a table are joined in a
            single border or detached as in standard HTML.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderColor">
            <summary>
            Gets or sets the border color of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderImage">
            <summary>
            Gets or sets an image to be used in place of the border styles.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderImageOutset">
            <summary>
            Gets or sets the amount by which the border image area extends beyond the border box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderImageRepeat">
            <summary>
            Gets or sets ow the image is scaled and tiled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderImageSlice">
            <summary>
            Gets or sets four inward offsets, this property slices the specified
            border image into a three by three grid: four corners, four edges, and a central region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderImageSource">
            <summary>
            Gets or sets the path of the image to be used for the border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderImageWidth">
            <summary>
            Gets or sets the inward offsets from the outer border edge.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderLeft">
            <summary>
            Gets or sets the properties of the left border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderLeftColor">
            <summary>
            Gets or sets the foreground color of the left border of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderLeftStyle">
            <summary>
            Gets or sets the style of the left border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderLeftWidth">
            <summary>
            Gets or sets the thickness of the left border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderRadius">
            <summary>
            Gets or sets the radii of a quarter ellipse that defines the shape of
            the corners for the outer border edge of the current box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderRight">
            <summary>
            Gets or sets the properties of the right border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderRightColor">
            <summary>
            Gets or sets the foreground color of the right border of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderRightStyle">
            <summary>
            Gets or sets the style of the right border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderRightWidth">
            <summary>
            Gets or sets the thickness of the right border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderSpacing">
            <summary>
            Gets or sets the distance between the borders of adjoining cells in a table.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderStyle">
            <summary>
            Gets or sets the style of the left, right, top, and bottom borders of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderTop">
            <summary>
            Gets or sets the properties of the top border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderTopColor">
            <summary>
            Gets or sets the foreground color of the top border of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderTopLeftRadius">
            <summary>
            Gets or sets  one or two values that define the radii of the quarter ellipse
            that defines the shape of the upper-left corner for the outer border edge of the current box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderTopRightRadius">
            <summary>
            Gets or sets one or two values that define the radii of the
            quarter ellipse that defines the shape of the upper-right
            corner for the outer border edge of the current box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderTopStyle">
            <summary>
            Gets or sets  the style of the top border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderTopWidth">
            <summary>
            Gets or sets the thickness of the top border of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BorderWidth">
            <summary>
            Gets or sets the thicknesses of the left, right, top, and bottom borders of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BoxShadow">
            <summary>
            Gets or sets one or more set of shadow values that attaches one or
            more drop shadows to the current box.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BoxSizing">
            <summary>
            Gets or sets the box model to use for object sizing.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BreakAfter">
            <summary>
            Gets or sets the column-break behavior that follows a content
            block in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BreakBefore">
            <summary>
            Gets or sets the column-break behavior that precedes a content
            block in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#BreakInside">
            <summary>
            Gets or sets the column-break behavior that occurs within a
            content block in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#CaptionSide">
            <summary>
            Gets or sets where the caption of a table is located.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Clear">
            <summary>
            Gets or sets whether the object allows floating objects on its left side,
            right side, or both, so that the next text displays past the floating objects.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Clip">
            <summary>
            Gets or sets which part of a positioned object is visible.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ClipBottom">
            <summary>
            Gets or sets the bottom coordinate of the object clipping region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ClipLeft">
            <summary>
            Gets or sets the left coordinate of the object clipping region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ClipPath">
            <summary>
            Gets or sets a reference to the SVG graphical object
            that will be used as the clipping path.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ClipRight">
            <summary>
            Gets or sets the right coordinate of the object clipping region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ClipRule">
            <summary>
            Gets or sets the algorithm used to determine what parts of the
            canvas are affected by the fill operation.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ClipTop">
            <summary>
            Gets or sets the top coordinate of the object clipping region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Color">
            <summary>
            Gets or sets the foreground color of the text of an object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColorInterpolationFilters">
            <summary>
            Gets or sets which color space to use for filter effects.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnCount">
            <summary>
            Gets or sets the optimal number of columns in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnFill">
            <summary>
            Gets or sets a value that indicates how the column lengths in a
            multi-column element are affected by the content flow.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnGap">
            <summary>
            Gets or sets the width of the gap between columns in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnRule">
            <summary>
            Gets or sets a shorthand value  that specifies values for the columnRuleWidth, 
            columnRuleStyle, and the columnRuleColor of a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnRuleColor">
            <summary>
            Gets or sets the color for all column rules in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnRuleStyle">
            <summary>
            Gets or sets the style for all column rules in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnRuleWidth">
            <summary>
            Gets or sets the width of all column rules in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Columns">
            <summary>
            Gets or sets a shorthand value that specifies values for the column-width
            and the column-count of a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnSpan">
            <summary>
            Gets or sets the number of columns that a content block
            spans in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ColumnWidth">
            <summary>
            Gets or sets the optimal width of the columns in a multi-column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Content">
            <summary>
            Gets or sets generated content to insert before or after an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#CounterIncrement">
            <summary>
            Gets or sets a list of counters to increment.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#CounterReset">
            <summary>
            Gets or sets a list of counters to create or reset to zero.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Float">
            <summary>
            Gets or sets a value that specifies whether a box should float
            to the left, right, or not at all.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Cursor">
            <summary>
            Gets or sets the type of cursor to display as the mouse pointer
            moves over the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Direction">
            <summary>
            Gets or sets the reading order of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Display">
            <summary>
            Gets or sets a value that indicates whether and how the object is rendered.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#DominantBaseline">
            <summary>
            Gets or sets a value that determines or redetermines a scaled-baseline table.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#EmptyCells">
            <summary>
            Determines whether to show or hide a cell without content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#EnableBackground">
            <summary>
            Allocate a shared background image all graphic elements within a container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Fill">
            <summary>
            Gets or sets a value that indicates the color to paint the
            interior of the given graphical element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FillOpacity">
            <summary>
            Gets or sets a value that specifies the opacity of the painting operation that
            is used to paint the interior of the current object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FillRule">
            <summary>
            Gets or sets a value that indicates the algorithm that is to be used to determine
            what parts of the canvas are included inside the shape.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Filter">
            <summary>
            The filter property is generally used to apply a previously
            define filter to an applicable element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Flex">
            <summary>
            Gets or sets the parameter values of a flexible length, the positive and
            negative flexibility, and the preferred size.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FlexBasis">
            <summary>
            Gets or sets the initial main size of the flex item.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FlexDirection">
            <summary>
            Gets or sets the direction of the main axis which specifies how
            the flex items are displayed in the flex container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FlexFlow">
            <summary>
            Gets or sets the shorthand property to set both the flex-direction and flex-wrap
            properties of a flex container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FlexGrow">
            <summary>
            Gets or sets the flex grow factor for the flex item.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FlexShrink">
            <summary>
            Gets or sets the flex shrink factor for the flex item.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FlexWrap">
            <summary>
            Gets or sets whether flex items wrap and the direction they
            wrap onto multiple lines or columns based on the spac
            available in the flex container. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Font">
            <summary>
            Gets or sets a combination of separate font properties of the
            object. Alternatively, sets or retrieves one or more of
            six user-preference fonts.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontFamily">
            <summary>
            Gets or sets the name of the font used for text in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontFeatureSettings">
            <summary>
            Gets or sets one or more values that specify glyph substitution and
            positioning in fonts that include OpenType layout features.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontSize">
            <summary>
            Gets or sets a value that indicates the font size used for text in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontSizeAdjust">
            <summary>
            Gets or sets a value that specifies an aspect value for an element that
            will effectively preserve the x-height of the first choice font, whether
            it is substituted or not.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontStretch">
            <summary>
            Gets or sets a value that indicates a normal, condensed,
            or expanded face of a font family.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontStyle">
            <summary>
            Gets or sets the font style of the object as italic, normal, or oblique.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontVariant">
            <summary>
            Gets or sets whether the text of the object is in small capital letters.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#FontWeight">
            <summary>
            Gets of sets the weight of the font of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#GlyphOrientationHorizontal">
            <summary>
            Gets or sets a value that alters the orientation of a sequence of characters
            relative to an inline-progression-direction of horizontal.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#GlyphOrientationVertical">
            <summary>
            Gets or sets a value that alters the orientation of a sequence
            of characters relative to an inline-progression-direction of vertical.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ImeMode">
            <summary>
            Gets or sets the state of an IME.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#JustifyContent">
            <summary>
            Gets or sets a how flex items are aligned along the main axis of the flex
            container after any flexible lengths and auto margins are resolved.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LayoutGrid">
            <summary>
            Gets or sets the composite document grid properties
            that specify the layout of text characters.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LayoutGridChar">
            <summary>
            Gets or sets the size of the character grid used for rendering
            the text content of an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LayoutGridLine">
            <summary>
            Gets or sets the gridline value used for rendering the
            text content of an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LayoutGridMode">
            <summary>
            Gets or sets whether the text layout grid uses two dimensions.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LayoutGridType">
            <summary>
            Gets or sets the type of grid used for rendering
            the text content of an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Left">
            <summary>
            Gets or sets the position of the object relative to the left edge
            of the next positioned object in the document hierarchy.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LetterSpacing">
            <summary>
            Gets or sets the amount of additional space between letters in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#LineHeight">
            <summary>
            Gets or sets the distance between lines in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ListStyle">
            <summary>
            Gets or sets up to three separate list-style properties of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ListStyleImage">
            <summary>
            Gets or sets a value that indicates which image to use as
            a list-item marker for the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ListStylePosition">
            <summary>
            Gets or sets a variable that indicates how the list-item marker
            is drawn relative to the content of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ListStyleType">
            <summary>
            Gets or sets the predefined type of the line-item marker for the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Margin">
            <summary>
            Gets or sets the width of the top, right, bottom, and left margins of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarginBottom">
            <summary>
            Gets or sets the height of the bottom margin of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarginLeft">
            <summary>
            Gets or sets the width of the left margin of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarginRight">
            <summary>
            Gets or sets the width of the right margin of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarginTop">
            <summary>
            Gets or sets the height of the top margin of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Marker">
            <summary>
            Gets or sets a value that specifies the marker symbol that is
            used for all vertices on the given path element or basic shape.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarkerEnd">
            <summary>
            Gets or sets a value that defines the arrowhead or polymarker
            that is drawn at the final vertex of a given path element or
            basic shape.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarkerMid">
            <summary>
            Gets or sets a value that defines the arrowhead or polymarker that
            is drawn at every other vertex (that is, every vertex except the
            first and last) of a given path element or basic shape.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MarkerStart">
            <summary>
            Gets or sets a value that defines the arrowhead or polymarker
            that is drawn at the first vertex of a given path element or
            basic shape.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Mask">
            <summary>
            Gets or sets a value that indicates a SVG mask.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MaxHeight">
            <summary>
            Gets or sets the maximum height for an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MaxWidth">
            <summary>
            Gets or sets the maximum width for an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MinHeight">
            <summary>
            Gets or sets the minimum height for an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#MinWidth">
            <summary>
            Gets or sets the minimum width for an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Opacity">
            <summary>
            Gets or sets a value that specifies object or group opacity in CSS or SVG.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Order">
            <summary>
            Gets or sets the order, which property specifies the order used to lay out
            flex items in their flex container. Elements are laid out by ascending order
            of the order value. Elements with the same order value are laid out in the
            order they appear in the source code.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Orphans">
            <summary>
            Gets or sets the minimum number of lines of a paragraph
            that must appear at the bottom of a page.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Outline">
            <summary>
            Gets or sets the outline frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#OutlineColor">
            <summary>
            Gets or sets the color of the outline frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#OutlineStyle">
            <summary>
            Gets or sets the style of the outline frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#OutlineWidth">
            <summary>
            Gets or sets the width of the outline frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Overflow">
            <summary>
            Gets or sets a value indicating how to manage the content of the
            object when the content exceeds the height or width of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#OverflowX">
            <summary>
            Gets or sets how to manage the content of the object when the
            content exceeds the width of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#OverflowY">
            <summary>
            Gets or sets how to manage the content of the object when
            the content exceeds the height of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Padding">
            <summary>
            Gets or sets the amount of space to insert between the object and
            its margin or, if there is a border, between the object and its border.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PaddingBottom">
            <summary>
            Gets or sets the amount of space to insert between the bottom
            border of the object and the content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PaddingLeft">
            <summary>
            Gets or sets the amount of space to insert between the left
            border of the object and the content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PaddingRight">
            <summary>
            Gets or sets the amount of space to insert between
            the right border of the object and the content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PaddingTop">
            <summary>
            Gets or sets the amount of space to insert between the top
            border of the object and the content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PageBreakAfter">
            <summary>
            Gets or sets a value indicating whether a page break occurs after the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PageBreakBefore">
            <summary>
            Gets or sets a string indicating whether a page break occurs before the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PageBreakInside">
            <summary>
            Gets or sets a string indicating whether a page break is
            allowed to occur inside the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Perspective">
            <summary>
            Gets or sets a value that represents the perspective from which all child
            elements of the object are viewed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PerspectiveOrigin">
            <summary>
            Gets or sets one or two values that represent the origin (the
            vanishing point for the 3-D space) of an object with an perspective
            property declaration.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#PointerEvents">
            <summary>
            Gets or sets a value that specifies under what circumstances a given graphics
            element can be the target element for a pointer event in SVG.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Position">
            <summary>
            Gets or sets the type of positioning used for the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Quotes">
            <summary>
            Gets or sets the pairs of strings to be used as quotes in generated content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Right">
            <summary>
            Gets or sets the position of the object relative to the right edge of
            the next positioned object in the document hierarchy.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#RubyAlign">
            <summary>
            Gets or sets a value that indicates how to align the ruby text content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#RubyOverhang">
            <summary>
            Gets or sets a value that indicates whether, and on which side, ruby
            text is allowed to partially overhang any adjacent text in addition
            to its own base, when the ruby text is wider than the ruby base
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#RubyPosition">
            <summary>
            Gets or sets a value that controls the position of the ruby text
            with respect to its base.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Scrollbar3dLightColor">
            <summary>
            Gets or sets the color of the top and left edges of the scroll
            box and scroll arrows of a scroll bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ScrollbarArrowColor">
            <summary>
            Gets or sets the color of the arrow elements of a scroll arrow.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ScrollbarDarkShadowColor">
            <summary>
            Gets or sets the color of the gutter of a scroll bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ScrollbarFaceColor">
            <summary>
            Gets or sets the color of the scroll box and scroll arrows of a scroll bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ScrollbarHighlightColor">
            <summary>
            Gets or sets the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ScrollbarShadowColor">
            <summary>
            Gets or sets the color of the bottom and right edges of the
            scroll box and scroll arrows of a scroll bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ScrollbarTrackColor">
            <summary>
            Gets or sets the color of the track element of a scroll bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Stroke">
            <summary>
            Gets or sets a value that indicates the color to paint along
            the outline of a given graphical element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeDasharray">
            <summary>
            Gets or sets one or more values that indicate the pattern of
            dashes and gaps used to stroke paths.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeDashoffset">
            <summary>
            Gets or sets a value that specifies the distance into the
            dash pattern to start the dash.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeLinecap">
            <summary>
            Gets or sets a value that specifies the shape to be used at the
            end of open subpaths when they are stroked.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeLinejoin">
            <summary>
            Gets or sets a value that specifies the shape to be used at the corners of
            paths or basic shapes when they are stroked.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeMiterlimit">
            <summary>
            Gets or sets a value that indicates the limit on the ratio of the
            length of miter joins (as specified in the StrokeLinejoin property).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeOpacity">
            <summary>
            Gets or sets a value that specifies the opacity of the painting operation
            that is used to stroke the current object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#StrokeWidth">
            <summary>
            Gets or sets a value that specifies the width of the stroke on the current object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TableLayout">
            <summary>
            Gets or sets a string that indicates whether the table layout is fixed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextAlign">
            <summary>
            Gets or sets whether the text in the object is left-aligned, right-aligned, 
            centered, or justified.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextAlignLast">
            <summary>
            Gets or sets a value that indicates how to align the last line or only
            line of text in the specified object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextAnchor">
            <summary>
            Aligns a string of text relative to the specified point.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextAutospace">
            <summary>
            Gets or sets the autospacing and narrow space width adjustment of text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextDecoration">
            <summary>
            Gets or sets a value that indicates whether the text in the object
            has blink, line-through, overline, or underline decorations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextIndent">
            <summary>
            Gets or sets the indentation of the first line of text in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextJustify">
            <summary>
            Gets or sets the type of alignment used to justify text in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextOverflow">
            <summary>
            Gets or sets a value that indicates whether to render
            ellipses (...) to indicate text overflow.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextShadow">
            <summary>
            Gets or sets a comma-separated list of shadows that attaches one or
            more drop shadows to the specified text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextTransform">
            <summary>
            Gets or sets the rendering of the text in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TextUnderlinePosition">
            <summary>
            Gets or sets the position of the underline decoration that is set through the
            text-decoration property of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Top">
            <summary>
            Gets or sets the position of the object relative to the top of
            the next positioned object in the document hierarchy.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Transform">
            <summary>
            Gets or sets a list of one or more transform functions that specify how
            to translate, rotate, or scale an element in 2-D or 3-D space.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TransformOrigin">
            <summary>
            Gets or sets one or two values that establish the origin of transformation for an element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TransformStyle">
            <summary>
            Gets or sets a value that specifies how child elements of the
            object are rendered in 3-D space.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Transition">
            <summary>
            Gets or sets one or more shorthand values that specify the transition properties
            for a set of corresponding object properties identified in the transition-property
            property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TransitionDelay">
            <summary>
            Gets or sets one or more values that specify the offset within a
            transition (the amount of time from the start of a transition) before
            the transition is displayed  for a set of corresponding object properties 
            identified in the transition property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TransitionDuration">
            <summary>
            Gets or sets one or more values that specify the durations of transitions on
            a set of corresponding object properties identified in the transition-property
            property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TransitionProperty">
            <summary>
            Gets or sets a value that identifies the CSS property name or names to which
            the transition effect (defined by the transition-duration, transition-timing-function,
            and transition-delay properties) is applied when a new property value is specified.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#TransitionTimingFunction">
            <summary>
            Gets or sets one or more values that specify the intermediate property values to be
            used during a transition on a set of corresponding object properties identified
            in the transition-property property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#UnicodeBidi">
            <summary>
            Gets or sets the level of embedding with respect to the bidirectional algorithm.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#VerticalAlign">
            <summary>
            Gets or sets the vertical alignment of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Visibility">
            <summary>
            Gets or sets whether the content of the object is displayed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#WhiteSpace">
            <summary>
            Gets or sets a value that indicates whether lines are automatically
            broken inside the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Widows">
            <summary>
            Gets or sets the minimum number of lines of a paragraph that must
            appear at the top of a document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#WordBreak">
            <summary>
            Gets or sets line-breaking behavior within words, particularly where
            multiple languages appear in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#WordSpacing">
            <summary>
            Gets or sets the amount of additional space between words in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#WordWrap">
            <summary>
            Gets or sets whether to break words when the content exceeds the
            boundaries of its container.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#WritingMode">
            <summary>
            Gets or sets the direction and flow of the content in the object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#ZIndex">
            <summary>
            Gets or sets the stacking order of positioned objects.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleDeclaration.AngleSharp#DOM#Css#ICssStyleDeclaration#Zoom">
            <summary>
            Gets or sets the magnification scale of the object.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.StringMap">
            <summary>
            Represents a list of DOMTokens.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringMap.#ctor(System.String,AngleSharp.DOM.Element)">
            <summary>
            Creates a new map of tokens.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringMap.Remove(System.String)">
            <summary>
            Removes the given property from the list of attributes.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringMap.Contains(System.String)">
            <summary>
            Checks if the specified property has been set.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>True if the property is set, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringMap.Check(System.String)">
            <summary>
            Checks if the given name follows the rules (shall not start with xml, only lowercase, no semicolon).
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The name again.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringMap.GetEnumerator">
            <summary>
            Gets an enumerator over all data- attributes.
            </summary>
            <returns>The generated enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringMap.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the common enumerator.
            </summary>
            <returns>The generated enumerator.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.StringMap.Item(System.String)">
            <summary>
            Gets or sets the value for a specified property.
            </summary>
            <param name="name">The name of the custom attribute property.</param>
            <returns>The value of the custom attribute property.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Io.FileList">
            <summary>
            Represents a container for file entries captured by the file
            upload field.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileList.GetEnumerator">
            <summary>
            Gets the enumerator to iterate over all the stored file entries.
            </summary>
            <returns>The list's enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileList.Add(AngleSharp.DOM.Io.FileEntry)">
            <summary>
            Adds another file entry to the list.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileList.Clear">
            <summary>
            Resets the list of file entries.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileList.Contains(AngleSharp.DOM.Io.FileEntry)">
            <summary>
            Checks if the given item has already been added.
            </summary>
            <param name="item">The item to look for.</param>
            <returns>True if the item is already in the list of files.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileList.CopyTo(AngleSharp.DOM.Io.FileEntry[],System.Int32)">
            <summary>
            Copies the list of files to the given array.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The start index in the array.</param>
        </member>
        <member name="M:AngleSharp.DOM.Io.FileList.Remove(AngleSharp.DOM.Io.FileEntry)">
            <summary>
            Removes the given file entry from the list.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>True if the item could be removed, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileList.Item(System.Int32)">
            <summary>
            Gets the entry at the specified position.
            </summary>
            <param name="index">The index of the entry.</param>
            <returns>The file object.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileList.Count">
            <summary>
            Gets the number of contained files.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileList.Length">
            <summary>
            Gets the number of contained files.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Io.FileList.IsReadOnly">
            <summary>
            Gets the readonly status of the files.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ContentEditableMode">
            <summary>
            An enumeration with all contenteditable modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.ContentEditableMode.False">
            <summary>
            Not contenteditable.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.ContentEditableMode.True">
            <summary>
            The element is contenteditable.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.ContentEditableMode.Inherited">
            <summary>
            Inherited from the parent element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSCharsetRule">
            <summary>
            Represents the CSS @charset rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSCharsetRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSCharsetRule.CharacterSet">
            <summary>
            Gets the encoding information set by this rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSConditionRule">
            <summary>
            Represents the abstract base class for
            CSS media and CSS supports rules.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSConditionRule.#ctor">
            <summary>
            Constructs a new CSS condition rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFontFaceRule">
            <summary>
            Represents the @font-face rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontFaceRule.#ctor">
            <summary>
            Creates a new @font-face rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFontFaceRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Family">
            <summary>
            Gets or sets the font-family.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Source">
            <summary>
            Gets or sets the source of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Style">
            <summary>
            Gets or sets the style of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Weight">
            <summary>
            Gets or sets the weight of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Stretch">
            <summary>
            Gets or sets the stretch value of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Range">
            <summary>
            Gets or sets the unicode range of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Variant">
            <summary>
            Gets or sets the variant of the font.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSFontFaceRule.AngleSharp#DOM#Css#ICssFontFaceRule#Features">
            <summary>
            Gets or sets the feature settings of the font.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSKeyframeRule">
            <summary>
            Represents a CSS @keyframe rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframeRule.#ctor">
            <summary>
            Creates a new @keyframe rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframeRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSKeyframeRule.KeyText">
            <summary>
            Gets or sets the key of the keyframe, like '10%', '75%'. 
            The from keyword maps to '0%' and the to keyword maps to '100%'.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSKeyframeRule.AngleSharp#DOM#Css#ICssKeyframeRule#Style">
            <summary>
            Gets a CSSStyleDeclaration of the CSS style associated with the key from.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSKeyframesRule">
            <summary>
            Represents an @keyframes rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframesRule.#ctor">
            <summary>
            Creates a new @keyframes rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframesRule.Add(System.String)">
            <summary>
            Inserts a new keyframe rule into the current CSSKeyframesRule.
            </summary>
            <param name="rule">A string containing a keyframe in the same format as an entry of a @keyframes at-rule.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframesRule.Remove(System.String)">
            <summary>
            Deletes a keyframe rule from the current CSSKeyframesRule. 
            </summary>
            <param name="key">The index of the keyframe to be deleted, expressed as a string resolving as a number between 0 and 1.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframesRule.Find(System.String)">
            <summary>
            Returns a keyframe rule corresponding to the given key.
            </summary>
            <param name="key">A string containing an index of the keyframe to be returned, resolving to a number between 0 and 1.</param>
            <returns>The keyframe or null.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSKeyframesRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSKeyframesRule.Name">
            <summary>
            Gets or sets the name of the animation, used by the animation-name property.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSKeyframesRule.Rules">
            <summary>
            Gets a CSSRuleList of the CSS rules in the media rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSMediaRule">
            <summary>
            Represents a CSS @media rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMediaRule.#ctor">
            <summary>
            Creates a new CSS @media rule with a new media list.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMediaRule.#ctor(AngleSharp.DOM.Collections.MediaList)">
            <summary>
            Creates a new CSS @media rule with the given media list.
            </summary>
            <param name="media">The media list.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSMediaRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMediaRule.ConditionText">
            <summary>
            Gets or sets the media condition.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSMediaRule.Media">
            <summary>
            Gets a list of media types for this rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSNamespaceRule">
            <summary>
            Represents an @namespace rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSNamespaceRule.#ctor">
            <summary>
            Creates a new @namespace rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSNamespaceRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSNamespaceRule.NamespaceUri">
            <summary>
            Gets or sets a string containing the text of the
            URI of the given namespace.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSNamespaceRule.Prefix">
            <summary>
            Gets or sets a string with the name of the prefix
            associated to this namespace. If there is no such
            prefix, returns null.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPageRule">
            <summary>
            Represents the @page rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPageRule.#ctor">
            <summary>
            Creates a new @page rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPageRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageRule.Selector">
            <summary>
            Gets the selector for matching pages.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageRule.SelectorText">
            <summary>
            Gets the parsable textual representation of the page selector for the rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageRule.AngleSharp#DOM#Css#ICssPageRule#Style">
            <summary>
            Gets the  declaration-block of this rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPageRule.Style">
            <summary>
            Gets the  declaration-block of this rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSStyleRule">
            <summary>
            Represents a CSS style rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleRule.#ctor">
            <summary>
            Creates a new CSS style rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleRule.Selector">
            <summary>
            Gets the selector for matching elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleRule.SelectorText">
            <summary>
            Gets or sets the textual representation of the selector for this rule, e.g. "h1,h2".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleRule.AngleSharp#DOM#Css#ICssStyleRule#Style">
            <summary>
            Gets the CSSStyleDeclaration object for the rule.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSSupportsRule">
            <summary>
            Represents an @supports rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSSupportsRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSSupportsRule.ConditionText">
            <summary>
            Gets or sets the text of the condition of the support rule.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSSupportsRule.IsSupported">
            <summary>
            Gets if the rule is used.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.Selectors">
            <summary>
            A list of selectors, which is the basis for CompoundSelector and SelectorGroup.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.#ctor">
            <summary>
            Creates a new selector group.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.Add(AngleSharp.DOM.Css.ISelector)">
            <summary>
            Appends a selector to the group of selectors.
            </summary>
            <param name="selector">The selector to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.Remove(AngleSharp.DOM.Css.ISelector)">
            <summary>
            Removes a selector from the group of selectors.
            </summary>
            <param name="selector">The selector to remove.</param>
            <returns>The current group.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.Clear">
            <summary>
            Clears the list of selectors.
            </summary>
            <returns>The current group of selectors.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.GetEnumerator">
            <summary>
            Gets the enumerator of selectors.
            </summary>
            <returns>The specific enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the non specified enumerator.
            </summary>
            <returns>The ocmmon enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.Selectors.ToCss">
            <summary>
            Returns a valid CSS string representing this selector.
            </summary>
            <returns>The CSS to create this selector.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.Selectors.Specifity">
            <summary>
            Gets the specifity index for this chain of selectors.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.Selectors.Text">
            <summary>
            Gets the string representation of the selector.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.Selectors.Length">
            <summary>
            Gets the number of selectors in this group.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.Selectors.Item(System.Int32)">
            <summary>
            Gets or sets a selector in this group.
            </summary>
            <param name="index">The index of the selector.</param>
            <returns>The selector at the given index.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.MatrixTransform">
            <summary>
            Represents the matrix transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.MatrixTransform.ComputeMatrix">
            <summary>
            Returns the matrix transformation.
            </summary>
            <returns>The stored matrix.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.MatrixTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.Matrix3DTransform">
            <summary>
            Represents the matrix3d transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Matrix3DTransform.ComputeMatrix">
            <summary>
            Returns the stored matrix.
            </summary>
            <returns>The current transformation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Matrix3DTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.TranslateTransform">
            <summary>
            Represents the translate transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.TranslateXTransform">
            <summary>
            Represents the translate-x transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateXTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateXTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.TranslateYTransform">
            <summary>
            Represents the translate-y transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateYTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateYTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.TranslateZTransform">
            <summary>
            Represents the translate-z transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateZTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.TranslateZTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.Translate3DTransform">
            <summary>
            Represents the translate3d transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Translate3DTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Translate3DTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.RotateTransform">
            <summary>
            Represents the rotate transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.RotateTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.RotateTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.Rotate3DTransform">
            <summary>
            Represents the rotate3d transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Rotate3DTransform.RotateX(AngleSharp.Css.Angle)">
            <summary>
            Constructs a rotate 3D transformation around the x-axis.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <returns>The rotate 3D transformation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Rotate3DTransform.RotateY(AngleSharp.Css.Angle)">
            <summary>
            Constructs a rotate 3D transformation around the y-axis.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <returns>The rotate 3D transformation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Rotate3DTransform.RotateZ(AngleSharp.Css.Angle)">
            <summary>
            Constructs a rotate 3D transformation around the z-axis.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <returns>The rotate 3D transformation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Rotate3DTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Rotate3DTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.ScaleTransform">
            <summary>
            Represents the scale transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.ScaleXTransform">
            <summary>
            Represents the scale-x transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleXTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleXTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.ScaleYTransform">
            <summary>
            Represents the scale-y transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleYTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleYTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.ScaleZTransform">
            <summary>
            Represents the scale-z transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleZTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.ScaleZTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.Scale3DTransform">
            <summary>
            Represents the scale3d transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Scale3DTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.Scale3DTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.SkewTransform">
            <summary>
            Represents the skew transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.SkewTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.SkewTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.SkewXTransform">
            <summary>
            Represents the skew-x transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.SkewXTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.SkewXTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSFunctions.SkewYTransform">
            <summary>
            Represents the skew-y transformation.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.SkewYTransform.ComputeMatrix">
            <summary>
            Computes the matrix for the given transformation.
            </summary>
            <returns>The transformation matrix representation.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSFunctions.SkewYTransform.ToCss">
            <summary>
            Returns a CSS representation of the transformation.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSPrimitiveValue">
            <summary>
            Represents a CSS primitive value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSPrimitiveValue.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSPrimitiveValue.Value">
            <summary>
            Gets the value of the primitive container.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSValueList">
            <summary>
            Represents a list of values in the CSS context.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValueList.#ctor">
            <summary>
            Creates a new CSS value list.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValueList.#ctor(AngleSharp.DOM.Css.CSSValue)">
            <summary>
            Creates a new CSS value list.
            </summary>
            <param name="item">The first item to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValueList.#ctor(System.Collections.Generic.List{AngleSharp.DOM.Css.CSSValue})">
            <summary>
            Creates a new CSS value list.
            </summary>
            <param name="items">The items to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSValueList.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSValueList.Length">
            <summary>
            Gets the number of CSSValues in the list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSValueList.Item(System.Int32)">
            <summary>
            Used to retrieve a CSSValue by ordinal index. The order in this collection represents the order of the values in the CSS style property.
            </summary>
            <param name="index">If index is greater than or equal to the number of values in the list, this returns null.</param>
            <returns>The value at the given index or null.</returns>
        </member>
        <member name="T:AngleSharp.DOM.DirectionMode">
            <summary>
            An enumeration with all dir modes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DirectionMode.Ltr">
            <summary>
            Text and other elements go from left to right.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DirectionMode.Rtl">
            <summary>
            Text and other elements go from right to left
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.Alignment">
            <summary>
            The list of possible horizontal alignments.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.Alignment.Bottom">
            <summary>
            The bottom of the object should be vertically aligned with
            the current baseline. This is the default value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.Alignment.Middle">
            <summary>
            The center of the object should be vertically aligned with
            the current baseline.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.Alignment.Top">
            <summary>
            The top of the object should be vertically aligned with the
            top of the current text line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.Alignment.Left">
            <summary>
            Float to the current left margin.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.Alignment.Right">
            <summary>
            Float to the current right margin.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.HorizontalAlignment">
            <summary>
            The list of possible horizontal alignments.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.HorizontalAlignment.Left">
            <summary>
            The inline contents are aligned to the left edge of the line box.
            This is the default value for table data.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.HorizontalAlignment.Center">
            <summary>
            The inline contents are centered within the line box. This is
            the default value for table headers.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.HorizontalAlignment.Right">
            <summary>
            The inline contents are aligned to the right edge of the line box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.HorizontalAlignment.Justify">
            <summary>
            The text is justified. Text should line up their left and right
            edges to the left and right content edges of the paragraph.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.VerticalAlignment">
            <summary>
            The list of possible vertical alignments (use in HTML).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.VerticalAlignment.Top">
            <summary>
            Cell data is flush with the top of the cell.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.VerticalAlignment.Middle">
            <summary>
            Cell data is centered vertically within the cell. This is the default value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.VerticalAlignment.Bottom">
            <summary>
            Cell data is flush with the bottom of the cell.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.VerticalAlignment.Baseline">
            <summary>
            All cells in the same row as a cell whose valign attribute has this value should
            have their textual data positioned so that the first text line occurs on a baseline
            common to all cells in the row. This constraint does not apply to subsequent text
            lines in these cells.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.VerticalAlignment">
            <summary>
            The list of possible vertical alignments (extended by CSS).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.Baseline">
            <summary>
            Aligns the baseline of the element with the baseline of its parent.
            The baseline of some replaced elements, like textarea is not specified
            by the HTML specification, meaning that their behavior with this keyword
            may change from one browser to the other.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.Sub">
            <summary>
            Aligns the baseline of the element with the subscript-baseline
            of its parent.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.Super">
            <summary>
            Aligns the baseline of the element with the superscript-baseline
            of its parent.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.TextTop">
            <summary>
            Aligns the top of the element with the top of the parent
            element's font.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.TextBottom">
            <summary>
            Aligns the bottom of the element with the bottom of the parent
            element's font.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.Middle">
            <summary>
            Aligns the middle of the element with the middle of lowercase
            letters in the parent.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.Top">
            <summary>
            Align the top of the element and its descendants with the top
            of the entire line.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.VerticalAlignment.Bottom">
            <summary>
            Align the bottom of the element and its descendants with the
            bottom of the entire line.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBigElement">
            <summary>
            The big HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBoldElement">
            <summary>
            The bold HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLCodeElement">
            <summary>
            The code HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLEmphasizeElement">
            <summary>
            The em HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLItalicElement">
            <summary>
            The i HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLNoNewlineElement">
            <summary>
            The nobr HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLSmallElement">
            <summary>
            The small HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLStrikeElement">
            <summary>
            The strike HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLStrongElement">
            <summary>
            The strong HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLStruckElement">
            <summary>
            The s HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTeletypeTextElement">
            <summary>
            The tt HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTemplateElement">
            <summary>
            Represents the template element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTemplateElement.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the template including the contents if deep is specified.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be
            cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTemplateElement.ToHtml">
            <summary>
            Returns an HTML-code representation of the node.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTemplateElement.Content">
            <summary>
            Gets the contents of this HTML template.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLUnderlineElement">
            <summary>
            The u HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLAddressElement">
            <summary>
            The address HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLRPElement">
            <summary>
            The rp HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLRTElement">
            <summary>
            The rt element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLRubyElement">
            <summary>
            The ruby HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathAnnotationXmlElement">
            <summary>
            The annotation-xml math element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathElement">
            <summary>
            Represents an element of the MathML DOM.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Mathml.MathElement.#ctor(System.String,AngleSharp.Html.NodeFlags)">
            <summary>
            Creates a new MathML element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Mathml.MathElement.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathIdentifierElement">
            <summary>
            The mi math element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathNumberElement">
            <summary>
            The mn math element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathOperatorElement">
            <summary>
            The mo math element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathStringElement">
            <summary>
            The math string element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Mathml.MathTextElement">
            <summary>
            The mtext math element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SVGCircleElement">
            <summary>
            Represents the circle element of the SVG DOM.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SVGElement">
            <summary>
            Represents an element of the SVG DOM.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Svg.SVGElement.#ctor(System.String,AngleSharp.Html.NodeFlags)">
            <summary>
            Creates a new SVG element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Svg.SVGElement.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Svg.SVGElement.Style">
            <summary>
            Gets an object representing the declarations of an element's style attributes.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SVGDescElement">
            <summary>
            Represents the desc element of the SVG DOM.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SVGForeignObjectElement">
            <summary>
            Represents the foreign object element of the SVG DOM.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SVGSVGElement">
            <summary>
            Represents the svg element of the SVG DOM.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Svg.SVGTitleElement">
            <summary>
            Represents the title element of the SVG DOM.
            </summary>
        </member>
        <member name="T:AngleSharp.Network.HttpMethod">
            <summary>
            Represents the usable methods for transmitting HTTP forms.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HttpMethod.Get">
            <summary>
            The GET method.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HttpMethod.Post">
            <summary>
            The POST method.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HttpMethod.Put">
            <summary>
            The PUT method.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.HttpMethod.Delete">
            <summary>
            The DELETE method.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFormControlElement">
            <summary>
            Represents the base class for all HTML form control elements.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElement.CheckValidity">
            <summary>
            Checks the validity of the current element.
            </summary>
            <returns>True.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validation error. If this is not the empty string,
            then the element is suffering from a custom validation error.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElement.ConstructDataSet(AngleSharp.DOM.Html.FormDataSet,AngleSharp.DOM.Html.HTMLElement)">
            <summary>
            Constucts the data set (called from a form).
            </summary>
            <param name="dataSet">The dataset to construct.</param>
            <param name="submitter">The given submitter.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElement.Reset">
            <summary>
            Resets the form control to its initial value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElement.Check(AngleSharp.DOM.Html.IValidityState)">
            <summary>
            Checks the form control for validity.
            </summary>
            <param name="state">The element's validity state tracker.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.Name">
            <summary>
            Gets or sets the value of the name attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.IsDisabled">
            <summary>
            Gets or sets if the element is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.Autofocus">
            <summary>
            Gets or sets the autofocus HTML attribute, which indicates whether the
            control should have input focus when the page loads.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.SupportsLabels">
            <summary>
            Gets if labels are supported.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.ValidationMessage">
            <summary>
            Gets the current validation message.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.WillValidate">
            <summary>
            Gets a value if the current element validates.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElement.Validity">
            <summary>
            Gets the current validation state of the current element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFormControlElementWithState">
            <summary>
            Represents the base class for all HTML form controls that contain a state.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElementWithState.SaveControlState">
            <summary>
            Saves the current control's state.
            </summary>
            <returns>The current state.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormControlElementWithState.RestoreFormControlState(AngleSharp.DOM.FormControlState)">
            <summary>
            Resets the form control state to the given state.
            </summary>
            <param name="state">The desired state.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElementWithState.CanContainRangeEndpoint">
            <summary>
            Gets the status if the element can contain a range endpoint.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormControlElementWithState.ShouldSaveAndRestoreFormControlState">
            <summary>
            Gets the status if the element should save and restore the control state.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLOutputElement">
            <summary>
            Represents an HTML output element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLOutputElement.Reset">
            <summary>
            Resets the form control to its initial value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOutputElement.DefaultValue">
            <summary>
            Gets or sets the default value of the element, initially the empty string.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOutputElement.Value">
            <summary>
            Gets or sets the value of the contents of the elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOutputElement.HtmlFor">
            <summary>
            Gets the IDs of the labeled control. Reflects the for attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOutputElement.Type">
            <summary>
            Gets the type of input control (output).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTextFormControlElement">
            <summary>
            Represents the base class for all HTML text form controls.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTextFormControlElement.Select(System.Int32,System.Int32,System.String)">
            <summary>
            Selects a range of text, and sets selectionStart and selectionEnd.
            If either argument is greater than the length of the value, it is treated
            as pointing to the end of the value. If end is less than start, then
            both are treated as the value of end.
            </summary>
            <param name="selectionStart">The start of the selection.</param>
            <param name="selectionEnd">The end of the selection.</param>
            <param name="selectionDirection">Optional: The direction of the selection.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectAll">
            <summary>
            Selects the contents of the control.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTextFormControlElement.Reset">
            <summary>
            Resets the form control to its initial value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.DirectionName">
            <summary>
            Gets or sets the dirname HTML attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.MaxLength">
            <summary>
            Gets or sets the maxlength HTML attribute, indicating
            the maximum number of characters the user can enter.
            This constraint is evaluated only when the value changes.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.DefaultValue">
            <summary>
            Gets or sets the default value of the input field.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.Value">
            <summary>
            Gets or sets the current value in the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.Placeholder">
            <summary>
            Gets or sets the placeholder HTML attribute, containing a hint to
            the user about what to enter in the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.IsRequired">
            <summary>
            Gets or sets if the field is required.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.IsReadOnly">
            <summary>
            Gets or sets if the textarea field is read-only.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionStart">
            <summary>
            Gets or sets the index of the beginning of selected text.
            If no text is selected, contains the index of the character
            that follows the input cursor. On being set, the control behaves
            as if setSelectionRange() had been called with this as the first
            argument, and selectionEnd as the second argument.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionEnd">
            <summary>
            Gets or sets the index of the end of selected text. If no text
            is selected, contains the index of the character that follows
            the input cursor. On being set, the control behaves as if
            setSelectionRange() had been called with this as the second
            argument, and selectionStart as the first argument.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionDirection">
            <summary>
            Gets the direction in which selection occurred. This
            is "forward" if selection was performed in the start-to-end
            direction of the current locale, or "backward" for the opposite
            direction.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionType">
            <summary>
            An enumeration with possible selection directions.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionType.None">
            <summary>
            The text selection direction is unknown.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionType.Forward">
            <summary>
            The text is selected in forward direction.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTextFormControlElement.SelectionType.Backward">
            <summary>
            The text is selected in backward direction.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFrameElementBase">
            <summary>
            Represents the base class for frame elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFrameOwnerElement">
            <summary>
            Represents the base class for frame owned elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameOwnerElement.CanContainRangeEndpoint">
            <summary>
            Gets the status if the element can contain a range endpoint.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameOwnerElement.DisplayWidth">
            <summary>
            Gets the width of the frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameOwnerElement.DisplayHeight">
            <summary>
            Gets the height of the frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameOwnerElement.MarginWidth">
            <summary>
            Gets or sets the frame margin width, in pixels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameOwnerElement.MarginHeight">
            <summary>
            Gets or sets the frame margin height, in pixels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElementBase.Name">
            <summary>
            Gets or sets the name of the frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElementBase.Source">
            <summary>
            Gets or sets the frame source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElementBase.Scrolling">
            <summary>
            Gets or sets whether or not the frame should have scrollbars.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElementBase.ContentDocument">
            <summary>
            Gets the document this frame contains, if there is any and it is available, or null otherwise.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElementBase.LongDesc">
            <summary>
            Gets or sets the URL designating a long description of this image or frame.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElementBase.FrameBorder">
            <summary>
            Gets or sets the request frame borders.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLCanvasElement">
            <summary>
            Represents the HTML canvas element.
            See: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
            Alternative: http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-canvas-element
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLCanvasElement.#ctor">
            <summary>
            Creates a new HTML canvas element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLCanvasElement.GetContext(System.String)">
            <summary>
            Gets the drawing context.
            </summary>
            <param name="contextId">A context id like 2d.</param>
            <returns>An object that defines the drawing context.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLCanvasElement.IsSupportingContext(System.String)">
            <summary>
            Gets an indicator if a context with the given parameters could be created.
            </summary>
            <param name="contextId">A context id like 2d.</param>
            <returns>True if the context is supported, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLCanvasElement.SetContext(AngleSharp.DOM.Media.IRenderingContext)">
            <summary>
            Changes the context the element is related to the given one.
            </summary>
            <param name="context">The new context.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLCanvasElement.ToDataUrl(System.String)">
            <summary>
            Returns a Data URI with the bitmap data of the context.
            </summary>
            <param name="type">The type of image e.g image/png.</param>
            <returns>A data URI with the data if any.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLCanvasElement.ToBlob(System.Action{System.IO.Stream},System.String)">
            <summary>
            Creates a BLOB out of the canvas pixel data and passes it
            to the given callback.
            </summary>
            <param name="callback">The callback function.</param>
            <param name="type">The type of object to create.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLCanvasElement.Width">
            <summary>
            Gets or sets the displayed width of the canvas element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLCanvasElement.Height">
            <summary>
            Gets or sets the displayed height of the canvas element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLDataListElement">
            <summary>
            Represents the HTML datalist element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLDataListElement.#ctor">
            <summary>
            Creates a new datalist element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLDataListElement.Options">
            <summary>
            Gets a collection whose filter matches option elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMediaElement`1">
            <summary>
            Represents the abstract base for HTML media (audio / video) elements.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMediaElement`1._network">
            <summary>
            The state of the network.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMediaElement`1._resourceTask">
            <summary>
            The task that loads the resource.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMediaElement`1.Load">
            <summary>
            Loads the media specified for this element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMediaElement`1.Play">
            <summary>
            Tries to play the media for this element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMediaElement`1.Pause">
            <summary>
            Pauses the playback of the media for this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.Source">
            <summary>
            Gets or sets the media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.CrossOrigin">
            <summary>
            Gets or sets the cross-origin attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.Preload">
            <summary>
            Gets or sets the preload attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.NetworkState">
            <summary>
            Gets the current network state.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.ReadyState">
            <summary>
            Gets the current ready state.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.IsSeeking">
            <summary>
            Gets if seeking is currently active.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.CurrentSource">
            <summary>
            Gets the current media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.Duration">
            <summary>
            Gets the time in seconds.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMediaElement`1.CurrentTime">
            <summary>
            Gets or sets the current time in seconds.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMenuItemElement">
            <summary>
            Represents the HTML menuitem element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMenuItemElement.#ctor">
            <summary>
            Creates a new HTML menuitem element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.IsVisited">
            <summary>
            Gets or sets if the link has been visited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.IsActive">
            <summary>
            Gets or sets if the link is currently active.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.Command">
            <summary>
            Gets the assigned master command, if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.Type">
            <summary>
            Gets or sets the type of command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.Label">
            <summary>
            Gets or sets the user-visible label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.Icon">
            <summary>
            Gets or sets the icon for the command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.IsDisabled">
            <summary>
            Gets or sets if the menuitem element is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.IsChecked">
            <summary>
            Gets or sets if the menuitem element is checked or not.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.IsDefault">
            <summary>
            Gets or sets if the menuitem element is the default command.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuItemElement.RadioGroup">
            <summary>
            Gets or sets the name of group of commands to
            treat as a radio button group.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMenuItemElement.ItemType">
            <summary>
            An enumeration of possible type states for a menuitem.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMenuItemElement.ItemType.Command">
            <summary>
            The command state.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMenuItemElement.ItemType.Checkbox">
            <summary>
            The checkbox state.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMenuItemElement.ItemType.Radio">
            <summary>
            The radio state.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLProgressElement">
            <summary>
            Represents the HTML progress element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLProgressElement.#ctor">
            <summary>
            Creates a new HTML progress element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLProgressElement.SupportsLabels">
            <summary>
            Gets if labels are supported.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLProgressElement.Labels">
            <summary>
            Gets the list of assigned labels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLProgressElement.IsDeterminate">
            <summary>
            Gets if the progress bar is determinate. Otherwise it is considered
            to be an indeterminate progress bar.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLProgressElement.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLProgressElement.Max">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLProgressElement.Position">
            <summary>
            Gets the position.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLWbrElement">
            <summary>
            Represents the HTML wbr (word-break-opportunity) element.
            This element is used to indicate that the position is a good
            point for inserting a possible line-break.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLWbrElement.#ctor">
            <summary>
            Creates a new HTML wbr element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.ValidityState">
            <summary>
            A class for representing the current validity state.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.ValidityState.#ctor">
            <summary>
            Creates a new ValidityState instance.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsValueMissing">
            <summary>
            Gets if a required value is missing.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsTypeMismatch">
            <summary>
            Gets if the given type is wrong.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsPatternMismatch">
            <summary>
            Gets if the input does not match a given pattern.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsTooLong">
            <summary>
            Gets if the input is too long.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsRangeUnderflow">
            <summary>
            Gets if the range is too small.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsRangeOverflow">
            <summary>
            Gets if the range is too big.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsStepMismatch">
            <summary>
            Gets if the new value is invalid.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsCustomError">
            <summary>
            Gets if validation failed due to a custom error.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.ValidityState.IsValid">
            <summary>
            Gets if the value is valid.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.FormControlState">
            <summary>
            Class to store the state of a form control.
            </summary>
        </member>
        <member name="T:AngleSharp.Attributes.DomNameAttribute">
            <summary>
            This attribute decorates official DOM objects as specified by the W3C. You could
            use it to detect all DOM types or get the correct spelling (PascalCase to camelCase).
            Multiple usages are allowed and should be checked.
            </summary>
        </member>
        <member name="P:AngleSharp.Attributes.DomNameAttribute.OfficialName">
            <summary>
            Gets the official name of the given class, method or property.
            </summary>
        </member>
        <member name="T:AngleSharp.Css.Colors">
            <summary>
            This class contains information about colors like their
            given names or assignments of names to colors.
            Most names are derived from
            http://en.wikipedia.org/wiki/X11_color_names
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Colors.FromName(System.String)">
            <summary>
            Gets a color from the specified name.
            </summary>
            <param name="name">The name of the color</param>
            <returns>The color or transparent if no color was found.</returns>
        </member>
        <member name="M:AngleSharp.Css.Colors.GetNameFromColor(AngleSharp.Css.Color)">
            <summary>
            Gets the name of the given color.
            </summary>
            <param name="color">The color that searches its name.</param>
            <returns>The name of the given color or null.</returns>
        </member>
        <member name="T:AngleSharp.Css.Colors.InvertColor">
            <summary>
            To ensure the outline is visible, performs a color inversion of the
            background. This makes the focus border more salient, regardless of
            the color in the background.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssCombinator">
            <summary>
            An enumeration with possible CSS combinator values.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssCombinator.Child">
            <summary>
            The child operator (>).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssCombinator.Descendent">
            <summary>
            The descendent operator (space).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssCombinator.AdjacentSibling">
            <summary>
            The adjacent sibling combinator +.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssCombinator.Sibling">
            <summary>
            The sibling combinator ~.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Events.EventPhase">
            <summary>
            Represents the different phases of an event.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.EventPhase.None">
            <summary>
            Events not currently dispatched are in this phase.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.EventPhase.Capturing">
            <summary>
            When an event is dispatched to an object that
            participates in a tree it will be in this phase
            before it reaches its target attribute value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.EventPhase.AtTarget">
            <summary>
            When an event is dispatched it will be in this
            phase on its target attribute value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Events.EventPhase.Bubbling">
            <summary>
            When an event is dispatched to an object that
            participates in a tree it will be in this phase
            after it reaches its target attribute value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.RangePosition">
            <summary>
            An enumeration of possible values for position comparisons in a range object.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangePosition.Before">
            <summary>
            The position of the given point to the other point is before.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangePosition.Equal">
            <summary>
            The position of the given point to the other point is equal.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangePosition.After">
            <summary>
            The position of the given point to the other point is after.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.RangeType">
            <summary>
            An enumeration with possible values on how to compare boundary points.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangeType.StartToStart">
            <summary>
            From the start to the start (periodic).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangeType.StartToEnd">
            <summary>
            From the start to the end (non-periodic).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangeType.EndToEnd">
            <summary>
            From the end to the end (periodic).
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.RangeType.EndToStart">
            <summary>
            From the end to the start (non-periodic).
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.ConfigurationExtensions">
            <summary>
            Represents a helper to construct objects with externally
            defined classes and libraries.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.DefaultEncoding(AngleSharp.IConfiguration)">
            <summary>
            Gets the default encoding for the given configuration.
            </summary>
            <param name="configuration">The configuration to use for getting the default encoding.</param>
            <returns>The current encoding.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetLanguage(AngleSharp.IConfiguration)">
            <summary>
            Gets the provided current language.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <returns>The language string, e.g. en-US.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetService``1(AngleSharp.IConfiguration)">
            <summary>
            Gets a service with a specific type from the configuration, if it has been registered.
            </summary>
            <typeparam name="TService">The type of the service to get.</typeparam>
            <param name="configuration">The configuration instance to use.</param>
            <returns>The service, if any.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetServices``1(AngleSharp.IConfiguration)">
            <summary>
            Gets services with a specific type from the configuration, if it has been registered.
            </summary>
            <typeparam name="TService">The type of the service to get.</typeparam>
            <param name="configuration">The configuration instance to use.</param>
            <returns>An enumerable over all services.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetCookie(AngleSharp.IConfiguration,System.String)">
            <summary>
            Gets the cookie for the provided address.
            </summary>
            <param name="options">The configuration to use.</param>
            <param name="origin">The origin of the cookie.</param>
            <returns>The value of the cookie.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.SetCookie(AngleSharp.IConfiguration,System.String,System.String)">
            <summary>
            Sets the cookie for the provided address.
            </summary>
            <param name="options">The configuration to use.</param>
            <param name="origin">The origin of the cookie.</param>
            <param name="value">The value of the cookie.</param>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetRequester(AngleSharp.IConfiguration,System.String)">
            <summary>
            Tries to get a requester for the given scheme.
            </summary>
            <param name="options">The configuration to use.</param>
            <param name="protocol">The scheme to find a requester for.</param>
            <returns>A requester for the scheme or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.LoadResource``1(AngleSharp.IConfiguration,AngleSharp.Url)">
            <summary>
            Tries to load an image if a proper image service can be found.
            </summary>
            <param name="options">The configuration to use.</param>
            <param name="url">The address of the image.</param>
            <returns>A task that will end with an image info or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.LoadResource``1(AngleSharp.IConfiguration,AngleSharp.Url,System.Threading.CancellationToken)">
            <summary>
            Tries to load an image if a proper image service can be found.
            </summary>
            <param name="options">The configuration to use.</param>
            <param name="url">The address of the image.</param>
            <param name="cancel">Token to trigger in case of cancellation.</param>
            <returns>A task that will end with an image info or null.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetStyleEngine(AngleSharp.IConfiguration,System.String)">
            <summary>
            Tries to resolve a style engine for the given type name.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <param name="type">The mime-type of the source code.</param>
            <returns>The style engine or null, if the type if unknown.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.ParseStyling(AngleSharp.IConfiguration,System.String,AngleSharp.Infrastructure.StyleOptions,System.String)">
            <summary>
            Parses the given source code by using the supplied type name (otherwise it is text/css) and
            returns the created stylesheet.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <param name="source">The source code describing the style sheet.</param>
            <param name="options">The options with the parameters for evaluating the style.</param>
            <param name="type">The optional mime-type of the source code.</param>
            <returns>A freshly created stylesheet, if any.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.ParseStyling(AngleSharp.IConfiguration,AngleSharp.Network.IResponse,AngleSharp.Infrastructure.StyleOptions,System.String)">
            <summary>
            Parses the given source code by using the supplied type name (otherwise it is text/css) and
            returns the created stylesheet.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <param name="response">The response with the stream representing the source of the stylesheet.</param>
            <param name="options">The options with the parameters for evaluating the style.</param>
            <param name="type">The optional mime-type of the source code.</param>
            <returns>A freshly created stylesheet, if any.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.GetScriptEngine(AngleSharp.IConfiguration,System.String)">
            <summary>
            Tries to resolve a script engine for the given type name.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <param name="type">The mime-type of the source code.</param>
            <returns>The script engine or null, if the type if unknown.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.RunScript(AngleSharp.IConfiguration,System.String,AngleSharp.Infrastructure.ScriptOptions,System.String)">
            <summary>
            Parses the given source code by using the supplied type name (otherwise it is text/css) and
            returns the created stylesheet.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <param name="source">The source code of the style sheet.</param>
            <param name="options">The options for running the script.</param>
            <param name="type">The optional mime-type of the source code.</param>
        </member>
        <member name="M:AngleSharp.Extensions.ConfigurationExtensions.RunScript(AngleSharp.IConfiguration,AngleSharp.Network.IResponse,AngleSharp.Infrastructure.ScriptOptions,System.String)">
            <summary>
            Parses the given source code by using the supplied type name (otherwise it is text/css) and
            returns the created stylesheet.
            </summary>
            <param name="configuration">The configuration to use.</param>
            <param name="response">The response with the stream representing the source of the script.</param>
            <param name="options">The options for running the script.</param>
            <param name="type">The optional mime-type of the source code.</param>
        </member>
        <member name="T:AngleSharp.Network.MimeTypes">
            <summary>
            Contains a list of common mime-types.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.MimeTypes.FromExtension(System.String)">
            <summary>
            Gets the mime type from a file extension .ext.
            </summary>
            <param name="extension">The extension (starting with a dot).</param>
            <returns>The mime-type of the given extension.</returns>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.Html">
            <summary>
            Gets the mime-type for HTML text: text/html.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.Plain">
            <summary>
            Gets the mime-type for the text data, text/plain.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.Xml">
            <summary>
            Gets the mime-type for XML text: text/xml.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.Css">
            <summary>
            Gets the mime-type for a cascading style sheet: text/css.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.DefaultJavaScript">
            <summary>
            Gets the default mime-type for JavaScript scripts: text/javascript.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.ApplicationXml">
            <summary>
            Gets the mime-type for XML applications, application/xml.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.ApplicationXHtml">
            <summary>
            Gets the mime-type for XHTML / XML: application/xhtml+xml.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.Binary">
            <summary>
            Gets the mime-type for binary data, application/octet-stream.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.StandardForm">
            <summary>
            Gets the mime-type for form data, application/x-www-form-urlencoded.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.MultipartForm">
            <summary>
            Gets the mime-type for multipart form data, multipart/form-data.
            </summary>
        </member>
        <member name="F:AngleSharp.Network.MimeTypes.JavaScript">
            <summary>
            Gets a list of mime-types that are recognized as JavaScript.
            </summary>
        </member>
        <member name="M:AngleSharp.Network.MimeTypes.IsJavaScript(System.String)">
            <summary>
            Checks if the given mime-type is one of the JavaScript variants.
            </summary>
            <param name="type">The type to check for.</param>
            <returns>True if it is a JavaScript mime-type, otherwise false.</returns>
        </member>
        <member name="T:AngleSharp.DOM.MutationCallback">
            <summary>
            Defines the callback signature for a mutation event.
            </summary>
            <param name="mutations">The sequence of mutations.</param>
            <param name="observer">The observer.</param>
        </member>
        <member name="T:AngleSharp.DOM.MutationObserverInit">
            <summary>
            More information available at:
            https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#MutationObserverInit
            </summary>
        </member>
        <member name="T:AngleSharp.Html.Namespaces">
            <summary>
            Contains a list of common namespaces.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.HtmlUri">
            <summary>
            Gets the namespace for HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.XmlNsUri">
            <summary>
            Gets the namespace for XMLNS elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.XLinkUri">
            <summary>
            Gets the namespace for XMLNS elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.XmlUri">
            <summary>
            Gets the namespace for XML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.SvgUri">
            <summary>
            Gets the namespace for SVG elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.MathMlUri">
            <summary>
            Gets the namespace for MathML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.HtmlPrefix">
            <summary>
            Gets the prefix for HTML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.XmlNsPrefix">
            <summary>
            Gets the prefix for XMLNS elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.XLinkPrefix">
            <summary>
            Gets the prefix for XMLNS elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.XmlPrefix">
            <summary>
            Gets the prefix for XML elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.SvgPrefix">
            <summary>
            Gets the prefix for SVG elements.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Namespaces.MathMlPrefix">
            <summary>
            Gets the prefix for MathML elements.
            </summary>
        </member>
        <member name="M:AngleSharp.Html.Namespaces.DeclarationFor(System.String)">
            <summary>
            Gets the declaration for the given prefix.
            </summary>
            <param name="prefix">The prefix or null for the default namespace.</param>
            <returns>The name for the declaration attribute.</returns>
        </member>
        <member name="M:AngleSharp.Html.Namespaces.LookupNamespaceUri(System.String)">
            <summary>
            Gets the namespace URI for the given prefix.
            </summary>
            <param name="prefix">The prefix to look for.</param>
            <returns>The namespace URI if any, otherwise NULL.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.ComplexSelector">
            <summary>
            Represents a complex selector.
            One or more compound selectors separated by combinators.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ComplexSelector.#ctor">
            <summary>
            Creates a new complex selector.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ComplexSelector.Match(AngleSharp.DOM.IElement)">
            <summary>
            Determines if the given object is matched by this selector.
            </summary>
            <param name="element">The element to be matched.</param>
            <returns>True if the selector matches the given element, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ComplexSelector.ConcludeSelector(AngleSharp.DOM.Css.ISelector)">
            <summary>
            Appends the LAST selector to the complex of selectors.
            </summary>
            <param name="selector">The (final) selector to append.</param>
            <returns>The current complex selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ComplexSelector.AppendSelector(AngleSharp.DOM.Css.ISelector,AngleSharp.Parser.Css.CssCombinator)">
            <summary>
            Appends a selector to the complex of selectors.
            </summary>
            <param name="selector">The selector to append.</param>
            <param name="combinator">The combinator to use.</param>
            <returns>The current complex selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ComplexSelector.ClearSelectors">
            <summary>
            Clears the list of selectors.
            </summary>
            <returns>The current complex selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ComplexSelector.ToCss">
            <summary>
            Returns a valid CSS string representing this selector.
            </summary>
            <returns>The CSS to create this selector.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ComplexSelector.Specifity">
            <summary>
            Gets the specifity index for this chain of selectors.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ComplexSelector.Text">
            <summary>
            Gets the string representation of the selector.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ComplexSelector.Length">
            <summary>
            Gets the number of selectors in this group.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.ComplexSelector.IsReady">
            <summary>
            Gets if the selector has already been finalized.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CompoundSelector">
            <summary>
            Represents a compound selector.
            Chain of simple selectors which are not separated by
            a combinator.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CompoundSelector.#ctor">
            <summary>
            Creates a new compound selector.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CompoundSelector.Create(AngleSharp.DOM.Css.SimpleSelector[])">
            <summary>
            Creates a new compound selector with the given selectors.
            </summary>
            <param name="selectors">The selectors.</param>
            <returns>The new compound selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CompoundSelector.Match(AngleSharp.DOM.IElement)">
            <summary>
            Determines if the given object is matched by this selector.
            </summary>
            <param name="element">The element to be matched.</param>
            <returns>True if the selector matches the given element, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CompoundSelector.ToCss">
            <summary>
            Returns a valid CSS string representing this selector.
            </summary>
            <returns>The CSS to create this selector.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssParser">
            <summary>
            The CSS parser.
            See http://dev.w3.org/csswg/css-syntax/#parsing for more details.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.#ctor(System.String,AngleSharp.IConfiguration)">
            <summary>
            Creates a new CSS parser instance with a new stylesheet
            based on the given source.
            </summary>
            <param name="source">The source code as a string.</param>
            <param name="configuration">[Optional] The configuration to use.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.#ctor(System.IO.Stream,AngleSharp.IConfiguration)">
            <summary>
            Creates a new CSS parser instance with an new stylesheet
            based on the given stream.
            </summary>
            <param name="stream">The stream to use as source.</param>
            <param name="configuration">[Optional] The configuration to use.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.#ctor(AngleSharp.DOM.Css.CSSStyleSheet)">
            <summary>
            Creates a new CSS parser instance parser with the specified stylesheet
            based on the given source manager.
            </summary>
            <param name="stylesheet">The stylesheet to be constructed.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseAsync">
            <summary>
            Parses the given source asynchronously and creates the stylesheet.
            </summary>
            <returns>The task which could be awaited or continued differently.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseAsync(System.Threading.CancellationToken)">
            <summary>
            Parses the given source asynchronously and creates the stylesheet.
            </summary>
            <param name="cancelToken">The cancellation token to use.</param>
            <returns>The task which could be awaited or continued differently.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.Parse">
            <summary>
            Parses the given source code.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateMediaRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a medialist has been created.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The created media rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreatePageRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a page selector has been found.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The created page rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateFontFaceRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before the body of the font-face rule.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The created font-face rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateSupportsRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a supports condition has been found.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The created supports rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateDocumentRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a document function has been found.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated document rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateKeyframesRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a keyframes identifier has been found.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated keyframes rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateNamespaceRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a prefix has been found for the namespace rule.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated namespace rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateCharsetRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Before a charset string has been found.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateImportRule(AngleSharp.Parser.Css.CssParser,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Before an URL has been found for the import rule.
            </summary>
            <param name="parser">The parser to create the rule.</param>
            <param name="tokens">The stream of tokens.</param>
            <returns>The created rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateRule(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Creates a rule with the enumeration of tokens.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated CSS rule.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.Condition(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            In the condition text of a supports rule.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The condition text.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InSelector(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            State that is called once we are in a CSS selector.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated selector.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.Declaration(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken},AngleSharp.DOM.Css.CSSStyleDeclaration)">
            <summary>
            Called before the property name has been detected.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <param name="style">The style to populate.</param>
            <returns>The created property.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.IsImportant(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            In the important part of a declaration.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>True if the declaration is important, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InDocumentFunctions(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called when the document functions have to been found.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The iteration over all found document functions.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InDocumentFunction(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before a document function has been found.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>A single document function or null if none has been found.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InKeyframesName(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Before the name of an @keyframes rule has been detected.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The name of the keyframes.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.CreateKeyframeRule(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Before the curly bracket of an @keyframes rule has been seen.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated keyframe data.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InKeyframeText(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called in the text for a frame in the @keyframes rule.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The text of the keyframe.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InMediaList(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Before any medium has been found for the @media or @import rule.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated medialist.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InMediaValue(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Scans the current medium for the @media or @import rule.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The medium.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.InValue(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called before any token in the value regime had been seen.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The computed value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.GetValueFunction(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Gathers a value from a CSS function.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The computed function.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.GetColorFromHexValue(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Called if a # sign has been found.
            </summary>
            <param name="tokens">The stream of tokens.</param>
            <returns>The generated value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.GetColorFromHexValue(System.String)">
            <summary>
            Called in a value - a hash (probably hex) value has been found.
            </summary>
            <param name="hexColor">The value of the token.</param>
            <returns>The generated value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.Kernel">
            <summary>
            The kernel that is pulling the tokens into the parser.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.KernelAsync(System.Threading.CancellationToken)">
            <summary>
            The kernel that is pulling the tokens into the parser.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.FillRules(AngleSharp.DOM.Css.CSSGroupingRule,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Fills the given parent rule with rules given by the tokens.
            </summary>
            <param name="parentRule">The parent rule to fill.</param>
            <param name="tokens">The stream of tokens.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.FillRules(AngleSharp.DOM.Css.CSSKeyframesRule,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Fills the given keyframe rule with rules given by the tokens.
            </summary>
            <param name="parentRule">The parent rule to fill.</param>
            <param name="tokens">The stream of tokens.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.FillDeclarations(AngleSharp.DOM.Css.CSSStyleDeclaration,System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            Fills the given parent style with declarations given by the tokens.
            </summary>
            <param name="style">The style to declare.</param>
            <param name="tokens">The stream of tokens.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.SkipUnknownRule(System.Collections.Generic.IEnumerator{AngleSharp.Parser.Css.CssToken})">
            <summary>
            State that is called once in the head of an unknown @ rule.
            </summary>
            <param name="tokens">The stream of tokens.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ToUnit(AngleSharp.Parser.Css.CssUnitToken)">
            <summary>
            Converts the given unit to a value. Uses number for 0.
            </summary>
            <param name="token">The token to consider.</param>
            <returns>The created value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ToIdentifier(System.String)">
            <summary>
            Converts the given identifier to a value. Uses inherit for inherit.
            </summary>
            <param name="identifier">The identifier to consider.</param>
            <returns>The created value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ToNumber(AngleSharp.Parser.Css.CssNumberToken)">
            <summary>
            Converts the given number to a value. Uses an allocated value for the 0.
            </summary>
            <param name="token">The token to consider.</param>
            <returns>The created value.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseSelector(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a selector object.
            </summary>
            <param name="selector">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The Selector object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseStyleSheet(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a CSS stylesheet.
            </summary>
            <param name="stylesheet">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSStyleSheet object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseRule(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a CSS rule.
            </summary>
            <param name="rule">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSRule object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseDeclarations(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into CSS declarations.
            </summary>
            <param name="declarations">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseDeclaration(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a CSS declaration (CSS property).
            </summary>
            <param name="declaration">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSProperty object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseValue(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a CSS value.
            </summary>
            <param name="source">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSValue object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseMediaList(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a stream of CSS mediums.
            </summary>
            <param name="source">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The stream of medias.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseValueList(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a list of CSS values.
            </summary>
            <param name="source">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSValueList object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseMultipleValues(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a comma separated string and transforms it into a list of CSS values.
            </summary>
            <param name="source">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSValueList object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.ParseKeyframeRule(System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and transforms it into a CSS keyframe rule.
            </summary>
            <param name="rule">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
            <returns>The CSSKeyframeRule object.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.AppendDeclarations(AngleSharp.DOM.Css.CSSStyleDeclaration,System.String,AngleSharp.IConfiguration)">
            <summary>
            Takes a string and appends all rules to the given list of properties.
            </summary>
            <param name="list">The list of css properties to append to.</param>
            <param name="declarations">The string to parse.</param>
            <param name="configuration">Optional: The configuration to use for construction.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssParser.RaiseErrorOccurred(AngleSharp.ErrorCode)">
            <summary>
            Fires an error occurred event.
            </summary>
            <param name="code">The associated error code.</param>
        </member>
        <member name="E:AngleSharp.Parser.Css.CssParser.ParseError">
            <summary>
            The event will be fired once an error has been detected.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssParser.IsAsync">
            <summary>
            Gets if the parser has been started asynchronously.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssParser.Result">
            <summary>
            Gets the resulting stylesheet of the parsing.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSRuleList">
            <summary>
            Represents an array like structure containing CSS rules.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRuleList.#ctor">
            <summary>
            Creates a new list of CSS rules.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRuleList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRuleList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSRuleList.ToCss">
            <summary>
            Returns a CSS code representation of the rulelist.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSRuleList.Length">
            <summary>
            Gets the number of rules stored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSRuleList.AngleSharp#DOM#Css#ICssRuleList#Item(System.Int32)">
            <summary>
            Gets the CSS rule at the specified index.
            </summary>
            <param name="index">The index of the rule.</param>
            <returns>The CSS rule or null, if the index has been invalid.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSImportRule">
            <summary>
            Represents a CSS import rule.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSImportRule.#ctor">
            <summary>
            Creates a new CSS import rule
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSImportRule.ToCss">
            <summary>
            Returns a CSS code representation of the rule.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSImportRule.Href">
            <summary>
            Gets the location of the style sheet to be imported. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSImportRule.AngleSharp#DOM#Css#ICssImportRule#Media">
            <summary>
            Gets a list of media types for which this style sheet may be used.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSImportRule.Sheet">
            <summary>
            Gets the style sheet referred to by this rule, if it has been loaded. 
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.ListSelector">
            <summary>
            Represents a group of selectors.
            Zero or more selectors separated by commas.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ListSelector.#ctor">
            <summary>
            Creates a new selector group.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.ListSelector.Create(AngleSharp.DOM.Css.ISelector[])">
            <summary>
            Creates a new selector group with the given selectors.
            </summary>
            <param name="selectors">The selectors.</param>
            <returns>The created list selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ListSelector.Match(AngleSharp.DOM.IElement)">
            <summary>
            Determines if the given object is matched by this selector.
            </summary>
            <param name="element">The element to be matched.</param>
            <returns>True if the selector matches the given element, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.ListSelector.ToCss">
            <summary>
            Returns a valid CSS string representing this selector.
            </summary>
            <returns>The CSS to create this selector.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.ListSelector.IsInvalid">
            <summary>
            Gets or sets if the selector group is invalid.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.SimpleSelector">
            <summary>
            Represents a simple selector (either a type selector,
            universal selector, attribute selector, class selector,
            id selector or pseudo-class).
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.#ctor">
            <summary>
            Creates a simple universal selector.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.#ctor(System.String)">
            <summary>
            Creates a simple type selector.
            </summary>
            <param name="match">The type to match.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.#ctor(System.Predicate{AngleSharp.DOM.IElement},AngleSharp.Css.Priority,System.String)">
            <summary>
            Creates a simple selector with the given predicate.
            </summary>
            <param name="matches">The predicate to use.</param>
            <param name="specifify">The specifify to use.</param>
            <param name="code">The CSS code of the selector.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.PseudoElement(System.Predicate{AngleSharp.DOM.IElement},System.String)">
            <summary>
            Creates a new pseudo element :: selector.
            </summary>
            <param name="action">The action for the pseudo element selector.</param>
            <param name="pseudoElement">The pseudo element.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.PseudoClass(System.Predicate{AngleSharp.DOM.IElement},System.String)">
            <summary>
            Creates a new pseudo class : selector.
            </summary>
            <param name="action">The action for the pseudo class selector.</param>
            <param name="pseudoClass">The pseudo class.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.Universal">
            <summary>
            Gets a selector that matches all elements.
            </summary>
            <returns>The available universal selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.Class(System.String)">
            <summary>
            Creates a new class selector.
            </summary>
            <param name="match">The class to match.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.Id(System.String)">
            <summary>
            Creates a new ID selector.
            </summary>
            <param name="match">The id to match.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrAvailable(System.String)">
            <summary>
            Creates a new attribute available selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrMatch(System.String,System.String)">
            <summary>
            Creates a new attribute match selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The value of the attribute.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrNotMatch(System.String,System.String)">
            <summary>
            Creates a new attribute not-match selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The value that the attribute should not have.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrList(System.String,System.String)">
            <summary>
            Creates a new attribute matches a list entry selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The value (between spaces) of the attribute.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrBegins(System.String,System.String)">
            <summary>
            Creates a new attribute matches the begin selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The begin of the value of the attribute.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrEnds(System.String,System.String)">
            <summary>
            Creates a new attribute matches the end selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The end of the value of the attribute.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrContains(System.String,System.String)">
            <summary>
            Creates a new attribute contains selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The value that has to be contained in the value of the attribute.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.AttrHyphen(System.String,System.String)">
            <summary>
            Creates a new attribute matches hyphen separated list selector.
            </summary>
            <param name="match">The attribute that has to be available.</param>
            <param name="value">The value that has to be a hyphen separated list entry of the attribute.</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.Type(System.String)">
            <summary>
            Creates a new type selector.
            </summary>
            <param name="match">The type to match (the tagname).</param>
            <returns>The new selector.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.Match(AngleSharp.DOM.IElement)">
            <summary>
            Determines if the given object is matched by this selector.
            </summary>
            <param name="element">The element to be matched.</param>
            <returns>True if the selector matches the given element, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.SimpleSelector.ToCss">
            <summary>
            Returns a valid CSS string representing this selector.
            </summary>
            <returns>The CSS to create this selector.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.SimpleSelector.All">
            <summary>
            Gets a selector that matches all elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.SimpleSelector.Specifity">
            <summary>
            Gets the specifity of the given selector.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.SimpleSelector.Text">
            <summary>
            Gets the string representation of the selector.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.DocumentFragment">
            <summary>
            Represents a document fragment.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.#ctor">
            <summary>
            Creates a new document fragment.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.#ctor(System.String,AngleSharp.DOM.Element)">
            <summary>
            Creates a new document fragment with the given nodelist as
            children.
            </summary>
            <param name="html">The HTML source to use.</param>
            <param name="context">The context for the fragment mode.</param>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.Prepend(AngleSharp.DOM.INode[])">
            <summary>
            Prepends nodes to the current document fragment.
            </summary>
            <param name="nodes">The nodes to prepend.</param>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.Append(AngleSharp.DOM.INode[])">
            <summary>
            Appends nodes to current document fragment.
            </summary>
            <param name="nodes">The nodes to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.QuerySelector(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal
            of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.QuerySelectorAll(System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal
            of the document's nodes) that match the specified group of selectors.
            </summary>
            <param name="selectors">A string containing one or more CSS selectors separated by commas.</param>
            <returns>An element object.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.GetElementsByClassName(System.String)">
            <summary>
            Returns a set of elements which have all the given class names.
            </summary>
            <param name="classNames">A string representing the list of class names to match; class names are separated by whitespace.</param>
            <returns>A collection of HTML elements.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.GetElementsByTagName(System.String)">
            <summary>
            Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node.
            </summary>
            <param name="tagName">A string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns>A NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace.
            The complete document is searched, including the root node.
            </summary>
            <param name="namespaceURI">The namespace URI of elements to look for.</param>
            <param name="tagName">Either the local name of elements to look for or the special value "*", which matches all elements.</param>
            <returns>A NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.GetElementById(System.String)">
            <summary>
            Tries to get the an element in the DOM tree given its id.
            </summary>
            <param name="elementId">The id of the element to get.</param>
            <returns>The element with the corresponding ID or null.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentFragment.ToHtml">
            <summary>
            Returns an HTML-code representation of the document.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.DocumentFragment.ChildElementCount">
            <summary>
            Gets the number of child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentFragment.Children">
            <summary>
            Gets the child elements.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentFragment.FirstElementChild">
            <summary>
            Gets the first child element of this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentFragment.LastElementChild">
            <summary>
            Gets the last child element of this element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.DomImplementation">
            <summary>
            Provides a number of methods for performing operations that are independent of any particular instance of the DOM.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DomImplementation.CreateDocumentType(System.String,System.String,System.String)">
            <summary>
            Creates an empty DocumentType node. Entity declarations and notations are not made available.
            Entity reference expansions and default attribute additions do not occur.
            </summary>
            <param name="qualifiedName">The qualified name of the document type to be created.</param>
            <param name="publicId">The external subset public identifier.</param>
            <param name="systemId">The external subset system identifier.</param>
            <returns>A new DocumentType node with the owner document set to null.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DomImplementation.CreateDocument(System.String,System.String,AngleSharp.DOM.IDocumentType)">
            <summary>
            Creates a DOM Document object of the specified type with its document element.
            </summary>
            <param name="namespaceUri">Optional: The namespace URI of the document element to create.</param>
            <param name="qualifiedName">Optional: The qualified name of the document element to be created.</param>
            <param name="doctype">Optional: The type of document to be created.</param>
            <returns>A new Document object with its document element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DomImplementation.CreateHtmlDocument(System.String)">
            <summary>
            Creates a DOM HTML Document object of the specified type with its document element.
            </summary>
            <param name="title">The title of the HTML document.</param>
            <returns>A new Document object with its document element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DomImplementation.HasFeature(System.String,System.String)">
            <summary>
            Test if the DOM implementation implements a specific feature and version, as specified in DOM Features.
            </summary>
            <param name="feature">The name of the feature requested. Note that any plus sign "+" prepended to the name
            of the feature will be ignored since it is not significant in the context of this method.</param>
            <param name="version">This is the version number of the feature to test.</param>
            <returns>True if the feature is implemented in the specified version, false otherwise.</returns>
        </member>
        <member name="T:AngleSharp.DOM.EntityReference">
            <summary>
            Represents a reference to an entity.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.EntityReference.#ctor">
            <summary>
            Creates a new entity node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.EntityReference.#ctor(System.String)">
            <summary>
            Creates a new entity node.
            </summary>
            <param name="name">Name of the entity reference.</param>
        </member>
        <member name="T:AngleSharp.DOM.Location">
            <summary>
            A location object with information about a Url.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Location.#ctor">
            <summary>
            Creates a new location with no URL.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Location.#ctor(System.String)">
            <summary>
            Creates a new location based on the given URL.
            </summary>
            <param name="url">The URL to represent.</param>
        </member>
        <member name="M:AngleSharp.DOM.Location.ToString">
            <summary>
            Returns the string representation of the current location.
            </summary>
            <returns>The string that equals the hyper reference.</returns>
        </member>
        <member name="E:AngleSharp.DOM.Location.Changed">
            <summary>
            Fired when the address is changed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Origin">
            <summary>
            Gets the origin of the url.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.IsRelative">
            <summary>
            Gets if the stored location is relative and requires
            a base URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.UserName">
            <summary>
            Gets or sets the username for authorization.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Password">
            <summary>
            Gets or sets the password for authorization.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Data">
            <summary>
            Gets the additional stored data of the URL.
            This is data that could not be assigned.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Hash">
            <summary>
            Gets or sets the hash, e.g.  "#myhash".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Host">
            <summary>
            Gets or sets the host, e.g. "localhost:8800" or "www.w3.org".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.HostName">
            <summary>
            Gets or sets the host name, e.g. "localhost" or "www.w3.org".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Href">
            <summary>
            Gets or sets the hyper reference, i.e. the full path.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.PathName">
            <summary>
            Gets or sets the pathname, e.g. "/mypath".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Port">
            <summary>
            Gets or sets the port, e.g. "8800"
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Protocol">
            <summary>
            Gets or sets the protocol, e.g. "http:".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Location.Search">
            <summary>
            Gets or sets the query, e.g. "?id=...".
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Location.LocationChangedEventArgs">
            <summary>
            Event Arguments for the location changed event.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.ProcessingInstruction">
            <summary>
            Represents a processing instruction node.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.CharacterData">
            <summary>
            The base class for all characterdata implementations.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.#ctor(System.String,AngleSharp.DOM.NodeType)">
            <summary>
            Creates a new instance of character data.
            </summary>
            <param name="name">The name of the node.</param>
            <param name="type">The exact type of the node.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.#ctor(System.String,AngleSharp.DOM.NodeType,System.String)">
            <summary>
            Creates a new instance of character data with the
            provided initial content.
            </summary>
            <param name="name">The name of the node.</param>
            <param name="type">The exact type of the node.</param>
            <param name="content">The content to set.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Substring(System.Int32,System.Int32)">
            <summary>
            Returns the substring of the character data starting at the offset.
            </summary>
            <param name="offset">The start index.</param>
            <param name="count">The number of characters.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Append(System.String)">
            <summary>
            Appends some data to the character data.
            </summary>
            <param name="value">The data to append.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Insert(System.Int32,System.String)">
            <summary>
            Inserts some data starting at the given offset.
            </summary>
            <param name="offset">The start index.</param>
            <param name="data">The data to insert.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes some data starting at the given offset with the given length.
            </summary>
            <param name="offset">The start index.</param>
            <param name="count">The length of the deletion.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces some data starting at the given offset with the given length.
            </summary>
            <param name="offset">The start index.</param>
            <param name="count">The length of the replacement.</param>
            <param name="data">The data to insert at the replacement.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.ToHtml">
            <summary>
            Returns an HTML-code representation of the character data.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Before(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes before the current node.
            </summary>
            <param name="nodes">The nodes to insert before.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.After(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes after the current node.
            </summary>
            <param name="nodes">The nodes to insert after.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Replace(AngleSharp.DOM.INode[])">
            <summary>
            Replaces the current node with the nodes.
            </summary>
            <param name="nodes">The nodes to replace.</param>
        </member>
        <member name="M:AngleSharp.DOM.CharacterData.Remove">
            <summary>
            Removes the current element from the parent.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.PreviousElementSibling">
            <summary>
            Gets the element immediately preceding in this node's parent's list of nodes, 
            null if the current element is the first element in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.NextElementSibling">
            <summary>
            Gets the element immediately following in this node's parent's list of nodes,
            or null if the current element is the last element in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.Item(System.Int32)">
            <summary>
            Gets or sets the characters at the given position.
            </summary>
            <param name="index">The position of the character.</param>
            <returns>The character at the position.</returns>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.Length">
            <summary>
            Gets the number of characters.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.NodeValue">
            <summary>
            Gets or sets the character value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.TextContent">
            <summary>
            Gets or sets the character value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.CharacterData.Data">
            <summary>
            Gets the string data in this character node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.ProcessingInstruction.#ctor(System.String)">
            <summary>
            Creates a new processing instruction node.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.ProcessingInstruction.Target">
            <summary>
            Gets the name of the target.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.StyleSheet">
            <summary>
            Represent a stylesheet object.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.StyleSheet.#ctor">
            <summary>
            Creates a new style sheet.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.Type">
            <summary>
            Gets the style sheet language for this style sheet.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.IsDisabled">
            <summary>
            Gets or sets if the stylesheet is applied to the document. Modifying this attribute may cause a new resolution
            of style for the document. If the media doesn't apply to the current user agent, the disabled attribute is ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.OwnerNode">
            <summary>
            Gets the element that associates this style sheet with the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.Parent">
            <summary>
            Gets the parent stylesheet for style sheet languages that support the concept of style sheet inclusion.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.Href">
            <summary>
            Gets the value of the attribute, which is its location. For inline style sheets, the value of this attribute is null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.Title">
            <summary>
            Gets the advisory title. The title is often specified in the ownerNode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheet.Media">
            <summary>
            Gets the intended destination media for style information. The media is often specified in the ownerNode. If no
            media has been specified, the MediaList is empty.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.MediaList">
            <summary>
            Represents a list of media elements.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.#ctor">
            <summary>
            Creates a new MediaList.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.Validate(AngleSharp.DOM.IWindow)">
            <summary>
            Validates the list of contained media.
            </summary>
            <param name="window">The current browsing window.</param>
            <returns>True if the constraints are satisfied, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.Add(System.String)">
            <summary>
            Adds the medium newMedium to the end of the list.
            If the newMedium is already used, it is first removed.
            </summary>
            <param name="newMedium">The new medium to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.Remove(System.String)">
            <summary>
            Deletes the medium indicated by oldMedium from the list.
            </summary>
            <param name="oldMedium">The medium to delete in the media list.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.Add(AngleSharp.DOM.Css.CSSMedium)">
            <summary>
            Adds the given medium to the list of media.
            </summary>
            <param name="medium">The medium to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.Import(AngleSharp.DOM.Collections.MediaList)">
            <summary>
            Imports the media from the given list.
            Clears the existing media.
            </summary>
            <param name="list">The list to import.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the media in the list.
            </summary>
            <returns>An enumerator that can be used to iterate through the mediums.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.MediaList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the media in the list.
            </summary>
            <returns>An enumerator that can be used to iterate through the mediums.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.MediaList.Item(System.Int32)">
            <summary>
            Gets the medium item at the specified index.
            </summary>
            <param name="index">Index into the collection.</param>
            <returns>The medium at the index-th position in the MediaList, or null if that is not a valid index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.MediaList.Length">
            <summary>
            Gets the number of media in the list. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Collections.MediaList.MediaText">
            <summary>
            Gets or sets the parsable textual representation of the media list. This is a comma-separated list of media.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Collections.StringList">
            <summary>
            Represents a string list.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringList.Contains(System.String)">
            <summary>
            Returns a boolean indicating if the specified entry is available.
            </summary>
            <param name="entry">The entry that will be looked for.</param>
            <returns>True if the element is available, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringList.GetEnumerator">
            <summary>
            Gets the enumerator over all stylesheet titles.
            </summary>
            <returns>The iterator instance.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.StringList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the non-generic enumerator.
            </summary>
            <returns>An iterator over all stylesheet titles.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.StringList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The 0-based index of the element.</param>
            <returns>The element or null.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.StringList.Length">
            <summary>
            Gets the number of entries.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.DomException">
            <summary>
            Represents a DOM exception.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DomException.#ctor(AngleSharp.ErrorCode)">
            <summary>
            Creates a new DOMException.
            </summary>
            <param name="code">The error code.</param>
        </member>
        <member name="M:AngleSharp.DOM.DomException.#ctor(System.Int32)">
            <summary>
            Creates a new DOMException.
            </summary>
            <param name="code">The error code.</param>
        </member>
        <member name="P:AngleSharp.DOM.DomException.Name">
            <summary>
            Gets the name of the error.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DomException.Code">
            <summary>
            Gets the error code for this exception.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Attr">
            <summary>
            Represents a generic node attribute.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Attr.#ctor(AngleSharp.DOM.Element,System.String)">
            <summary>
            Creates a new NodeAttribute with empty value.
            </summary>
            <param name="container">The parent of the attribute.</param>
            <param name="localName">The name of the attribute.</param>
        </member>
        <member name="M:AngleSharp.DOM.Attr.#ctor(AngleSharp.DOM.Element,System.String,System.String)">
            <summary>
            Creates a new NodeAttribute.
            </summary>
            <param name="container">The parent of the attribute.</param>
            <param name="localName">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
        </member>
        <member name="M:AngleSharp.DOM.Attr.#ctor(AngleSharp.DOM.Element,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new NodeAttribute.
            </summary>
            <param name="container">The parent of the attribute.</param>
            <param name="prefix">The prefix of the attribute.</param>
            <param name="localName">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
            <param name="namespaceUri">The namespace of the attribute.</param>
        </member>
        <member name="M:AngleSharp.DOM.Attr.Equals(AngleSharp.DOM.IAttr)">
            <summary>
            Compares the given attribute to the current one.
            </summary>
            <param name="other">The attibute to compare to.</param>
            <returns>True if both attributes are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Attr.ToString">
            <summary>
            Returns an HTML-code representation of the attribute.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Attr.Prefix">
            <summary>
            Gets the namespace prefix of the specified node, or null if no prefix is specified.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Attr.IsId">
            <summary>
            Gets whether the attribute is an ID attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Attr.Specified">
            <summary>
            Gets if this attribute was explicitly given a value in the document.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Attr.Name">
            <summary>
            Gets the name of the attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Attr.Value">
            <summary>
            Gets or sets the value of the attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Attr.LocalName">
            <summary>
            Gets the local name of the attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Attr.NamespaceUri">
            <summary>
            Gets the namespace URI of the attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CSSStyleSheet">
            <summary>
            Represents a CSS Stylesheet.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleSheet.#ctor">
            <summary>
            Creates a new CSS Stylesheet.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleSheet.#ctor(System.String)">
            <summary>
            Creates a new CSS Stylesheet.
            </summary>
            <param name="source">The CSS source code.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleSheet.#ctor(AngleSharp.ITextSource)">
            <summary>
            Creates a new CSS Stylesheet.
            </summary>
            <param name="source">The underlying source.</param>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleSheet.RemoveAt(System.Int32)">
            <summary>
            Removes a style rule from the current style sheet object.
            </summary>
            <param name="index">The index representing the position to be removed.</param>
            <returns>The current stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleSheet.Insert(System.String,System.Int32)">
            <summary>
            Inserts a new style rule into the current style sheet.
            </summary>
            <param name="rule">A string containing the rule to be inserted (selector and declaration).</param>
            <param name="index">The index representing the position to be inserted.</param>
            <returns>The current stylesheet.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Css.CSSStyleSheet.ToCss">
            <summary>
            Returns a CSS code representation of the stylesheet.
            </summary>
            <returns>A string that contains the code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleSheet.Rules">
            <summary>
            Gets a CSSRuleList of the CSS rules in the style sheet.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleSheet.AngleSharp#DOM#Css#ICssStyleSheet#Rules">
            <summary>
            Gets a CSSRuleList of the CSS rules in the style sheet.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleSheet.OwnerRule">
            <summary>
            Gets the @import rule if the stylesheet was importated otherwise it returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Css.CSSStyleSheet.Source">
            <summary>
            Gets the text stream source.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMarqueeElement">
            <summary>
            Represents the HTML marquee element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMarqueeElement.Start">
            <summary>
            Starts the marquee loop.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMarqueeElement.Stop">
            <summary>
            Stops the marquee loop.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMarqueeElement.MinimumDelay">
            <summary>
            Gets the minimum delay in ms.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMarqueeElement.ScrollAmount">
            <summary>
            Gets or sets the amount of scrolling in pixels.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMarqueeElement.ScrollDelay">
            <summary>
            Gets or sets the delay of scrolling in ms.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMarqueeElement.Loop">
            <summary>
            Gets or sets the loop number.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLNoEmbedElement">
            <summary>
            Represents a noembed HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLSemanticElement">
            <summary>
            Represents an HTML element with only semantic meaning.
            </summary>
        </member>
        <member name="T:AngleSharp.Html.Tags">
            <summary>
            The collection of (known / used) tags.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Doctype">
            <summary>
            Gets the DOCTYPE constant.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Html">
            <summary>
            The html tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Body">
            <summary>
            The body tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Head">
            <summary>
            The head tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Meta">
            <summary>
            The meta tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Title">
            <summary>
            The title tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Bgsound">
            <summary>
            The bgsound tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Script">
            <summary>
            The script tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Style">
            <summary>
            The style tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.NoEmbed">
            <summary>
            The noembed tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.NoScript">
            <summary>
            The noscript tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.NoFrames">
            <summary>
            The noframes tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Menu">
            <summary>
            The menu tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.MenuItem">
            <summary>
            The menuitem tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Var">
            <summary>
            The var tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Ruby">
            <summary>
            The ruby tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Sub">
            <summary>
            The sub tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Sup">
            <summary>
            The sup tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Rp">
            <summary>
            The rp tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Rt">
            <summary>
            The rt tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Applet">
            <summary>
            The applet tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Embed">
            <summary>
            The embed tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Marquee">
            <summary>
            The marquee tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Param">
            <summary>
            The param tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Object">
            <summary>
            The object tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Canvas">
            <summary>
            The canvas tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Font">
            <summary>
            The font tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Ins">
            <summary>
            The ins tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Del">
            <summary>
            The del tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Template">
            <summary>
            The template tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Caption">
            <summary>
            The caption tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Col">
            <summary>
            The col tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Colgroup">
            <summary>
            The colgroup tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Table">
            <summary>
            The table tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Thead">
            <summary>
            The dialog tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Tbody">
            <summary>
            The dialog tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Tfoot">
            <summary>
            The dialog tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Th">
            <summary>
            The th tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Td">
            <summary>
            The td tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Tr">
            <summary>
            The tr tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Input">
            <summary>
            The input tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Keygen">
            <summary>
            The keygen tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Textarea">
            <summary>
            The textarea tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.P">
            <summary>
            The p tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Span">
            <summary>
            The span tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Dialog">
            <summary>
            The dialog tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Fieldset">
            <summary>
            The fieldset tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Legend">
            <summary>
            The legend tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Label">
            <summary>
            The label tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Details">
            <summary>
            The details tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Form">
            <summary>
            The form tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.IsIndex">
            <summary>
            The isindex tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Pre">
            <summary>
            The pre tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Datalist">
            <summary>
            The datalist tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Ol">
            <summary>
            The ol tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Ul">
            <summary>
            The tag ul.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Dl">
            <summary>
            The dl tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Li">
            <summary>
            The li tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Dd">
            <summary>
            The dd tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Dt">
            <summary>
            The dt tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.B">
            <summary>
            The b tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Big">
            <summary>
            The big tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Strike">
            <summary>
            The strike tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Code">
            <summary>
            The code tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Em">
            <summary>
            The em tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.I">
            <summary>
            The i tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.S">
            <summary>
            The s tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Small">
            <summary>
            The small tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Strong">
            <summary>
            The strong tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.U">
            <summary>
            The u tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Tt">
            <summary>
            The tt tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.NoBr">
            <summary>
            The nobr tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Select">
            <summary>
            The select tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Option">
            <summary>
            The option tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Optgroup">
            <summary>
            The optgroup tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Link">
            <summary>
            The link tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Frameset">
            <summary>
            The frameset tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Frame">
            <summary>
            The frame tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Iframe">
            <summary>
            The iframe tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Audio">
            <summary>
            The audio tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Video">
            <summary>
            The video tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Source">
            <summary>
            The source tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Track">
            <summary>
            The track tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.H1">
            <summary>
            The h1 tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.H2">
            <summary>
            The h2 tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.H3">
            <summary>
            The h3 tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.H4">
            <summary>
            The h4 tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.H5">
            <summary>
            The h5 tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.H6">
            <summary>
            The h6 tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Div">
            <summary>
            The div tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Quote">
            <summary>
            The quote tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.BlockQuote">
            <summary>
            The blockquote tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Q">
            <summary>
            The q tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Base">
            <summary>
            The base tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.BaseFont">
            <summary>
            The basefont tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.A">
            <summary>
            The a tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Area">
            <summary>
            The area tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Button">
            <summary>
            The button tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Cite">
            <summary>
            The cite tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Main">
            <summary>
            The main tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Summary">
            <summary>
            The summary tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Xmp">
            <summary>
            The xmp tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Br">
            <summary>
            The br tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Wbr">
            <summary>
            The wbr tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Hr">
            <summary>
            The hr tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Dir">
            <summary>
            The dir tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Center">
            <summary>
            The center tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Listing">
            <summary>
            The listing tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Img">
            <summary>
            The img tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Image">
            <summary>
            The image tag (this is not the right tag).
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Nav">
            <summary>
            The nav tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Address">
            <summary>
            The address tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Article">
            <summary>
            The article tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Aside">
            <summary>
            The aside tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Figcaption">
            <summary>
            The figcaption tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Figure">
            <summary>
            The figure tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Section">
            <summary>
            The section tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Footer">
            <summary>
            The footer tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Header">
            <summary>
            The header tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Hgroup">
            <summary>
            The hgroup tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Plaintext">
            <summary>
            The plaintext tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Time">
            <summary>
            The time tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Progress">
            <summary>
            The progress tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Output">
            <summary>
            The output tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Map">
            <summary>
            The map tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Math">
            <summary>
            The math tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Mi">
            <summary>
            The mi tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Mo">
            <summary>
            The mo tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Mn">
            <summary>
            The mn tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Ms">
            <summary>
            The ms tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Mtext">
            <summary>
            The mtext tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.AnnotationXml">
            <summary>
            The annotation-xml tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Svg">
            <summary>
            The svg tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.ForeignObject">
            <summary>
            The foreignObject tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Desc">
            <summary>
            The desc tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Circle">
            <summary>
            The circle tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Tags.Xml">
            <summary>
            The xml tag.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlParseMode">
            <summary>
            Defines the different tokenization content models.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlParseMode.PCData">
            <summary>
            Initial state: Parsed Character Data (characters will be parsed).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlParseMode.RCData">
            <summary>
            Optional state: Raw character data (characters will be parsed from a special table).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlParseMode.Plaintext">
            <summary>
            Optional state: Just plain text data (chracters will be parsed matching the given ones).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlParseMode.Rawtext">
            <summary>
            Optional state: Rawtext data (characters will not be parsed).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlParseMode.Script">
            <summary>
            Optional state: Script data.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CssRuleType">
            <summary>
            The set of possible CSS rules.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Unknown">
            <summary>
            The rule is not known and cannot be used.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Style">
            <summary>
            A standard style rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Charset">
            <summary>
            Defines a @charset rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Import">
            <summary>
            The @import rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Media">
            <summary>
            An @media rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.FontFace">
            <summary>
            This is for definining @font-face rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Page">
            <summary>
            In printing we require the @page rule.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Keyframes">
            <summary>
            For animations @keyframes is very important.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Keyframe">
            <summary>
            Keyframes require one or more @keyframe rule(s) to be used.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Namespace">
            <summary>
            Declaring namespaces is possible @namespace.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.CounterStyle">
            <summary>
            The @counter-style rule for styling counters.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Supports">
            <summary>
            Checking for CSS support using @support.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Document">
            <summary>
            Changing document (location) specific rules with @document.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.FontFeatureValues">
            <summary>
            This @font-feature-values is still very complicated.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.Viewport">
            <summary>
            Defines the @viewport rule for responsive design.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssRuleType.RegionStyle">
            <summary>
            Creating a CSS region with @region.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Css.CssValueType">
            <summary>
            This enumeration is indicating which type of unit applies to the value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssValueType.Inherit">
            <summary>
            The value is inherited and the CssText contains "inherit".
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssValueType.Primitive">
            <summary>
            The value is a primitive value and an instance of the CSSPrimitiveValue.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssValueType.List">
            <summary>
            The value is a CSSValue list and an instance of the CSSValueList.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssValueType.Custom">
            <summary>
            The value is a custom value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Css.CssValueType.Initial">
            <summary>
            The value is in its initial state and might be inherited, if applicable.
            </summary>
        </member>
        <member name="T:AngleSharp.Html.Entities">
            <summary>
            Represents the list of all Html entities.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Entities._strongEntities">
            <summary>
            Strong entities always end with a semicolon.
            </summary>
        </member>
        <member name="F:AngleSharp.Html.Entities._weakEntities">
            <summary>
            Weak entities do not end with a semicolon (there are much less weak entities).
            </summary>
        </member>
        <member name="M:AngleSharp.Html.Entities.GetSymbol(System.String)">
            <summary>
            Gets an symbol (that ended with a semicolon) specified by its entity name.
            </summary>
            <param name="name">The name of the entity, specified by &amp;NAME; in the Html source code.</param>
            <returns>The string with the symbol or null.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.GetSymbolWithoutSemicolon(System.String)">
            <summary>
            Gets an symbol (that did not end with a semicolon) specified by its entity name.
            </summary>
            <param name="name">The name of the entity, specified by &amp;NAME in the Html source code.</param>
            <returns>The string with the symbol or null.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.GetEntity(System.String)">
            <summary>
            Gets the entity name specified by its symbol (may be ambiguous).
            </summary>
            <param name="symbol">The value of the entity.</param>
            <returns>The string with the entity name or null.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.Convert(System.Int32)">
            <summary>
            Converts a given number into its unicode character.
            </summary>
            <param name="code">The code to convert.</param>
            <returns>The array containing the character.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.Convert(System.Int32,System.Int32)">
            <summary>
            Converts a set of two numbers into their unicode characters.
            </summary>
            <param name="leadingCode">The first (leading) character code.</param>
            <param name="trailingCode">The second (trailing) character code.</param>
            <returns>The array containing the two characters.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.IsInvalidNumber(System.Int32)">
            <summary>
            Determines if the code is an invalid number.
            </summary>
            <param name="code">The code to examine.</param>
            <returns>True if it is an invalid number, false otherwise.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.IsInCharacterTable(System.Int32)">
            <summary>
            Determines if the given code is actually in the table of common redirections.
            </summary>
            <param name="code">The code to examine.</param>
            <returns>True if the code is in the table, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.GetSymbolFromTable(System.Int32)">
            <summary>
            Gets the symbol mapped by the table of common redirections.
            </summary>
            <param name="code">The original code.</param>
            <returns>The character wrapped in a string.</returns>
        </member>
        <member name="M:AngleSharp.Html.Entities.IsInInvalidRange(System.Int32)">
            <summary>
            Determines if the code is within an invalid range.
            </summary>
            <param name="code">The code to examine.</param>
            <returns>True if it is within an invalid range, false otherwise.</returns>
        </member>
        <member name="T:AngleSharp.DOM.DocumentPositions">
            <summary>
            Enumeration of possible document position values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.Same">
            <summary>
            It is the same node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.Disconnected">
            <summary>
            There is no relation.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.Preceding">
            <summary>
            The node preceeds the other element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.Following">
            <summary>
            The node follows the other element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.Contains">
            <summary>
            The node is contains the other element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.ContainedBy">
            <summary>
            The node is contained in the other element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentPositions.ImplementationSpecific">
            <summary>
            The relation is implementation specific.
            </summary>
        </member>
        <member name="T:AngleSharp.ErrorCode">
            <summary>
            A collection of error codes.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.EOF">
            <summary>
            Unexpected end of file detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.IndexSizeError">
            <summary>
            The index is not in the allowed range.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DomStringSize">
            <summary>
            The size of the string is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.HierarchyRequest">
            <summary>
            The operation would yield an incorrect node tree.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.WrongDocument">
            <summary>
            The object is in the wrong document.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InvalidCharacter">
            <summary>
            Invalid character detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NoDataAllowed">
            <summary>
            The data is allowed for this object.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NoModificationAllowed">
            <summary>
            The object can not be modified.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NotFound">
            <summary>
            The object can not be found here.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NotSupported">
            <summary>
            The operation is not supported.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InUse">
            <summary>
            The element is already in-use.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InvalidState">
            <summary>
            The object is in an invalid state.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Syntax">
            <summary>
            The string did not match the expected pattern.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InvalidModification">
            <summary>
            The object can not be modified in this way.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Namespace">
            <summary>
            The operation is not allowed by namespaces in XML.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InvalidAccess">
            <summary>
            The object does not support the operation or argument.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Validation">
            <summary>
            The validation failed.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TypeMismatch">
            <summary>
            The provided argument type is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Security">
            <summary>
            The operation is insecure.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Network">
            <summary>
            A network error occurred.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Abort">
            <summary>
            The operation was aborted.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.UrlMismatch">
            <summary>
            The given URL does not match another URL.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.QuotaExceeded">
            <summary>
            The quota has been exceeded.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Timeout">
            <summary>
            The operation timed out.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InvalidNodeType">
            <summary>
            The supplied node is incorrect or has an incorrect ancestor for this operation.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DataClone">
            <summary>
            The object can not be cloned.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.BogusComment">
            <summary>
            Bogus comment.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.AmbiguousOpenTag">
            <summary>
            Ambiguous open tag.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagClosedWrong">
            <summary>
            The tag has been closed unexpectedly.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ClosingSlashMisplaced">
            <summary>
            The closing slash has been misplaced.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.UndefinedMarkupDeclaration">
            <summary>
            Undefined markup declaration found.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CommentEndedWithEM">
            <summary>
            Comment ended with an exclamation mark.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CommentEndedWithDash">
            <summary>
            Comment ended with a dash.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CommentEndedUnexpected">
            <summary>
            Comment ended with an unexpected character.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagCannotBeSelfClosed">
            <summary>
            The given tag cannot be self-closed.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.EndTagCannotBeSelfClosed">
            <summary>
            End tags can never be self-closed.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.EndTagCannotHaveAttributes">
            <summary>
            End tags cannot carry attributes.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CaptionNotInScope">
            <summary>
            No caption tag has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.SelectNotInScope">
            <summary>
            No select tag has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TableRowNotInScope">
            <summary>
            No table row has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TableNotInScope">
            <summary>
            No table has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ParagraphNotInScope">
            <summary>
            No paragraph has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.BodyNotInScope">
            <summary>
            No body has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.BlockNotInScope">
            <summary>
            No block element has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TableCellNotInScope">
            <summary>
            No table cell has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TableSectionNotInScope">
            <summary>
            No table section has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ObjectNotInScope">
            <summary>
            No object element has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.HeadingNotInScope">
            <summary>
            No heading element has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ListItemNotInScope">
            <summary>
            No list item has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.FormNotInScope">
            <summary>
            No form has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ButtonInScope">
            <summary>
            No button has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NobrInScope">
            <summary>
            No nobr element has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ElementNotInScope">
            <summary>
            No element has been found within the local scope.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceWrongNumber">
            <summary>
            Character reference found no numbers.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceSemicolonMissing">
            <summary>
            Character reference found no semicolon.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceInvalidRange">
            <summary>
            Character reference within an invalid range.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceInvalidNumber">
            <summary>
            Character reference is an invalid number.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceInvalidCode">
            <summary>
            Character reference is an invalid code.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceNotTerminated">
            <summary>
            Character reference is not terminated by a semicolon.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CharacterReferenceAttributeEqualsFound">
            <summary>
            Character reference in attribute contains an invalid character (=).
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ItemNotFound">
            <summary>
            The specified item has not been found.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.EncodingError">
            <summary>
            The encoding operation (either encoded or decoding) failed.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeUnexpectedAfterName">
            <summary>
            Doctype unexpected character after the name detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypePublicInvalid">
            <summary>
            Invalid character in the public identifier detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeInvalidCharacter">
            <summary>
            Invalid character in the doctype detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeSystemInvalid">
            <summary>
            Invalid character in the system identifier detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeTagInappropriate">
            <summary>
            The doctype tag is misplaced and ignored.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeInvalid">
            <summary>
            The given doctype tag is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeUnexpected">
            <summary>
            Doctype encountered unexpected character.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoctypeMissing">
            <summary>
            The doctype tag is missing.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NotationPublicInvalid">
            <summary>
            The given public identifier for the notation declaration is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.NotationSystemInvalid">
            <summary>
            The given system identifier for the notation declaration is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TypeDeclarationUndefined">
            <summary>
            The type declaration is missing a valid definition.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.QuantifierMissing">
            <summary>
            A required quantifier is missing in the provided expression.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DoubleQuotationMarkUnexpected">
            <summary>
            The double quotation marks have been misplaced.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.SingleQuotationMarkUnexpected">
            <summary>
            The single quotation marks have been misplaced.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.AttributeNameInvalid">
            <summary>
            The attribute's name contains an invalid character.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.AttributeValueInvalid">
            <summary>
            The attribute's value contains an invalid character.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.AttributeNameExpected">
            <summary>
            The beginning of a new attribute has been expected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.AttributeDuplicateOmitted">
            <summary>
            The attribute has already been added.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagMustBeInHead">
            <summary>
            The given tag must be placed in head tag.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagInappropriate">
            <summary>
            The given tag is not appropriate for the current position.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagCannotEndHere">
            <summary>
            The given tag cannot end at the current position.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagCannotStartHere">
            <summary>
            The given tag cannot start at the current position.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.FormInappropriate">
            <summary>
            The given form cannot be placed at the current position.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.InputUnexpected">
            <summary>
            The given input cannot be placed at the current position.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagClosingMismatch">
            <summary>
            The closing tag and the currently open tag do not match.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagDoesNotMatchCurrentNode">
            <summary>
            The given end tag does not match the current node.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.LineBreakUnexpected">
            <summary>
            This position does not support a linebreak (LF, FF).
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.HeadTagMisplaced">
            <summary>
            The head tag can only be placed once inside the html tag.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.HtmlTagMisplaced">
            <summary>
            The html tag can only be placed once as the root element.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.BodyTagMisplaced">
            <summary>
            The body tag can only be placed once inside the html tag.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.ImageTagNamedWrong">
            <summary>
            The image tag has been named image instead of img.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TableNesting">
            <summary>
            Tables cannot be nested.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.IllegalElementInTableDetected">
            <summary>
            An illegal element has been detected in a table.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.SelectNesting">
            <summary>
            Select elements cannot be nested.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.IllegalElementInSelectDetected">
            <summary>
            An illegal element has been detected in a select.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.FramesetMisplaced">
            <summary>
            The frameset element has been misplaced.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.HeadingNested">
            <summary>
            Headings cannot be nested.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.AnchorNested">
            <summary>
            Anchor elements cannot be nested.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TokenNotPossible">
            <summary>
            The given token cannot be inserted here.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CurrentNodeIsNotRoot">
            <summary>
            The current node is not the root element.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.CurrentNodeIsRoot">
            <summary>
            The current node is the root element.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.TagInvalidInFragmentMode">
            <summary>
            This tag is invalid in fragment mode.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.FormAlreadyOpen">
            <summary>
            There is already an open form.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.FormClosedWrong">
            <summary>
            The form has been closed wrong.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.BodyClosedWrong">
            <summary>
            The body has been closed wrong.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.FormattingElementNotFound">
            <summary>
            An expected formatting element has not been found.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.Null">
            <summary>
            NULL character replaced by repl. character.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlMissingRoot">
            <summary>
            (0x200) Missing root element.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlDoctypeAfterContent">
            <summary>
            (0x201) Document type declaration after content.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlDeclarationInvalid">
            <summary>
            (0x202) Invalid XML declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlDeclarationMisplaced">
            <summary>
            (0x203) XML declaration not at beginning of document.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlDeclarationVersionUnsupported">
            <summary>
            (0x204) The given version number is not supported.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidStartTag">
            <summary>
            (0x205) Invalid start-tag.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidEndTag">
            <summary>
            (0x206) Invalid end-tag.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlLtInAttributeValue">
            <summary>
            (0x207) Well-formedness constraint: No &lt; in Attribute Values.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlUniqueAttribute">
            <summary>
            (0x208) Well-formedness constraint: Unique Att Spec.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidPI">
            <summary>
            (0x209) Invalid processing instruction.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlValidationFailed">
            <summary>
            (0x210) XML validation for the current document failed.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidCharData">
            <summary>
            (0x211) XML invalid character data detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidName">
            <summary>
            (0x212) XML invalid name found.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidPubId">
            <summary>
            (0x213) XML invalid public identifier character.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidAttribute">
            <summary>
            (0x214) XML invalid attribute seen.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.XmlInvalidComment">
            <summary>
            (0x215) XML invalid comment detected.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdInvalid">
            <summary>
            (0x300) Invalid document type declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdPEReferenceInvalid">
            <summary>
            (0x301) Invalid parameter entity reference.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdNameInvalid">
            <summary>
            (0x302) Invalid name in entity declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdDeclInvalid">
            <summary>
            (0x303) Declaration invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdTypeInvalid">
            <summary>
            (0x304) Invalid element type declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdEntityInvalid">
            <summary>
            (0x305) Invalid entity declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdAttListInvalid">
            <summary>
            (0x306) Invalid element name in attribute-list declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdTypeContent">
            <summary>
            (0x307) Invalid content specification in element type declaration.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdUniqueElementViolated">
            <summary>
            (0x308) An element type must not be declared more than once.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdConditionInvalid">
            <summary>
            (0x309) The DTD conditional section is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdTextDeclInvalid">
            <summary>
            (0x310) The given text declaration contains errors.s
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdNotationInvalid">
            <summary>
            (0x311) The notation declaration is invalid.
            </summary>
        </member>
        <member name="F:AngleSharp.ErrorCode.DtdPEReferenceRecursion">
            <summary>
            (0x312) No parameter reference recursion allowed.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.NodeType">
            <summary>
            Contains an enumeration of various node types.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Element">
            <summary>
            A standard node element.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Attribute">
            <summary>
            An attribute node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Text">
            <summary>
            A text node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.CharacterData">
            <summary>
            A CData text node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.EntityReference">
            <summary>
            An entity reference node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Entity">
            <summary>
            An entity node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.ProcessingInstruction">
            <summary>
            A processing instruction node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Comment">
            <summary>
            A comment node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Document">
            <summary>
            A document node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.DocumentType">
            <summary>
            A document type node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.DocumentFragment">
            <summary>
            A document (fragment mode) node.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.NodeType.Notation">
            <summary>
            A notation node.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.QuirksMode">
            <summary>
            A list of possible quirks mode states.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.QuirksMode.Off">
            <summary>
            The quirks mode is deactivated.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.QuirksMode.Limited">
            <summary>
            The quirks mode is partly activated.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.QuirksMode.On">
            <summary>
            The quirks mode is activated.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.DocumentReadyState">
            <summary>
            Defines the document readiness.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentReadyState.Loading">
            <summary>
            The document is still loading.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentReadyState.Interactive">
            <summary>
            The document is interactive, i.e. interaction possible.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.DocumentReadyState.Complete">
            <summary>
            Loading is complete.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssTokenType">
            <summary>
            An enumation of all possible tokens.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.String">
            <summary>
            A string token (usually in quotation marks).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Url">
            <summary>
            A URL token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.UrlPrefix">
            <summary>
            A URL-PREFIX token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Domain">
            <summary>
            A DOMAIN token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Hash">
            <summary>
            A hash token (starts with #).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.AtKeyword">
            <summary>
            An @-keyword token (starts with @).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Ident">
            <summary>
            An identifier token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Function">
            <summary>
            An function token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Number">
            <summary>
            An number token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Percentage">
            <summary>
            An percentage token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Dimension">
            <summary>
            An dimension token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Range">
            <summary>
            An unicode range token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Cdo">
            <summary>
            The comment open token to start comments.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Cdc">
            <summary>
            The comment close to end comments.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Column">
            <summary>
            The colum token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Delim">
            <summary>
            The delimiter token to delimiter character.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.IncludeMatch">
            <summary>
            The include match ~= token (with attributes, i.e. spaces).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.DashMatch">
            <summary>
            The dash match |= token (with attributes, i.e. hyphen).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.PrefixMatch">
            <summary>
            The prefix match ^= token (with attributes, i.e. beginning).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.SuffixMatch">
            <summary>
            The suffix match $= token (with attributes, i.e. ending).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.SubstringMatch">
            <summary>
            The substring match *= token (with attributes, i.e. somewhere).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.NotMatch">
            <summary>
            The not match != token (with attributes, i.e. somewhere).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.RoundBracketOpen">
            <summary>
            The RoundBracketOpen ( ( ) token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.RoundBracketClose">
            <summary>
            The RoundBracketClose ( ) ) token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.CurlyBracketOpen">
            <summary>
            The CurlyBracketOpen ( { ) token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.CurlyBracketClose">
            <summary>
            The CurlyBracketClose ( } ) token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.SquareBracketOpen">
            <summary>
            The SquareBracketOpen ( [ ) token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.SquareBracketClose">
            <summary>
            The SquareBracketClose ( ] ) token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Colon">
            <summary>
            The special character colon ( : ).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Comma">
            <summary>
            The special character comma ( , ).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Semicolon">
            <summary>
            The special character semi-colon ( ; ).
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Css.CssTokenType.Whitespace">
            <summary>
            The special character whitespace ( ).
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSelectorConstructor">
            <summary>
            Class for construction for CSS selectors as specified in
            http://www.w3.org/html/wg/drafts/html/master/selectors.html.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.#ctor">
            <summary>
            Creates a new constructor object.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.Apply(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Picks a simple selector from the stream of tokens.
            </summary>
            <param name="token">The stream of tokens to consider.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.Reset">
            <summary>
            Resets the current state.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnData(AngleSharp.Parser.Css.CssToken)">
            <summary>
            General state.
            </summary>
            <param name="token">The token to examine.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnAttribute(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a square bracket has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnAttributeOperator(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a square bracket has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnAttributeValue(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a square bracket has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnAttributeEnd(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a square bracket has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnPseudoClass(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a colon has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnPseudoElement(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a colon has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnClass(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a colon has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnPseudoClassFunction(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a pseudo class has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnPseudoClassFunctionEnd(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a pseudo class has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.InsertOr">
            <summary>
            Inserts a comma.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.Insert(AngleSharp.DOM.Css.ISelector)">
            <summary>
            Inserts the given selector.
            </summary>
            <param name="selector">The selector to insert.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.Insert(AngleSharp.Parser.Css.CssCombinator)">
            <summary>
            Inserts the given combinator.
            </summary>
            <param name="cssCombinator">The combinator to insert.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.OnDelim(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a delimiter has been found in the token enumerator.
            </summary>
            <param name="token">The token.</param>
            <returns>True if no error occurred, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.GetChildSelector``1">
            <summary>
            Takes string and transforms it into the arguments for the nth-child function.
            </summary>
            <returns>The function.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.GetPseudoSelector(AngleSharp.Parser.Css.CssToken)">
            <summary>
            Invoked once a colon with an identifier has been found in the token enumerator.
            </summary>
            <returns>The created selector.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.MatchBefore(AngleSharp.DOM.IElement)">
            <summary>
            Matches the ::before pseudo element (or pseudo-class for legacy reasons).
            </summary>
            <param name="element">The element to match.</param>
            <returns>An indicator if the match has been successful.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.MatchAfter(AngleSharp.DOM.IElement)">
            <summary>
            Matches the ::after pseudo element (or pseudo-class for legacy reasons).
            </summary>
            <param name="element">The element to match.</param>
            <returns>An indicator if the match has been successful.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.MatchFirstLine(AngleSharp.DOM.IElement)">
            <summary>
            Matches the ::first-line pseudo element (or pseudo-class for legacy reasons).
            </summary>
            <param name="element">The element to match.</param>
            <returns>An indicator if the match has been successful.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSelectorConstructor.MatchFirstLetter(AngleSharp.DOM.IElement)">
            <summary>
            Matches the ::first-letter pseudo element (or pseudo-class for legacy reasons).
            </summary>
            <param name="element">The element to match.</param>
            <returns>An indicator if the match has been successful.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssSelectorConstructor.Result">
            <summary>
            Gets the currently formed selector.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSelectorConstructor.State">
            <summary>
            The various parsing states.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSelectorConstructor.NthFirstChildSelector">
            <summary>
            The nth-child selector.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSelectorConstructor.NthLastChildSelector">
            <summary>
            The nth-lastchild selector.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSelectorConstructor.FirstChildSelector">
            <summary>
            The first child selector.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSelectorConstructor.LastChildSelector">
            <summary>
            The last child selector.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssBracketToken">
            <summary>
            The bracket token that contains the opening or closing of a bracket.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssToken">
            <summary>
            The base class token for the CSS parser.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssToken.Delim(System.Char)">
            <summary>
            Creates a new CSS delimiter token.
            </summary>
            <param name="c">The delim char.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssToken.Number(System.String)">
            <summary>
            Creates a new CSS number token.
            </summary>
            <param name="value">The single precision number.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssToken.Range(System.String,System.String)">
            <summary>
            Creates a new CSS range token.
            </summary>
            <param name="start">The start of the range.</param>
            <param name="end">The end of the range.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssToken.ToValue">
            <summary>
            Gets a string which represents the original value.
            </summary>
            <returns>The original value.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssToken.Type">
            <summary>
            Gets the type of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssToken.Data">
            <summary>
            Gets the data of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssToken.Column">
            <summary>
            Gets the column token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssBracketToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.String)">
            <summary>
            Creates a new CSS bracket token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssBracketToken.OpenRound">
            <summary>
            Gets a curly bracket open token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssBracketToken.CloseRound">
            <summary>
            Gets a curly bracket close token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssBracketToken.OpenCurly">
            <summary>
            Gets a curly bracket open token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssBracketToken.CloseCurly">
            <summary>
            Gets a curly bracket close token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssBracketToken.OpenSquare">
            <summary>
            Gets a square bracket open token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssBracketToken.CloseSquare">
            <summary>
            Gets a square bracket close token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssColumnToken">
            <summary>
            The column token that contains a column (||).
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssColumnToken.#ctor">
            <summary>
            Creates a new CSS column token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssColumnToken.Token">
            <summary>
            Gets the token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssCommentToken">
            <summary>
            The comment token that contains an HTML comment.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssCommentToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.String)">
            <summary>
            Creates a new comment.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssCommentToken.Open">
            <summary>
            Gets a new CSS open comment token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssCommentToken.Close">
            <summary>
            Gets a new CSS close comment token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssKeywordToken">
            <summary>
            Represents a CSS keyword token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssKeywordToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.String)">
            <summary>
            Creates a new CSS keyword token.
            </summary>
            <param name="type">The exact type.</param>
            <param name="data">The data to use.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssKeywordToken.Function(System.String)">
            <summary>
            Creates a new CSS keyword token for a function.
            </summary>
            <param name="name">The name of the function.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssKeywordToken.Ident(System.String)">
            <summary>
            Creates a new CSS keyword token for an identifier.
            </summary>
            <param name="identifier">The name of the identifier.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssKeywordToken.At(System.String)">
            <summary>
            Creates a new CSS keyword token for an at-keyword.
            </summary>
            <param name="name">The name of the @-rule.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssKeywordToken.Hash(System.String)">
            <summary>
            Creates a new CSS keyword token for a hash token.
            </summary>
            <param name="characters">The contained characters.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssKeywordToken.ToValue">
            <summary>
            Gets a string which represents the original value.
            </summary>
            <returns>The original value.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssMatchToken">
            <summary>
            The match token that contains part of a selector.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssMatchToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.String)">
            <summary>
            Creates a new CSS match token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssMatchToken.Include">
            <summary>
            Gets a new CSS include-match token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssMatchToken.Dash">
            <summary>
            Gets a new CSS dash-match token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssMatchToken.Prefix">
            <summary>
            Gets a new CSS prefix-match token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssMatchToken.Substring">
            <summary>
            Gets a new CSS substring-match token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssMatchToken.Suffix">
            <summary>
            Gets a new CSS suffix-match token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssMatchToken.Not">
            <summary>
            Gets a new CSS not-match token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssNumberToken">
            <summary>
            Represents a CSS number token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssNumberToken.#ctor(System.String)">
            <summary>
            Creates a new CSS number token.
            </summary>
            <param name="number">The number to contain.</param>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssNumberToken.Value">
            <summary>
            Gets the contained number.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssRangeToken">
            <summary>
            Represents the CSS range token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssRangeToken.#ctor(System.String,System.String)">
            <summary>
            Creates a new CSS range token.
            </summary>
            <param name="start">The (hex-)string where to begin.</param>
            <param name="end">The (hex-)string where to end.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssRangeToken.ToValue">
            <summary>
            Gets a string which represents the original value.
            </summary>
            <returns>The original value.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssRangeToken.IsEmpty">
            <summary>
            Gets the status of the range.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssRangeToken.SelectedRange">
            <summary>
            Gets the content of the range token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssSpecialCharacter">
            <summary>
            The special character token that contains a special character such as a colon.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssCharacterToken">
            <summary>
            The character token that contains a series of characters.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssCharacterToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.Char)">
            <summary>
            Creates a new character token with the given character.
            </summary>
            <param name="type">The type of token.</param>
            <param name="data">The character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssSpecialCharacter.#ctor(System.Char,AngleSharp.Parser.Css.CssTokenType)">
            <summary>
            Creates a new special character token.
            </summary>
            <param name="c">The character to contain.</param>
            <param name="type">The actual token type.</param>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssSpecialCharacter.Colon">
            <summary>
            Gets a colon token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssSpecialCharacter.Comma">
            <summary>
            Gets a new comma token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssSpecialCharacter.Semicolon">
            <summary>
            Gets a new comma token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssSpecialCharacter.Whitespace">
            <summary>
            Gets a new comma token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssStringToken">
            <summary>
            Represents a CSS string token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssStringToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.String,System.Boolean)">
            <summary>
            Creates a new CSS string token.
            </summary>
            <param name="type">The exact type.</param>
            <param name="data">The string data.</param>
            <param name="bad">If the string was bad (optional).</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssStringToken.Plain(System.String,System.Boolean)">
            <summary>
            Creates a new CSS string token (plain string).
            </summary>
            <param name="data">The string data.</param>
            <param name="bad">If the string was bad (optional).</param>
            <returns>The created string token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssStringToken.Url(AngleSharp.Parser.Css.CssTokenType,System.String,System.Boolean)">
            <summary>
            Creates a new CSS string token (URL string).
            </summary>
            <param name="token">The token type (url, urlprefix, domain).</param>
            <param name="data">The URL string data.</param>
            <param name="bad">If the URL was bad (optional).</param>
            <returns>The created URL string token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssStringToken.ToValue">
            <summary>
            Gets a string which represents the original value.
            </summary>
            <returns>The original value.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssStringToken.IsBad">
            <summary>
            Gets if the data is bad.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssUnitToken">
            <summary>
            Represents a CSS unit token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssUnitToken.#ctor(AngleSharp.Parser.Css.CssTokenType,System.String,System.String)">
            <summary>
            Creates a new CSS unit token.
            </summary>
            <param name="type">The exact type.</param>
            <param name="value">The value.</param>
            <param name="dimension">The unit (dimension).</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssUnitToken.Percentage(System.String)">
            <summary>
            Creates a new percentage unit token.
            </summary>
            <param name="value">The value.</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssUnitToken.Dimension(System.String,System.String)">
            <summary>
            Creates a new dimension unit token.
            </summary>
            <param name="value">The value.</param>
            <param name="dimension">The unit (dimension).</param>
            <returns>The created token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssUnitToken.ToValue">
            <summary>
            Gets a string which represents the original value.
            </summary>
            <returns>The original value.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssUnitToken.Value">
            <summary>
            Gets the contained data.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Css.CssUnitToken.Unit">
            <summary>
            Gets the contained unit.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlTokenType">
            <summary>
            An enumation of all possible tokens.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTokenType.DOCTYPE">
            <summary>
            The DOCTYPE token.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTokenType.StartTag">
            <summary>
            The start tag token to mark open tags.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTokenType.EndTag">
            <summary>
            The end tag token to mark ending tags.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTokenType.Comment">
            <summary>
            The comment tag to mark comments.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTokenType.Character">
            <summary>
            The character token to mark a character data.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTokenType.EOF">
            <summary>
            The End-Of-File token to mark the end.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.CharExtensions">
            <summary>
            Useful methods for chars.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.FromHex(System.Char)">
            <summary>
            Converts a given character from the hex representation (0-9A-Fa-f) to an integer.
            </summary>
            <param name="c">The character to convert.</param>
            <returns>The integer value or undefined behavior if invalid.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.ToHex(System.Byte)">
            <summary>
            Transforms the given number to a hexadecimal string.
            </summary>
            <param name="num">The number (0-255).</param>
            <returns>A 2 digit upper case hexadecimal string.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.ToHex(System.Char)">
            <summary>
            Transforms the given character to a hexadecimal string.
            </summary>
            <param name="character">The single character.</param>
            <returns>A minimal digit lower case hexadecimal string.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsInRange(System.Char,System.Int32,System.Int32)">
            <summary>
            Determines if the given character is in the given range.
            </summary>
            <param name="c">The character to examine.</param>
            <param name="lower">The lower bound of the range.</param>
            <param name="upper">The upper bound of the range.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsUppercaseAscii(System.Char)">
            <summary>
            Determines if the given character is a uppercase character (A-Z) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#uppercase-ascii-letters
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsLowercaseAscii(System.Char)">
            <summary>
            Determines if the given character is a lowercase character (a-z) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#lowercase-ascii-letters
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsAlphanumericAscii(System.Char)">
            <summary>
            Determines if the given character is a alphanumeric character (0-9a-zA-z) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#alphanumeric-ascii-characters
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsHex(System.Char)">
            <summary>
            Determines if the given character is a hexadecimal (0-9a-fA-F) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#ascii-hex-digits
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsNonAscii(System.Char)">
            <summary>
            Gets if the character is actually a non-ascii character.
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsNonPrintable(System.Char)">
            <summary>
            Gets if the character is actually a non-printable (special) character.
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsLetter(System.Char)">
            <summary>
            Gets if the character is actually a (A-Z,a-z) letter.
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsName(System.Char)">
            <summary>
            Gets if the character is actually a name character.
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsNameStart(System.Char)">
            <summary>
            Determines if the given character is a valid character for starting an identifier.
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsLineBreak(System.Char)">
            <summary>
            Determines if the given character is a line break character as specified here:
            http://www.w3.org/TR/html401/struct/text.html#h-9.3.2
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsSpaceCharacter(System.Char)">
            <summary>
            Determines if the given character is a space character as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#space-character
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsWhiteSpaceCharacter(System.Char)">
            <summary>
            Determines if the given character is a white-space character as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#white_space
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsDigit(System.Char)">
            <summary>
            Determines if the given character is a digit (0-9) as specified here:
            http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#ascii-digits
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.CharExtensions.IsUrlCodePoint(System.Char)">
            <summary>
            Determines if the given character is a valid url code point as specified here:
            http://url.spec.whatwg.org/#url-code-points
            </summary>
            <param name="c">The character to examine.</param>
            <returns>The result of the test.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Html.ForeignHelpers">
            <summary>
            A collection of useful helpers when working with SVG.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.ForeignHelpers.SetAdjustedAttribute(AngleSharp.DOM.Element,System.String,System.String)">
            <summary>
            Adds the attribute with the adjusted prefix, namespace and name.
            </summary>
            <param name="element">The element to host the attribute.</param>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
        </member>
        <member name="T:AngleSharp.Css.Color">
            <summary>
            Represents a color value.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.Black">
            <summary>
            The color #000000.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.White">
            <summary>
            The color #FFFFFF.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.Red">
            <summary>
            The color #FF0000.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.Magenta">
            <summary>
            The color #FF00FF.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.Green">
            <summary>
            The color #008000.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.PureGreen">
            <summary>
            The color #00FF00.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.Blue">
            <summary>
            The color #0000FF.
            </summary>
        </member>
        <member name="F:AngleSharp.Css.Color.Transparent">
            <summary>
            The color #00000000.
            </summary>
        </member>
        <member name="M:AngleSharp.Css.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a CSS color type without any transparency (alpha = 100%).
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
        </member>
        <member name="M:AngleSharp.Css.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a CSS color type.
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
            <param name="a">The alpha value.</param>
        </member>
        <member name="M:AngleSharp.Css.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Double)">
            <summary>
            Creates a CSS color type.
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
            <param name="a">The alpha value between 0 and 1.</param>
        </member>
        <member name="M:AngleSharp.Css.Color.FromRgba(System.Byte,System.Byte,System.Byte,System.Double)">
            <summary>
            Returns the color from the given primitives.
            </summary>
            <param name="r">The value for red.</param>
            <param name="g">The value for green.</param>
            <param name="b">The value for blue.</param>
            <param name="a">The value for alpha.</param>
            <returns>The CSS color value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.FromName(System.String)">
            <summary>
            Returns the color with the given name.
            </summary>
            <param name="name">The name of the color.</param>
            <returns>The CSS color value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns the color from the given primitives without any alpha (non-transparent).
            </summary>
            <param name="r">The value for red.</param>
            <param name="g">The value for green.</param>
            <param name="b">The value for blue.</param>
            <returns>The CSS color value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.FromHex(System.String)">
            <summary>
            Returns the color from the given hex string.
            </summary>
            <param name="color">The hex string like fff or abc123 or AA126B etc.</param>
            <returns>The CSS color value.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.TryFromHex(System.String,AngleSharp.Css.Color@)">
            <summary>
            Returns the color from the given hex string if it can be converted, otherwise
            the color is not set.
            </summary>
            <param name="color">The hexadecimal reresentation of the color.</param>
            <param name="value">The color value to be created.</param>
            <returns>The status if the string can be converted.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.FromHsl(System.Single,System.Single,System.Single)">
            <summary>
            Returns the color that represents the given HSL values.
            </summary>
            <param name="h">The color angle (between 0 and 1).</param>
            <param name="s">The saturation (between 0 and 1).</param>
            <param name="l">The light value (between 0 and 1).</param>
            <returns>The CSS color.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.FromHsla(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the color that represents the given HSL values.
            </summary>
            <param name="h">The color angle (between 0 and 1).</param>
            <param name="s">The saturation (between 0 and 1).</param>
            <param name="l">The light value (between 0 and 1).</param>
            <param name="alpha">The alpha value (between 0 and 1).</param>
            <returns>The CSS color.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.op_Equality(AngleSharp.Css.Color,AngleSharp.Css.Color)">
            <summary>
            Compares two colors and returns a boolean indicating if the two do match.
            </summary>
            <param name="a">The first color to use.</param>
            <param name="b">The second color to use.</param>
            <returns>True if both colors are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.op_Inequality(AngleSharp.Css.Color,AngleSharp.Css.Color)">
            <summary>
            Compares two colors and returns a boolean indicating if the two do not match.
            </summary>
            <param name="a">The first color to use.</param>
            <param name="b">The second color to use.</param>
            <returns>True if both colors are not equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.Equals(AngleSharp.Css.Color)">
            <summary>
            Checks two colors for equality.
            </summary>
            <param name="other">The other color.</param>
            <returns>True if both colors or equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.Equals(System.Object)">
            <summary>
            Tests if another object is equal to this object.
            </summary>
            <param name="obj">The object to test with.</param>
            <returns>True if the two objects are equal, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.GetHashCode">
            <summary>
            Returns a hash code that defines the current color.
            </summary>
            <returns>The integer value of the hashcode.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.Mix(AngleSharp.Css.Color,AngleSharp.Css.Color)">
            <summary>
            Mixes two colors using alpha compositing as described here:
            http://en.wikipedia.org/wiki/Alpha_compositing
            </summary>
            <param name="above">The first color (above) with transparency.</param>
            <param name="below">The second color (below the first one) without transparency.</param>
            <returns>The outcome in the crossing section.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.Mix(System.Double,AngleSharp.Css.Color,AngleSharp.Css.Color)">
            <summary>
            Mixes two colors using alpha compositing as described here:
            http://en.wikipedia.org/wiki/Alpha_compositing
            </summary>
            <param name="alpha">The mixing parameter.</param>
            <param name="above">The first color (above) (no transparency).</param>
            <param name="below">The second color (below the first one) (no transparency).</param>
            <returns>The outcome in the crossing section.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.ToString">
            <summary>
            Returns a string representing the color in ARGB hex.
            </summary>
            <returns>The ARGB string.</returns>
        </member>
        <member name="M:AngleSharp.Css.Color.ToCss">
            <summary>
            Returns a CSS representation of the length.
            </summary>
            <returns>The CSS value string.</returns>
        </member>
        <member name="P:AngleSharp.Css.Color.Value">
            <summary>
            Gets the Int32 value of the color.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Color.A">
            <summary>
            Gets the alpha part of the color.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Color.Alpha">
            <summary>
            Gets the alpha part of the color in percent (0..1).
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Color.R">
            <summary>
            Gets the red part of the color.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Color.G">
            <summary>
            Gets the green part of the color.
            </summary>
        </member>
        <member name="P:AngleSharp.Css.Color.B">
            <summary>
            Gets the blue part of the color.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlTreeMode">
            <summary>
            Possible insertation mode values.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.Initial">
            <summary>
            Initial insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.BeforeHtml">
            <summary>
            Before the html tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.BeforeHead">
            <summary>
            Before the head tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InHead">
            <summary>
            Within the head tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InHeadNoScript">
            <summary>
            Within the head tag in a noscript section.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.AfterHead">
            <summary>
            After the head tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InBody">
            <summary>
            Within the body tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.Text">
            <summary>
            Within some text area insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InTable">
            <summary>
            Within a table tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InCaption">
            <summary>
            Within the table caption tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InColumnGroup">
            <summary>
            Within the column group tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InTableBody">
            <summary>
            Within the table body tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InRow">
            <summary>
            Within a table row tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InCell">
            <summary>
            Within a table division tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InSelect">
            <summary>
            Within a select tag insertation mode.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InSelectInTable">
            <summary>
            Within a select tag in a table.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InTemplate">
            <summary>
            Within the template tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.AfterBody">
            <summary>
            After the body tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.InFrameset">
            <summary>
            Within the frameset tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.AfterFrameset">
            <summary>
            After the frameset tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.AfterAfterBody">
            <summary>
            After the after the body tag.
            </summary>
        </member>
        <member name="F:AngleSharp.Parser.Html.HtmlTreeMode.AfterAfterFrameset">
            <summary>
            Once we are far behind the frameset tag.
            </summary>
        </member>
        <member name="T:AngleSharp.DocumentEncoding">
            <summary>
            Various HTML encoding helpers.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.UTF8">
            <summary>
            Gets the UTF-8 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.UTF16BE">
            <summary>
            Gets the UTF-16 (Big Endian) encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.UTF16LE">
            <summary>
            Gets the UTF-16 (Little Endian) encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.UTF32LE">
            <summary>
            Gets the UTF-32 (Little Endian) encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.UTF32BE">
            <summary>
            Gets the UTF-32 (Little Endian) encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows874">
            <summary>
            Gets the Windows-874 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1250">
            <summary>
            Gets the Windows-1250 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1251">
            <summary>
            Gets the Windows-1251 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1252">
            <summary>
            Gets the Windows-1252 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1253">
            <summary>
            Gets the Windows-1253 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1254">
            <summary>
            Gets the Windows-1254 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1255">
            <summary>
            Gets the Windows-1255 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1256">
            <summary>
            Gets the Windows-1256 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Windows1257">
            <summary>
            Gets the Windows-1257 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.GB18030">
            <summary>
            Gets the chinese government standard encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Big5">
            <summary>
            Gets the Big5 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Latin5">
            <summary>
            Gets the iso-8859-5 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Latin2">
            <summary>
            Gets the iso-8859-2 encoding.
            </summary>
        </member>
        <member name="F:AngleSharp.DocumentEncoding.Latin13">
            <summary>
            Gets the iso-8859-13 encoding.
            </summary>
        </member>
        <member name="M:AngleSharp.DocumentEncoding.Extract(System.String)">
            <summary>
            Tries to extract the encoding from the given http-equiv content string.
            </summary>
            <param name="content">The value of the attribute.</param>
            <returns>The extracted encoding or an empty string.</returns>
        </member>
        <member name="M:AngleSharp.DocumentEncoding.IsSupported(System.String)">
            <summary>
            Detects if a valid encoding has been found in the given charset string.
            </summary>
            <param name="charset">The parsed charset string.</param>
            <returns>True if a valid encdoing has been found, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DocumentEncoding.Resolve(System.String)">
            <summary>
            Resolves an Encoding instance given by the charset string.
            If the desired encoding is not found (or supported), then
            UTF-8 will be returned.
            </summary>
            <param name="charset">The charset string.</param>
            <returns>An instance of the Encoding class or null.</returns>
        </member>
        <member name="M:AngleSharp.DocumentEncoding.Suggest(System.String)">
            <summary>
            Suggests an Encoding for the given local.
            </summary>
            <param name="local">The local defined by the BCP 47 language tag.</param>
            <returns>The suggested encoding.</returns>
        </member>
        <member name="M:AngleSharp.DocumentEncoding.GetEncoding(System.String)">
            <summary>
            Gets the encoding for lesser used charsets. This might result in an
            exception depending on the platform (mostly Windows Phone *).
            Exceptions are handled by returning UTF8. That should work well in
            most scenarios.
            </summary>
            <param name="name">The name of the charset.</param>
            <returns>The encoding for the given charset.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Html.MathMLHelpers">
            <summary>
            A collection of useful helpers when working with SVG.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.MathMLHelpers.AdjustMathMLAttributeName(System.String)">
            <summary>
            Adjusts the attribute name to the correct capitalization.
            </summary>
            <param name="attributeName">The name of adjust.</param>
            <returns>The name with the correct capitalization.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Collections.HtmlCollection`1">
            <summary>
            A specialized collection containing elements of type T.
            </summary>
            <typeparam name="T">The type of elements that can be contained.</typeparam>
        </member>
        <member name="M:AngleSharp.DOM.Collections.HtmlCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates a new list of elements.
            </summary>
            <param name="elements">The elements to use.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.HtmlCollection`1.#ctor(AngleSharp.DOM.INode,System.Boolean,System.Predicate{`0})">
            <summary>
            Creates a new live collection for the given parent.
            </summary>
            <param name="parent">The parent of this collection.</param>
            <param name="deep">[Optional] Determines if recursive search is activated.</param>
            <param name="predicate">[Optional] The predicate function for picking elements.</param>
        </member>
        <member name="T:AngleSharp.DOM.StyleSheetList">
            <summary>
            A collection of CSS elements.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.StyleSheetList.#ctor(AngleSharp.DOM.INode)">
            <summary>
            Creates a new stylesheet class.
            </summary>
            <param name="parent">The parent responsible for this list.</param>
        </member>
        <member name="M:AngleSharp.DOM.StyleSheetList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the stylesheets.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:AngleSharp.DOM.StyleSheetList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheetList.Item(System.Int32)">
            <summary>
            Gets the stylesheet at the specified index.
            If index is greater than or equal to the number
            of style sheets in the list, this returns null.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>The stylesheet.</returns>
        </member>
        <member name="P:AngleSharp.DOM.StyleSheetList.Length">
            <summary>
            Gets the number of elements in the list of stylesheets.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Entity">
            <summary>
            Represents an entity node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Entity.#ctor">
            <summary>
            Creates a new entity node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Entity.#ctor(System.String)">
            <summary>
            Creates a new entity node.
            </summary>
            <param name="name">Name of the entity.</param>
        </member>
        <member name="M:AngleSharp.DOM.Entity.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Entity.PublicId">
            <summary>
            Gets the public identiifer.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.SystemId">
            <summary>
            Gets the system identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.NotationName">
            <summary>
            Gets the notation name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.InputEncoding">
            <summary>
            Gets the used input encoding.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.XmlEncoding">
            <summary>
            Gets the used XML encoding.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.XmlVersion">
            <summary>
            Gets the used XML version.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.TextContent">
            <summary>
            Gets or sets the entity's value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Entity.NodeValue">
            <summary>
            Gets or sets the value of the entity.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Comment">
            <summary>
            Represents a node that contains a comment.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Comment.#ctor">
            <summary>
            Creates a new comment node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Comment.#ctor(System.String)">
            <summary>
            Creates a new comment node with the given data.
            </summary>
            <param name="data">The data to be initially set.</param>
        </member>
        <member name="M:AngleSharp.DOM.Comment.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Comment.ToHtml">
            <summary>
            Returns an HTML representation of the comment node.
            </summary>
            <returns>A string containing the HTML content.</returns>
        </member>
        <member name="T:AngleSharp.DOM.DocumentType">
            <summary>
            Represents the document type node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.#ctor(System.String)">
            <summary>
            Creates a new document type node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.Before(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes before the current node.
            </summary>
            <param name="nodes">The nodes to insert before.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.After(AngleSharp.DOM.INode[])">
            <summary>
            Inserts nodes after the current node.
            </summary>
            <param name="nodes">The nodes to insert after.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.Replace(AngleSharp.DOM.INode[])">
            <summary>
            Replaces the current node with the nodes.
            </summary>
            <param name="nodes">The nodes to replace.</param>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.Remove">
            <summary>
            Removes the current element from the parent.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.DocumentType.ToHtml">
            <summary>
            Returns an HTML-code representation of the node.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.PreviousElementSibling">
            <summary>
            Gets the element immediately preceding in this node's parent's list of nodes, 
            null if the current element is the first element in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.NextElementSibling">
            <summary>
            Gets the element immediately following in this node's parent's list of nodes,
            or null if the current element is the last element in that list.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.Entities">
            <summary>
            Gets a list of defined entities.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.Notations">
            <summary>
            Gets a list of defined notations.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.Name">
            <summary>
            Gets or sets the name of the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.PublicIdentifier">
            <summary>
            Gets or sets the public ID of the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.SystemIdentifier">
            <summary>
            Gets or sets the system ID of the document type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.DocumentType.InternalSubset">
            <summary>
            Gets or sets the internal subset of the document type.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLAnchorElement">
            <summary>
            Represents an anchor element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLAnchorElement.#ctor">
            <summary>
            Creates a new anchor element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Charset">
            <summary>
            Gets or sets the character encoding for the target resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Download">
            <summary>
            Gets or sets the linked resource is intended to be downloaded rather than displayed.
            The value represent the proposed name of the file. If the name is not a valid filename of the
            underlying OS, the navigator will adapt it.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Href">
            <summary>
            Gets or sets the value of the href attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Hash">
            <summary>
            Gets or sets the fragment identifier, including the leading hash
            mark ('#'), if any, in the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Host">
            <summary>
            Gets or sets the hostname and port (if it's not the default port)
            in the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.HostName">
            <summary>
            Gets or sets the hostname in the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.PathName">
            <summary>
            Gets or sets the path name component, if any, of the
            referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Port">
            <summary>
            Gets or sets the port component, if any, of the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Protocol">
            <summary>
            Gets or sets the protocol component, including trailing
            colon (':'), of the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.UserName">
            <summary>
            Gets or sets the URL's username.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Password">
            <summary>
            Gets or sets the URL's password.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Search">
            <summary>
            Gets or sets the search element, including leading question
            mark ('?'), if any, of the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Origin">
            <summary>
            Get's the URL's origin.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.TargetLanguage">
            <summary>
            Gets or sets the language code for the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Media">
            <summary>
            Gets or sets the media HTML attribute, indicating the intended
            media for the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Name">
            <summary>
            Gets or sets the anchor name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Relation">
            <summary>
            Gets or sets the rel HTML attribute, specifying the relationship
            of the target object to the link object.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.RelationList">
            <summary>
            Gets the rel HTML attribute, as a list of tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Ping">
            <summary>
            Gets the ping HTML attribute, as a settable list of otkens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Target">
            <summary>
            Gets or sets the name of the target frame to which the resource applies.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Text">
            <summary>
            Gets or sets the text of the anchor tag (same as TextContent).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.Type">
            <summary>
            Gets or sets the type of the resource. If present, the attribute must be a valid MIME type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.IsVisited">
            <summary>
            Gets or sets if the link has been visited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAnchorElement.IsActive">
            <summary>
            Gets or sets if the link is currently active.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLAppletElement">
            <summary>
            Represents the HTML applet element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLAreaElement">
            <summary>
            Represents the area element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLAreaElement.#ctor">
            <summary>
            Creates a new area element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Download">
            <summary>
            Gets or sets the linked resource is intended to be downloaded rather than displayed.
            The value represent the proposed name of the file. If the name is not a valid filename of the
            underlying OS, the navigator will adapt it.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Href">
            <summary>
            Gets or sets the value of the href attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Hash">
            <summary>
            Gets or sets the fragment identifier, including the leading hash
            mark ('#'), if any, in the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Host">
            <summary>
            Gets or sets the hostname and port (if it's not the default port)
            in the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.HostName">
            <summary>
            Gets or sets the hostname in the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.PathName">
            <summary>
            Gets or sets the path name component, if any, of the
            referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Port">
            <summary>
            Gets or sets the port component, if any, of the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Protocol">
            <summary>
            Gets or sets the protocol component, including trailing
            colon (':'), of the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.UserName">
            <summary>
            Gets or sets the URL's username.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Password">
            <summary>
            Gets or sets the URL's password.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Search">
            <summary>
            Gets or sets the search element, including leading question
            mark ('?'), if any, of the referenced URL.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Origin">
            <summary>
            Get's the URL's origin.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.TargetLanguage">
            <summary>
            Gets or sets the language of the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Media">
            <summary>
            Gets or sets the target media of the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Relation">
            <summary>
            Gets or sets the value indicating relationships of the
            current document to the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.RelationList">
            <summary>
            Gets the value indicating relationships of the current
            document to the linked resource, as a list of tokens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Ping">
            <summary>
            Gets the ping HTML attribute, as a settable list of otkens.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.AlternativeText">
            <summary>
            Gets or sets the alternative text for the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Coordinates">
            <summary>
            Gets or sets the coordinates to define the hot-spot region.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Shape">
            <summary>
            Gets or sets the shape of the hot-spot, limited to known values.
            The known values are: circle, default. poly, rect. The missing
            value is rect.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Target">
            <summary>
            Gets or sets the browsing context in which to open the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.Type">
            <summary>
            Gets or sets the MIME type of the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.IsVisited">
            <summary>
            Gets or sets if the link has been visited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLAreaElement.IsActive">
            <summary>
            Gets or sets if the link is currently active.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLAudioElement">
            <summary>
            Represents the HTML audio element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLAudioElement.#ctor">
            <summary>
            Creates a new HTML audio element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBaseElement">
            <summary>
            Represents the HTML base element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLBaseElement.#ctor">
            <summary>
            Creates a HTML base element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBaseElement.Href">
            <summary>
            Gets or sets the base URI.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBaseElement.Target">
            <summary>
            Gets or sets the default target frame.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBaseFontElement">
            <summary>
            Represents an HTML basefont element.
            Deprecated in HTML 4.01.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBgsoundElement">
            <summary>
            Represents the HTML bgsound element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBodyElement">
            <summary>
            Represents the HTML body element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLBodyElement.#ctor">
            <summary>
            Creates a HTML body element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBodyElement.ALink">
            <summary>
            Gets or sets the color of active links (after mouse-button down, but before mouse-button up). 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBodyElement.Background">
            <summary>
            Gets or sets the URI of the background texture tile image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBodyElement.BgColor">
            <summary>
            Gets or sets the document background color.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBodyElement.Link">
            <summary>
            Gets or sets color of links that are not active and unvisited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBodyElement.Text">
            <summary>
            Gets or sets document text color.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLBodyElement.VLink">
            <summary>
            Gets or sets color of links that have been visited by the user.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLBRElement">
            <summary>
            Represents the HTML br element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLBRElement.#ctor">
            <summary>
            Creates a new HTML br element
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLButtonElement">
            <summary>
            Represents an HTML button element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLButtonElement.#ctor">
            <summary>
            Creates a new HTML button element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLButtonElement.ConstructDataSet(AngleSharp.DOM.Html.FormDataSet,AngleSharp.DOM.Html.HTMLElement)">
            <summary>
            Constucts the data set (called from a form).
            </summary>
            <param name="dataSet">The dataset to construct.</param>
            <param name="submitter">The given submitter.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.Type">
            <summary>
            Gets or sets the behavior of the button.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.FormAction">
            <summary>
            Gets or sets the URI of a resource that processes information submitted by the button.
            If specified, this attribute overrides the action attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.FormEncType">
            <summary>
            Gets or sets the type of content that is used to submit the form to the server. If specified, this
            attribute overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.FormMethod">
            <summary>
            Gets or sets the HTTP method that the browser uses to submit the form. If specified, this attribute
            overrides the method attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.FormNoValidate">
            <summary>
            Gets or sets that the form is not to be validated when it is submitted. If specified, this attribute
            overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.FormTarget">
            <summary>
            Gets or sets A name or keyword indicating where to display the response that is received after submitting
            the form. If specified, this attribute overrides the target attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.Value">
            <summary>
            Gets or sets the current value of the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.IsVisited">
            <summary>
            Gets or sets if the link has been visited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLButtonElement.IsActive">
            <summary>
            Gets or sets if the link is currently active.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLButtonElement.ButtonType">
            <summary>
            An enumeration with possible input types.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLButtonElement.ButtonType.Submit">
            <summary>
            The button submits the form.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLButtonElement.ButtonType.Reset">
            <summary>
            The button resets the form.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLButtonElement.ButtonType.Button">
            <summary>
            The button does nothing.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLButtonElement.ButtonType.Menu">
            <summary>
            The button displays a menu.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLDetailsElement">
            <summary>
            Represents the HTML details element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLDetailsElement.#ctor">
            <summary>
            Creates a new HTML details element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLDetailsElement.IsOpen">
            <summary>
            Gets or sets if the details element is open.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLDialogElement">
            <summary>
            Represents the object for HTML dialog elements.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLDirectoryElement">
            <summary>
            Represents the HTML dir element.
            This element is obsolete since HTML 4.01.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLDivElement">
            <summary>
            Represents the HTML div element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLDivElement.#ctor">
            <summary>
            Creates a new HTML div element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLDListElement">
            <summary>
            Represents the HTML dl element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLEmbedElement">
            <summary>
            Represents the embed element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLEmbedElement.#ctor">
            <summary>
            Creates a new Embed element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFieldSetElement">
            <summary>
            Represents the HTML fieldset element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFieldSetElement.#ctor">
            <summary>
            Creates a new HTML fieldset element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFieldSetElement.Type">
            <summary>
            Gets the type of input control (fieldset).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFieldSetElement.Elements">
            <summary>
            Gets the elements belonging to this field set.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFontElement">
            <summary>
            Represents a font element.
            See (19) obsolete features of [WHATWG].
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFormElement">
            <summary>
            Represents the form element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.#ctor">
            <summary>
            Creates a new HTML form element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.Submit">
            <summary>
            Submits the form element from the form element itself.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.Reset">
            <summary>
            Resets the form to the previous (default) state.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.CheckValidity">
            <summary>
            Checks if the form is valid, i.e. if all fields fulfill their requirements.
            </summary>
            <returns>True if the form is valid, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.RequestAutocomplete">
            <summary>
            Requests the input fields to be automatically filled with previous entries.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.PostToData(AngleSharp.Url)">
            <summary>
            More information can be found at:
            http://www.w3.org/html/wg/drafts/html/master/forms.html#submit-data-post
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.MailWithHeaders(AngleSharp.Url)">
            <summary>
            More information can be found at:
            http://www.w3.org/html/wg/drafts/html/master/forms.html#submit-mailto-headers
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.MailAsBody(AngleSharp.Url)">
            <summary>
            More information can be found at:
            http://www.w3.org/html/wg/drafts/html/master/forms.html#submit-mailto-body
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.GetActionUrl(AngleSharp.Url)">
            <summary>
            More information can be found at:
            http://www.w3.org/html/wg/drafts/html/master/forms.html#submit-get-action
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.SubmitAsEntityBody(AngleSharp.Url)">
            <summary>
            Submits the body of the form.
            http://www.w3.org/html/wg/drafts/html/master/forms.html#submit-body
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.NavigateTo(AngleSharp.Url,AngleSharp.Network.HttpMethod,System.IO.Stream,System.String)">
            <summary>
            Plan to navigate to an action using the specified method with the given
            entity body of the mime type.
            http://www.w3.org/html/wg/drafts/html/master/forms.html#plan-to-navigate
            </summary>
            <param name="action">The action to use.</param>
            <param name="method">The HTTP method.</param>
            <param name="body">The entity body of the request.</param>
            <param name="mime">The MIME type of the entity body.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.MutateActionUrl(AngleSharp.Url)">
            <summary>
            More information can be found at:
            http://www.w3.org/html/wg/drafts/html/master/forms.html#submit-mutate-action
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.ConstructDataSet(AngleSharp.DOM.Html.HTMLElement)">
            <summary>
            Constructs the form data set with the given submitter.
            </summary>
            <param name="submitter">[Optional] The submitter to use.</param>
            <returns>The constructed form data set.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLFormElement.CheckEncType(System.String)">
            <summary>
            Checks the encoding type of the form and returns the appropriate
            encoding type, which is either the given one, or the default one.
            </summary>
            <param name="encType">The encoding type used by the form.</param>
            <returns>A valid encoding type.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Item(System.Int32)">
            <summary>
            Gets the form element at the specified index.
            </summary>
            <param name="index">The index in the elements collection.</param>
            <returns>The element or null.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Item(System.String)">
            <summary>
            Gets the form element(s) with the specified name.
            </summary>
            <param name="name">The name or id of the element.</param>
            <returns>A collection with elements, an element or null.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Name">
            <summary>
            Gets or sets the value of the name attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Length">
            <summary>
            Gets the number of elements in the Elements collection.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Elements">
            <summary>
            Gets all the form controls belonging to this form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.AcceptCharset">
            <summary>
            Gets or sets the character encodings that are to be used for the submission.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Action">
            <summary>
            Gets or sets the form's name within the forms collection.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Autocomplete">
            <summary>
            Gets or sets if autocomplete is turned on or off.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Enctype">
            <summary>
            Gets or sets the encoding to use for sending the form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Encoding">
            <summary>
            Gets or sets the encoding to use for sending the form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Method">
            <summary>
            Gets or sets the method to use for transmitting the form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.NoValidate">
            <summary>
            Gets or sets the indicator that the form is not to be validated during submission.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.Target">
            <summary>
            Gets or sets the target name of the response to the request.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFormElement.PlannedNavigation">
            <summary>
            Gets the planned navigation task, if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFrameElement">
            <summary>
            Represents the HTML frame element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameElement.NoResize">
            <summary>
            Gets or sets if the frame cannot be resized.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLFrameSetElement">
            <summary>
            Represents the HTML frameset element.
            Obsolete since HTML 4.01.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameSetElement.Columns">
            <summary>
            Gets or sets the number of columns of frames in the frameset. .
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLFrameSetElement.Rows">
            <summary>
            Gets or sets the number of rows of frames in the frameset.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLHeadingElement">
            <summary>
            Represents the an HTML heading element (h1, h2, h3, h4, h5, h6).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLHRElement">
            <summary>
            Represents the hr element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLHRElement.#ctor">
            <summary>
            Creates a new hr element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLIFrameElement">
            <summary>
            Represents the HTML iframe element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIFrameElement.Align">
            <summary>
            Gets or sets the value of the alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIFrameElement.ContentHtml">
            <summary>
            Gets the content of the page that the nested browsing context is to contain.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIFrameElement.IsSeamless">
            <summary>
            Gets or sets the value of the seamless attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIFrameElement.IsFullscreenAllowed">
            <summary>
            Gets or sets if the frame's content can trigger the fullscreen mode.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIFrameElement.ContentWindow">
            <summary>
            Gets the frame's parent's window context.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLImageElement">
            <summary>
            Represents the image element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLImageElement.#ctor">
            <summary>
            Creates a new image element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.Source">
            <summary>
            Gets or sets the image source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.AlternativeText">
            <summary>
            Gets or sets the alternative text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.CrossOrigin">
            <summary>
            Gets or sets the cross-origin attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.UseMap">
            <summary>
            Gets or sets the usemap attribute, which indicates that the image has an associated image map.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.DisplayWidth">
            <summary>
            Gets or sets the displayed width of the image element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.DisplayHeight">
            <summary>
            Gets or sets the displayed height of the image element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.OriginalWidth">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.OriginalHeight">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.IsCompleted">
            <summary>
            Gets if the image is completely available.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLImageElement.IsMap">
            <summary>
            Gets or sets if the image element is a map.
            The attribute must not be specified on an element that does not
            have an ancestor a element with an href attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLInputElement">
            <summary>
            Represents an HTML input element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.#ctor">
            <summary>
            Creates a new HTML input element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.StepUp(System.Int32)">
            <summary>
            Increments the value by (step * n), where n defaults to 1 if not specified.
            </summary>
            <param name="n">Optional: The number of steps to take.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.StepDown(System.Int32)">
            <summary>
            Decrements the value by (step * n), where n defaults to 1 if not specified. 
            </summary>
            <param name="n">Optional: The number of steps to take.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.ConstructDataSet(AngleSharp.DOM.Html.FormDataSet,AngleSharp.DOM.Html.HTMLElement)">
            <summary>
            Constructs the data set (called from a form).
            </summary>
            <param name="dataSet">The dataset to construct.</param>
            <param name="submitter">The given submitter.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.DoStep(System.Int32)">
            <summary>
            Takes the given number of steps.
            </summary>
            <param name="n">The number of steps (pos. or neg.) to take.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.IsBetween(System.Double)">
            <summary>
            Checks if the numeric value is between min and max.
            </summary>
            <param name="value">The value to check for the range-constraint.</param>
            <returns>True if the value is between min, max otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.IsBetween(System.DateTime)">
            <summary>
            Checks if the date value is between min and max.
            </summary>
            <param name="value">The value to check for the range-constraint.</param>
            <returns>True if the value is between min, max otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.Reset">
            <summary>
            Resets the form control to its initial value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLInputElement.Check(AngleSharp.DOM.Html.IValidityState)">
            <summary>
            Checks the form control for validity.
            </summary>
            <param name="state">The element's validity state tracker.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.DefaultValue">
            <summary>
            Gets or sets the default value of the input field.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.IsDefaultChecked">
            <summary>
            Gets or sets
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.IsChecked">
            <summary>
            Gets or sets if the input element is checked or not.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Type">
            <summary>
            Gets or sets the type of the input field.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.IsIndeterminate">
            <summary>
            Gets or sets if the state if indeterminate.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.IsMultiple">
            <summary>
            Gets the multiple HTML attribute, whichindicates whether multiple items can be selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.ValueAsDate">
            <summary>
            Gets or sets the value of the element, interpreted as a date, or null
            if conversion is not possible.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.ValueAsNumber">
            <summary>
            Gets or sets the value of the element, interpreted as one of the following in order:
            1.) Time value 2.) Number 3.) otherwise NaN.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.FormAction">
            <summary>
            Gets or sets the URI of a resource that processes information submitted by the button.
            If specified, this attribute overrides the action attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.FormEncType">
            <summary>
            Gets or sets the type of content that is used to submit the form to the server. If specified, this
            attribute overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.FormMethod">
            <summary>
            Gets or sets the HTTP method that the browser uses to submit the form. If specified, this attribute
            overrides the method attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.FormNoValidate">
            <summary>
            Gets or sets that the form is not to be validated when it is submitted. If specified, this attribute
            overrides the enctype attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.FormTarget">
            <summary>
            Gets or sets A name or keyword indicating where to display the response that is received after submitting
            the form. If specified, this attribute overrides the target attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Accept">
            <summary>
            Gets or sets the accept HTML attribute, containing comma-separated list of
            file types accepted by the server when type is file.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Align">
            <summary>
            Gets or sets the alignment of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.AlternativeText">
            <summary>
            Gets or sets the alt HTML attribute, containing alternative
            text to use when type is image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Autocomplete">
            <summary>
            Gets or sets the autocomplete HTML attribute, indicating whether
            the value of the control can be automatically completed by the
            browser. Ignored if the value of the type attribute is hidden,
            checkbox, radio, file, or a button type (button, submit, reset,
            image).
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Files">
            <summary>
            Gets a list of selected files.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.List">
            <summary>
            Gets the datalist element in the same document.
            Only options that are valid values for this input element will
            be displayed. This attribute is ignored when the type
            attribute's value is hidden, checkbox, radio, file, or a button type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Maximum">
            <summary>
            Gets or sets max HTML attribute, containing the maximum (numeric
            or date-time) value for this item, which must not be less than its
            minimum (min attribute) value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Minimum">
            <summary>
            Gets or sets the min HTML attribute, containing the minimum (numeric
            or date-time) value for this item, which must not be greater than its
            maximum (max attribute) value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Pattern">
            <summary>
            Gets or sets the pattern HTML attribute, containing a regular expression
            that the control's value is checked against. The pattern must match the
            entire value, not just some subset. This attribute applies when the value
            of the type attribute is text, search, tel, url or email; otherwise it is ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Size">
            <summary>
            Gets or sets the size HTML attribute, containing size of the control. This value
            is in pixels unless the value of type is text or password, in which case, it is
            an integer number of characters. Applies only when type is set to text, search, tel,
            url, email, or password; otherwise it is ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Source">
            <summary>
            Gets or sets the src HTML attribute, which specifies a URI for the location of an
            image to display on the graphical submit button, if the value of type is image;
            otherwise it is ignored.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.Step">
            <summary>
            Gets or sets the step HTML attribute, which works with min and max to limit the
            increments at which a numeric or date-time value can be set. It can be the string
            any or a positive floating point number. If this is not set to any, the control
            accepts only values at multiples of the step value greater than the minimum.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.UseMap">
            <summary>
            Gets or sets a client-side image map.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.DisplayWidth">
            <summary>
            Gets or sets the width HTML attribute, which defines the width of the image
            displayed for the button, if the value of type is image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.DisplayHeight">
            <summary>
            Gets or sets the height HTML attribute, which defines the
            height of the image displayed for the button, if the value
            of type is image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.OriginalWidth">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.OriginalHeight">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.IsVisited">
            <summary>
            Gets or sets if the link has been visited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLInputElement.IsActive">
            <summary>
            Gets or sets if the link is currently active.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLInputElement.InputType">
            <summary>
            An enumeration with possible input types.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Hidden">
            <summary>
            The input will be hidden.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Text">
            <summary>
            A standard (1-line) text input.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Search">
            <summary>
            A search input.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Tel">
            <summary>
            A telephone number input.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Url">
            <summary>
            An URL input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Email">
            <summary>
            An email input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Password">
            <summary>
            A password input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Datetime">
            <summary>
            A datetime input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Date">
            <summary>
            A date input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Month">
            <summary>
            A month picker input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Week">
            <summary>
            A week picker input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Time">
            <summary>
            A time picker input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Number">
            <summary>
            A number input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Range">
            <summary>
            A range picker.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Color">
            <summary>
            A color picker input field.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Checkbox">
            <summary>
            A checkbox.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Radio">
            <summary>
            A radio box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.File">
            <summary>
            A file upload box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Submit">
            <summary>
            A submit button.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Image">
            <summary>
            An image input box.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Reset">
            <summary>
            A reset form button.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLInputElement.InputType.Button">
            <summary>
            A simple button.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLIsIndexElement">
            <summary>
            Represents the HTML isindex element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLIsIndexElement.#ctor">
            <summary>
            Creates a new isindex element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIsIndexElement.Form">
            <summary>
            Gets the form element containing this control or null if this control is not within the context of a form.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLIsIndexElement.Prompt">
            <summary>
            Gets or sets the prompt message.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLKeygenElement">
            <summary>
            Represents the keygen element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLKeygenElement.#ctor">
            <summary>
            Creates a new HTML keygen element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLKeygenElement.Challenge">
            <summary>
            Gets or sets the challenge attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLKeygenElement.KeyEncryption">
            <summary>
            Gets or sets the type of key used.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLKeygenElement.Type">
            <summary>
            Gets the type of input control (keygen).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLKeygenElement.Encryption">
            <summary>
            An enumeration of possible keytype values.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLKeygenElement.Encryption.RSA">
            <summary>
            The RSA encryption.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLLabelElement">
            <summary>
            Represents the HTML label element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLabelElement.Control">
            <summary>
            Gets the control that the label is assigned for if any.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLabelElement.HtmlFor">
            <summary>
            Gets or sets the ID of the labeled control. Reflects the for attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLabelElement.Form">
            <summary>
            Gets the form element that the label is assigned for if any.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLLegendElement">
            <summary>
            Represents the HTML legend element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLegendElement.Form">
            <summary>
            Gets the associated form.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLLIElement">
            <summary>
            Represents an HTML li, dd or dt tag.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLLIElement.#ctor(System.String)">
            <summary>
            Creates a new item tag.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLLinkElement">
            <summary>
            Represents the HTML link element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLLinkElement.#ctor">
            <summary>
            Creates a new HTML link element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.IsVisited">
            <summary>
            Gets or sets if the link has been visited.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.IsActive">
            <summary>
            Gets or sets if the link is currently active.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Href">
            <summary>
            Gets or sets the URI for the target resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.TargetLanguage">
            <summary>
            Gets or sets the language code for the linked resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Charset">
            <summary>
            Gets or sets the character encoding for the target resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Relation">
            <summary>
            Gets or sets the forward relationship of the linked resource from the document to the resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.RelationList">
            <summary>
            Gets the list of relations contained in the rel attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Sizes">
            <summary>
            Gets the list of sizes defined in the sizes attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Rev">
            <summary>
            Gets or sets the reverse relationship of the linked resource from the document to the resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.IsDisabled">
            <summary>
            Gets or sets if the stylesheet is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Target">
            <summary>
            Gets or sets the name of the target frame to which the resource applies.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Media">
            <summary>
            Gets or sets the use with one or more target media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Type">
            <summary>
            Gets or sets the content type of the style sheet language.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLLinkElement.Sheet">
            <summary>
            Gets the associated stylesheet.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLLinkElement.RelType">
            <summary>
            Specifies the possible values for the rel attribute.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.None">
            <summary>
            No particular relation.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Prefetch">
            <summary>
            The rel=prefetch value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Icon">
            <summary>
            The rel=icon value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Pingback">
            <summary>
            The rel=pingback value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Stylesheet">
            <summary>
            The rel=stylesheet value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Alternate">
            <summary>
            The rel=alternate value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Canonical">
            <summary>
            The rel=canonical value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Archives">
            <summary>
            The rel=archives value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Author">
            <summary>
            The rel=author value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.First">
            <summary>
            The rel=first value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Help">
            <summary>
            The rel=help value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Sidebar">
            <summary>
            The rel=sidebar value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Tag">
            <summary>
            The rel=tag value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Search">
            <summary>
            The rel=search value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Index">
            <summary>
            The rel=index value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.License">
            <summary>
            The rel=license value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Up">
            <summary>
            The rel=up value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Next">
            <summary>
            The rel=next value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Last">
            <summary>
            The rel=last value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLLinkElement.RelType.Prev">
            <summary>
            The rel=prev value.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMapElement">
            <summary>
            Represents the HTML map element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMapElement.Name">
            <summary>
            Gets or sets the value of the href attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMapElement.Areas">
            <summary>
            Gets a collection representing the area elements
            associated to this map.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMapElement.Images">
            <summary>
            Gets a collection representing the img and object
            elements associated to this element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMenuElement">
            <summary>
            Represents the HTML menu element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMenuElement.#ctor">
            <summary>
            Creates a new HTML menu element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuElement.Type">
            <summary>
            Gets or sets the type of the menu element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMenuElement.Label">
            <summary>
            Gets or sets the text label of the menu element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMenuElement.MenuType">
            <summary>
            All possible values for the type of the menu.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMenuElement.MenuType.Popup">
            <summary>
            As a context menu.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLMenuElement.MenuType.Toolbar">
            <summary>
            Represented as a toolbar.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLMetaElement">
            <summary>
            Represents the HTML meta element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLMetaElement.#ctor">
            <summary>
            Creates a new HTML meta element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMetaElement.Content">
            <summary>
            Gets or sets the content attribute, with associated information.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMetaElement.HttpEquivalent">
            <summary>
            Gets or sets the HTTP response header name.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMetaElement.Scheme">
            <summary>
            Gets or sets the select form of content.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLMetaElement.Name">
            <summary>
            Gets or sets the value of the name attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLModElement">
            <summary>
            Represents the HTML modifier (ins / del) element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLModElement.Citation">
            <summary>
            Gets or sets the value that contains a URI of a resource
            explaining the change.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLModElement.DateTime">
            <summary>
            Gets or sets the value that contains date-and-time string
            representing a timestamp for the change.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLHeadElement">
            <summary>
            Represents the HTML head element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLHtmlElement">
            <summary>
            Represents the HTML html element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLHtmlElement.#ctor">
            <summary>
            Creates a new HTML html tag.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLObjectElement">
            <summary>
            Represents the HTML object element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.Source">
            <summary>
            Gets or sets the address of the resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.Type">
            <summary>
            Gets or sets the type of the resource. If present, the attribute must be a valid MIME type.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.TypeMustMatch">
            <summary>
            Gets or sets an attribute whose presence indicates that the resource specified by the data
            attribute is only to be used if the value of the type attribute and the Content-Type of the
            aforementioned resource match.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.UseMap">
            <summary>
            Gets or sets the associated image map of the object if the object element represents an image.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.DisplayWidth">
            <summary>
            Gets or sets the width of the object element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.DisplayHeight">
            <summary>
            Gets or sets the height of the object element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.ContentDocument">
            <summary>
            Gets the active document of the object element's nested browsing context, if it has one;
            otherwise returns null.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLObjectElement.ContentWindow">
            <summary>
            Gets the object element's nested browsing context, if it has one; otherwise returns null.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLOListElement">
            <summary>
            Represents the HTML ordered list (ol) element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOListElement.IsReversed">
            <summary>
            Gets or sets if the order is reversed.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOListElement.Start">
            <summary>
            Gets or sets the start of the numbering.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOListElement.Type">
            <summary>
            Gets or sets a value within [ 1, a, A, i, I ].
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLOptGroupElement">
            <summary>
            Represents the HTML optgroup element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLOptGroupElement.#ctor">
            <summary>
            Creates a new HTML optgroup element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptGroupElement.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptGroupElement.IsDisabled">
            <summary>
            Gets or sets if the optgroup is enabled or disabled.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLOptionElement">
            <summary>
            Represents the HTML option element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLOptionElement.#ctor">
            <summary>
            Creates a new HTML option element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.IsDisabled">
            <summary>
            Gets or sets if the option is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.Form">
            <summary>
            Gets the associated HTML form element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.Index">
            <summary>
            Gets the index of the option element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.Text">
            <summary>
            Gets or sets the text of the option.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.IsDefaultSelected">
            <summary>
            Gets or sets if the option is selected by default.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLOptionElement.IsSelected">
            <summary>
            Gets or sets if the option is currently selected.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLParagraphElement">
            <summary>
            Represents the HTML paragraph element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLParagraphElement.#ctor">
            <summary>
            Creates a new HTML paragraph element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLParagraphElement.Align">
            <summary>
            Gets or sets the value of the alignment attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLParamElement">
            <summary>
            Represents a param element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLParamElement.#ctor">
            <summary>
            Creates a new HTML param element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLParamElement.Value">
            <summary>
            Gets or sets the value of the value attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLParamElement.Name">
            <summary>
            Gets or sets the value of the name attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLPreElement">
            <summary>
            Represents the HTML pre element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLQuoteElement">
            <summary>
            Rperesents the HTML quote element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLQuoteElement.Citation">
            <summary>
            Gets or sets the citation.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLScriptElement">
            <summary>
            Represents an HTML script element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLScriptElement.#ctor">
            <summary>
            Creates a new HTML script element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLScriptElement.Run">
            <summary>
            More information available at:
            http://www.w3.org/TR/html5/scripting-1.html#execute-the-script-block
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLScriptElement.Prepare">
            <summary>
            More information available at:
            http://www.w3.org/TR/html5/scripting-1.html#prepare-a-script
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.ScriptLanguage">
            <summary>
            Gets the language of the script.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.Source">
            <summary>
            Gets or sets athe address of the resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.Type">
            <summary>
            Gets or sets the type of an embedded resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.CharacterSet">
            <summary>
            Gets or sets the character encoding of the external script resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.Text">
            <summary>
            Gets or sets the text in the script element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.CrossOrigin">
            <summary>
            Gets or sets how the element handles crossorigin requests.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.IsDeferred">
            <summary>
            Gets or sets if the script should be deferred.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLScriptElement.IsAsync">
            <summary>
            Gets or sets if script should execute asynchronously.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLSelectElement">
            <summary>
            Represents the select element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSelectElement.#ctor">
            <summary>
            Creates a new HTML select element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSelectElement.AddOption(AngleSharp.DOM.Html.IHtmlOptionElement,AngleSharp.DOM.Html.IHtmlElement)">
            <summary>
            Adds the element to the options collection.
            </summary>
            <param name="element">The option element to add.</param>
            <param name="before">The following element.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSelectElement.AddOption(AngleSharp.DOM.Html.IHtmlOptionsGroupElement,AngleSharp.DOM.Html.IHtmlElement)">
            <summary>
            Adds the element to the options collection.
            </summary>
            <param name="element">The group element to add.</param>
            <param name="before">The following element.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSelectElement.RemoveOptionAt(System.Int32)">
            <summary>
            Removes the option with the given index from the collection.
            </summary>
            <param name="index">The index of the element to remove.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSelectElement.Reset">
            <summary>
            Resets the form control to its initial value.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSelectElement.Check(AngleSharp.DOM.Html.IValidityState)">
            <summary>
            Checks the form control for validity.
            </summary>
            <param name="state">The element's validity state tracker.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.Item(System.Int32)">
            <summary>
            Gets or sets an option element.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>The option at the given index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.Size">
            <summary>
            Gets or sets the size of the element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.IsRequired">
            <summary>
            Gets or sets if the field is required.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.SelectedOptions">
            <summary>
            Gets the set of options that are selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.SelectedIndex">
            <summary>
            Gets the index of the first selected option element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.Value">
            <summary>
            Gets or sets the value of this form control, that is, of the first selected option.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.Length">
            <summary>
            Gets the number of option elements in this select element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.IsMultiple">
            <summary>
            Gets the multiple HTML attribute, whichindicates whether multiple items can be selected.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.Options">
            <summary>
            Gets the set of option elements contained by this element. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSelectElement.Type">
            <summary>
            Gets the form control's type.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLSelectElement.SelectType">
            <summary>
            An enumeration with possible select types.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLSelectElement.SelectType.SelectOne">
            <summary>
            Only one element can be selected.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLSelectElement.SelectType.SelectMultiple">
            <summary>
            Multiple elements can be selected.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLSourceElement">
            <summary>
            Represents the HTML source element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLSourceElement.#ctor">
            <summary>
            Creates a new HTML source element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSourceElement.Source">
            <summary>
            Gets or sets the URL for the media resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSourceElement.Media">
            <summary>
            Gets or sets the intended type of the media resource.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLSourceElement.Type">
            <summary>
            Gets or sets the type of the media source.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLSpanElement">
            <summary>
            Represents the HTML span element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLStyleElement">
            <summary>
            Represents the HTML style element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLStyleElement.#ctor">
            <summary>
            Creates an HTML style element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLStyleElement.IsScoped">
            <summary>
            Gets or sets if the style is scoped.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLStyleElement.Sheet">
            <summary>
            Gets the associated style sheet.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLStyleElement.IsDisabled">
            <summary>
            Gets or sets if the style is enabled or disabled.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLStyleElement.Media">
            <summary>
            Gets or sets the use with one or more target media.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLStyleElement.Type">
            <summary>
            Gets or sets the content type of the style sheet language.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableCaptionElement">
            <summary>
            Represents the HTML caption element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableCaptionElement.Align">
            <summary>
            Gets or sets the value of the alignment attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableCaptionElement.CaptionAlignment">
            <summary>
            Specifies the position of the caption with respect to the table.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableCaptionElement.CaptionAlignment.Top">
            <summary>
            The caption is at the top of the table. This is the default value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableCaptionElement.CaptionAlignment.Bottom">
            <summary>
            The caption is at the bottom of the table.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableCaptionElement.CaptionAlignment.Left">
            <summary>
            The caption is at the left of the table.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableCaptionElement.CaptionAlignment.Right">
            <summary>
            The caption is at the rigzt of the table.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableColElement">
            <summary>
            Represents the HTML column element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColElement.Align">
            <summary>
            Gets or sets the value of the horizontal alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColElement.Span">
            <summary>
            Gets or sets the number of columns in a group or affected by a grouping.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColElement.VAlign">
            <summary>
            Gets or sets the value of the vertical alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableColElement.Width">
            <summary>
            Gets or sets the value of the width attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableElement">
            <summary>
            Represents the HTML table element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.InsertRowAt(System.Int32)">
            <summary>
            Inserts a new empty row in the table. The new row is inserted immediately before
            and in the same section as the current indexth row in the table. If index is -1
            or equal to the number of rows, the new row is appended. In addition, when the
            table is empty the row is inserted into a TBODY which is created and inserted
            into the table.
            </summary>
            <param name="index">The row number where to insert a new row. This index starts
            from 0 and is relative to the logical order (not document order) of all the rows
            contained inside the table.</param>
            <returns>The inserted table row.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.RemoveRowAt(System.Int32)">
            <summary>
            Deletes a table row.
            </summary>
            <param name="index">The index of the row to be deleted. This index starts from
            0 and is relative to the logical order (not document order) of all the rows
            contained inside the table. If the index is -1 the last row in the table is
            deleted.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.CreateHead">
            <summary>
            Create a table header row or return an existing one.
            </summary>
            <returns>A new table header element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.CreateBody">
            <summary>
            Creates a new table body and appends it.
            </summary>
            <returns>The created table body.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.DeleteHead">
            <summary>
            Delete the header from the table, if one exists. 
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.CreateFoot">
            <summary>
            Create a table footer row or return an existing one.
            </summary>
            <returns>A footer element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.DeleteFoot">
            <summary>
            Delete the footer from the table, if one exists.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.CreateCaption">
            <summary>
            Create a new table caption object or return an existing one.
            </summary>
            <returns>A caption element.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableElement.DeleteCaption">
            <summary>
            Delete the table caption, if one exists.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Caption">
            <summary>
            Gets or sets the assigned caption element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Head">
            <summary>
            Gets or sets the assigned head section.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Bodies">
            <summary>
            Gets the assigned body sections.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Foot">
            <summary>
            Gets or sets the assigned foot section.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Rows">
            <summary>
            Gets the assigned table rows.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Align">
            <summary>
            Gets or sets the value of the alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.BgColor">
            <summary>
            Gets or sets the value of the background color attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Border">
            <summary>
            Gets or sets the value of the border attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.CellPadding">
            <summary>
            Gets or sets the value of the cellpadding (padding within a cell) attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.CellSpacing">
            <summary>
            Gets or sets the value of the cellspacing (spacing between the cells) attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Frame">
            <summary>
            Gets or sets the value of the frame attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Rules">
            <summary>
            Gets or sets the value of the rules attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Summary">
            <summary>
            Gets or sets the value of the summary attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableElement.Width">
            <summary>
            Gets or sets the value of the width attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableElement.TableRules">
            <summary>
            The list of possible table rules.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableRules.None">
            <summary>
            No rules. This is the default value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableRules.Rows">
            <summary>
            Rules will appear between rows only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableRules.Cols">
            <summary>
            Rules will appear between columns only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableRules.Groups">
            <summary>
            Rules will appear between row groups and column groups only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableRules.All">
            <summary>
            Rules will appear between all rows and columns.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableElement.TableFrames">
            <summary>
            The list of possible table frame directives.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.Void">
            <summary>
            No sides. This is the default value.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.Box">
            <summary>
            All four sides.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.Above">
            <summary>
            The top side only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.Below">
            <summary>
            The bottom side only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.HSides">
            <summary>
            The top and bottom sides only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.VSides">
            <summary>
            The right and left sides only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.LHS">
            <summary>
            The left-hand side only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.RHS">
            <summary>
            The right-hand side only.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTableElement.TableFrames.Border">
            <summary>
            All four sides.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableRowElement">
            <summary>
            Represents the HTML tr element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableRowElement.InsertCellAt(System.Int32)">
            <summary>
            Insert an empty TD cell into this row. If index is -1 or equal to the number
            of cells, the new cell is appended.
            </summary>
            <param name="index">The place to insert the cell, starting from 0.</param>
            <returns>The inserted table cell.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableRowElement.RemoveCellAt(System.Int32)">
            <summary>
            Deletes a cell from the current row.
            </summary>
            <param name="index">The index of the cell to delete, starting from 0. If the index is
            -1 the last cell in the row is deleted.</param>
            <returns>The current row.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableRowElement.Align">
            <summary>
            Gets or sets the value of the alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableRowElement.VAlign">
            <summary>
            Gets or sets the value of the vertical alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableRowElement.BgColor">
            <summary>
            Gets or sets the value of the background color attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableRowElement.Cells">
            <summary>
            Gets the assigned table cells.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableRowElement.Index">
            <summary>
            Gets the index in the logical order and not in document order. 
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableRowElement.IndexInSection">
            <summary>
            Gets the index of this row, relative to the current section starting from 0.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTableSectionElement">
            <summary>
            Represents the object for HTML table section (thead / tbody / tfoot) elements.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableSectionElement.InsertRowAt(System.Int32)">
            <summary>
            Inserts a row into this section. The new row is inserted immediately before the
            current indexth row in this section. If index is -1 or equal to the number of
            rows in this section, the new row is appended.
            </summary>
            <param name="index">The row number where to insert a new row. This index
            starts from 0 and is relative only to the rows contained inside this section,
            not all the rows in the table.</param>
            <returns>The inserted table row.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTableSectionElement.RemoveRowAt(System.Int32)">
            <summary>
            Deletes a row from this section.
            </summary>
            <param name="index">The index of the row to be deleted, or -1 to delete the last
            row. This index starts from 0 and is relative only to the rows contained inside
            this section, not all the rows in the table.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableSectionElement.Align">
            <summary>
            Gets or sets the value of the horizontal alignment attribute.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableSectionElement.Rows">
            <summary>
            Gets the assigned table rows.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTableSectionElement.VAlign">
            <summary>
            Gets or sets the value of the vertical alignment attribute.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTextAreaElement">
            <summary>
            Represents a HTML textarea element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTextAreaElement.#ctor">
            <summary>
            Creates a new HTML textarea element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTextAreaElement.ConstructDataSet(AngleSharp.DOM.Html.FormDataSet,AngleSharp.DOM.Html.HTMLElement)">
            <summary>
            Constucts the data set (called from a form).
            </summary>
            <param name="dataSet">The dataset to construct.</param>
            <param name="submitter">The given submitter.</param>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTextAreaElement.Check(AngleSharp.DOM.Html.IValidityState)">
            <summary>
            Checks the form control for validity.
            </summary>
            <param name="state">The element's validity state tracker.</param>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextAreaElement.Wrap">
            <summary>
            Gets or sets the wrap HTML attribute, indicating how the control wraps text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextAreaElement.DefaultValue">
            <summary>
            Gets or sets the default value of the input field.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextAreaElement.TextLength">
            <summary>
            Gets the codepoint length of the control's value.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextAreaElement.Rows">
            <summary>
            Gets or sets the rows HTML attribute, indicating
            the number of visible text lines for the control.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextAreaElement.Columns">
            <summary>
            Gets or sets the cols HTML attribute, indicating
            the visible width of the text area.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTextAreaElement.Type">
            <summary>
            Gets the type of input control (texarea).
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTextAreaElement.WrapType">
            <summary>
            An enumeration with possible wrap types.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTextAreaElement.WrapType.Soft">
            <summary>
            The text will be wrapped with tolerance.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTextAreaElement.WrapType.Hard">
            <summary>
            The text will be wrapped without tolerance.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTitleElement">
            <summary>
            Represents the title element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTitleElement.#ctor">
            <summary>
            Creates a new HTML title element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTitleElement.Text">
            <summary>
            Gets or sets the text of the title.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTrackElement">
            <summary>
            Represents the HTML track element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLTrackElement.#ctor">
            <summary>
            Creates a new HTML track element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTrackElement.Kind">
            <summary>
            Gets or sets the kind of the track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTrackElement.Source">
            <summary>
            Gets or sets the media source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTrackElement.SourceLanguage">
            <summary>
            Gets or sets the language of the source.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTrackElement.Label">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTrackElement.IsDefault">
            <summary>
            Gets or sets if given track is the default track.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLTrackElement.ReadyState">
            <summary>
            Gets the ready state of the given track.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLTrackElement.TrackKind">
            <summary>
            An enumeration with various track kinds.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTrackElement.TrackKind.Subtitles">
            <summary>
            A track with subtitles.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTrackElement.TrackKind.Captions">
            <summary>
            A track with captions.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTrackElement.TrackKind.Descriptions">
            <summary>
            A track with descriptions.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTrackElement.TrackKind.Chapters">
            <summary>
            A track consisting of chapters.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Html.HTMLTrackElement.TrackKind.Metadata">
            <summary>
            A track consisting only of metadata.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLUListElement">
            <summary>
            The DOM Object representing the unordered list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLUnknownElement">
            <summary>
            The class for an unknown HTML element.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Html.HTMLVideoElement">
            <summary>
            Represents the HTML video element.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Html.HTMLVideoElement.#ctor">
            <summary>
            Creates a new HTML video element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLVideoElement.DisplayWidth">
            <summary>
            Gets or sets the displayed width of the video element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLVideoElement.DisplayHeight">
            <summary>
            Gets or sets the displayed height of the video element.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLVideoElement.OriginalWidth">
            <summary>
            Gets the width of the video.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLVideoElement.OriginalHeight">
            <summary>
            Gets the height of the video.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Html.HTMLVideoElement.Poster">
            <summary>
            Gets or sets the URL to a preview image.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.ErrorExtensions">
            <summary>
            A set of useful helpers concerning errors.
            </summary>
        </member>
        <member name="M:AngleSharp.Extensions.ErrorExtensions.GetMessage(AngleSharp.ErrorCode)">
            <summary>
            Retrieves a string describing the error of a given error code.
            </summary>
            <param name="code">A specific error code.</param>
            <returns>The description of the error.</returns>
        </member>
        <member name="M:AngleSharp.Extensions.ErrorExtensions.GetCode(AngleSharp.ErrorCode)">
            <summary>
            Retrieves a number describing the error of a given error code.
            </summary>
            <param name="code">A specific error code.</param>
            <returns>The code of the error.</returns>
        </member>
        <member name="T:AngleSharp.DOM.Collections.NodeList">
            <summary>
            Represents a list of Node instances or nodes.
            </summary>
        </member>
        <member name="F:AngleSharp.DOM.Collections.NodeList._entries">
            <summary>
            The contained entries.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.#ctor">
            <summary>
            Creates a new list of nodes.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.#ctor(AngleSharp.DOM.Collections.NodeList)">
            <summary>
            Creates a copy of the list of existing nodes.
            </summary>
            <param name="existing">The list to copy.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.Add(AngleSharp.DOM.Node)">
            <summary>
            Adds a node to the list of nodes.
            </summary>
            <param name="node">The node to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.AddRange(AngleSharp.DOM.Collections.NodeList)">
            <summary>
            Adds nodes from a list of nodes.
            </summary>
            <param name="nodeList">The nodes to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.Insert(System.Int32,AngleSharp.DOM.Node)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index">The zero-based index at which the node should be inserted.</param>
            <param name="node">The node to add.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.Remove(AngleSharp.DOM.Node)">
            <summary>
            Removes the specified node from the list.
            </summary>
            <param name="node">The node to remove.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.RemoveAt(System.Int32)">
            <summary>
            Removes the node at the given index.
            </summary>
            <param name="index">The index to remove.</param>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.Contains(AngleSharp.DOM.Node)">
            <summary>
            Looks for the specified node in the list.
            </summary>
            <param name="node">The node to look for.</param>
            <returns>True if such a node exists, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the list.
            </summary>
            <returns>An IEnumerator for NodeList.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the list.
            </summary>
            <returns>An IEnumerator for NodeList.</returns>
        </member>
        <member name="M:AngleSharp.DOM.Collections.NodeList.ToHtml">
            <summary>
            Returns an HTML-code representation of the nodelist.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.NodeList.Item(System.Int32)">
            <summary>
            Gets or sets a node within the list of nodes.
            </summary>
            <param name="index">The 0-based index of the node.</param>
            <returns>The node at the specified index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.NodeList.AngleSharp#DOM#INodeList#Item(System.Int32)">
            <summary>
            Gets a node within the list of nodes.
            </summary>
            <param name="index">The 0-based index of the node.</param>
            <returns>The node at the specified index.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Collections.NodeList.Length">
            <summary>
            Gets the number of nodes in the list.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.Notation">
            <summary>
            Represents a notation node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Notation.#ctor">
            <summary>
            Creates a new notation node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.Notation.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="P:AngleSharp.DOM.Notation.PublicId">
            <summary>
            Gets or sets the value of the public identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.Notation.SystemId">
            <summary>
            Gets or sets the value of the system identifier.
            </summary>
        </member>
        <member name="T:AngleSharp.DOM.TextNode">
            <summary>
            Represents a text node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.TextNode.#ctor">
            <summary>
            Creates a new empty text node.
            </summary>
        </member>
        <member name="M:AngleSharp.DOM.TextNode.#ctor(System.String)">
            <summary>
            Creates a new text node with the given text.
            </summary>
            <param name="text">The text to set.</param>
        </member>
        <member name="M:AngleSharp.DOM.TextNode.#ctor(System.Char)">
            <summary>
            Creates a new text node with the given character.
            </summary>
            <param name="c">The character to set.</param>
        </member>
        <member name="M:AngleSharp.DOM.TextNode.Clone(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">Optional value: true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The duplicate node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.TextNode.Split(System.Int32)">
            <summary>
            Creates a new text node with the content starting at the specified offset.
            Adds the new node to the DOM as a sibling. Truncates the current node.
            </summary>
            <param name="offset">The position where the split should occur.</param>
            <returns>The freshly created text node.</returns>
        </member>
        <member name="M:AngleSharp.DOM.TextNode.ToHtml">
            <summary>
            Returns an HTML-code representation of the node.
            </summary>
            <returns>A string containing the HTML code.</returns>
        </member>
        <member name="P:AngleSharp.DOM.TextNode.IsEmpty">
            <summary>
            Gets if the TextNode is "empty".
            </summary>
        </member>
        <member name="P:AngleSharp.DOM.TextNode.Text">
            <summary>
            Gets the whole text content of adjacent nodes.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlParser">
            <summary>
            Represents the Tree construction as specified in
            8.2.5 Tree construction, on the following page:
            http://www.w3.org/html/wg/drafts/html/master/syntax.html
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.#ctor(System.String,AngleSharp.IConfiguration)">
            <summary>
            Creates a new instance of the HTML parser with an new document
            based on the given source.
            </summary>
            <param name="source">The source code as a string.</param>
            <param name="configuration">[Optional] The configuration to use.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.#ctor(System.IO.Stream,AngleSharp.IConfiguration)">
            <summary>
            Creates a new instance of the HTML parser with an new document
            based on the given stream.
            </summary>
            <param name="stream">The stream to use as source.</param>
            <param name="configuration">[Optional] The configuration to use.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.#ctor(AngleSharp.DOM.Document)">
            <summary>
            Creates a new instance of the HTML parser with the specified document
            based on the given source manager.
            </summary>
            <param name="document">The document instance to be constructed.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ParseAsync">
            <summary>
            Parses the given source asynchronously and creates the document.
            </summary>
            <returns>The task which could be awaited or continued differently.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ParseAsync(System.Threading.CancellationToken)">
            <summary>
            Parses the given source asynchronously and creates the document.
            </summary>
            <param name="cancelToken">The cancellation token to use.</param>
            <returns>The task which could be awaited or continued differently.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Parse">
            <summary>
            Parses the given source and creates the document.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.SwitchToFragment(AngleSharp.DOM.Element)">
            <summary>
            Switches to the fragment algorithm with the specified context element.
            </summary>
            <param name="context">The context element where the algorithm is applied to.</param>
            <returns>The current instance for chaining.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Reset(AngleSharp.DOM.Node)">
            <summary>
            Resets the current insertation mode to the rules according to the algorithm specified
            in 8.2.3.1 The insertion mode.
            http://www.w3.org/html/wg/drafts/html/master/syntax.html#the-insertion-mode
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Consume(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            Consumes a token and processes it.
            </summary>
            <param name="token">The token to consume.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Home(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            Takes the method corresponding to the current insertation mode.
            </summary>
            <param name="token">The token to insert / use.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Initial(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.1 The "initial" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.BeforeHtml(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.2 The "before html" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.BeforeHead(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.3 The "before head" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InHead(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.4 The "in head" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InHeadNoScript(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.5 The "in head noscript" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AfterHead(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.6 The "after head" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBody(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.7 The "in body" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Text(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.8 The "text" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InTable(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.9 The "in table" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InTableText(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.10 The "in table text" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InCaption(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.11 The "in caption" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InColumnGroup(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.12 The "in column group" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InTableBody(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.13 The "in table body" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InRow(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.14 The "in row" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InCell(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.15 The "in cell" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InSelect(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.16 The "in select" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InSelectInTable(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.17 The "in select in table" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InTemplate(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.18 The "in template" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AfterBody(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.19 The "after body" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InFrameset(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.20 The "in frameset" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AfterFrameset(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.21 The "after frameset" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AfterAfterBody(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.22 The "after after body" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AfterAfterFrameset(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            See 8.2.5.4.23 The "after after frameset" insertion mode.
            </summary>
            <param name="token">The passed token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.TemplateStep(AngleSharp.Parser.Html.HtmlToken,AngleSharp.Parser.Html.HtmlTreeMode)">
            <summary>
            Inserting something in the template.
            </summary>
            <param name="token">The token to insert.</param>
            <param name="mode">The mode to push.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.CloseTemplate">
            <summary>
            Closes the template element.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InTableBodyCloseTable(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Closes the table if the section is in table scope.
            </summary>
            <param name="tag">The tag to insert which triggers the closing of the table.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InSelectEndTagOption">
            <summary>
            Acts if a option end tag had been seen in the InSelect state.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InSelectEndTagOptgroup">
            <summary>
            Acts if a optgroup end tag had been seen in the InSelect state.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InColumnGroupEndTagColgroup">
            <summary>
            Act as if an colgroup end tag has been found in the InColumnGroup state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AfterHeadStartTagBody(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Act as if a body start tag has been found in the AfterHead state.
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.RawtextAlgorithm(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Follows the generic rawtext parsing algorithm.
            </summary>
            <param name="tag">The given tag token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.RCDataAlgorithm(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Follows the generic RCData parsing algorithm.
            </summary>
            <param name="tag">The given tag token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyStartTagListItem(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Acts if a li start tag in the InBody state has been found.
            </summary>
            <param name="tag">The actual tag given.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyStartTagDefinitionItem(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Acts if a dd or dt start tag in the InBody state has been found.
            </summary>
            <param name="tag">The actual tag given.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyEndTagBlock(System.String)">
            <summary>
            Acts if a button or similar end tag had been seen in the InBody state.
            </summary>
            <param name="tagName">The name of the block element.</param>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.HeisenbergAlgorithm(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Acts if a nobr tag had been seen in the InBody state.
            </summary>
            <param name="tag">The actual tag given.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.CopyElement(AngleSharp.DOM.Element)">
            <summary>
            Copies the element and its attributes to create a new element.
            </summary>
            <param name="element">The old element (source).</param>
            <returns>The new element (target).</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyWithFoster(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            Performs the InBody state with foster parenting.
            </summary>
            <param name="token">The given token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyEndTagAnythingElse(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Act as if an anything else end tag has been found in the InBody state.
            </summary>
            <param name="tag">The actual tag found.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyEndTagBody">
            <summary>
            Act as if an body end tag has been found in the InBody state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyStartTagBreakrow(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Act as if an br start tag has been found in the InBody state.
            </summary>
            <param name="tag">The actual tag found.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InBodyEndTagParagraph">
            <summary>
            Act as if an p end tag has been found in the InBody state.
            </summary>
            <returns>True if the token was found, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InTableEndTagTable">
            <summary>
            Act as if an table end tag has been found in the InTable state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InRowEndTagTablerow">
            <summary>
            Act as if an tr end tag has been found in the InRow state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InSelectEndTagSelect">
            <summary>
            Act as if an select end tag has been found in the InSelect state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InCaptionEndTagCaption">
            <summary>
            Act as if an caption end tag has been found in the InCaption state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.InCellEndTagCell">
            <summary>
            Act as if an td or th end tag has been found in the InCell state.
            </summary>
            <returns>True if the token was not ignored, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Foreign(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            8.2.5.5 The rules for parsing tokens in foreign content
            </summary>
            <param name="token">The token to examine.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ForeignSpecialTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Processes a special start tag token.
            </summary>
            <param name="tag">The tag token to process.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.CreateForeignElementFrom(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Creates a foreign element from the given html tag.
            </summary>
            <param name="tag">The tag of the foreign element.</param>
            <returns>The element or NULL if it is no MathML or SVG element.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ForeignNormalTag(AngleSharp.Parser.Html.HtmlToken)">
            <summary>
            Processes a normal start tag token.
            </summary>
            <param name="token">The token to process.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInScope(System.String)">
            <summary>
            Determines if the given tag name is in the global scope.
            </summary>
            <param name="tagName">The tag name to check.</param>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInScope``1">
            <summary>
            Determines if the given type is in the global scope.
            </summary>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInListItemScope">
            <summary>
            Determines if the given tag name is in the list scope.
            </summary>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInButtonScope">
            <summary>
            Determines if a paragraph is in the button scope.
            </summary>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInTableScope``1">
            <summary>
            Determines if the given type is in the table scope.
            </summary>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInTableScope(System.String)">
            <summary>
            Determines if the given tag name is in the table scope.
            </summary>
            <param name="tagName">The tag name to check.</param>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.IsInSelectScope(System.String)">
            <summary>
            Determines if the given tag name is in the select scope.
            </summary>
            <param name="tagName">The tag name to check.</param>
            <returns>True if it is in scope, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.Kernel">
            <summary>
            The kernel that is pulling the tokens into the parser.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.KernelAsync(System.Threading.CancellationToken)">
            <summary>
            The kernel that is pulling the tokens into the parser.
            </summary>
            <param name="cancelToken">The cancellation token to consider.</param>
            <returns>The task to await.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.RunScript(AngleSharp.DOM.Html.HTMLScriptElement)">
            <summary>
            Runs a script given by the current node.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.CheckBodyOnClosing">
            <summary>
            If there is a node in the stack of open elements that is not either a dd element, a dt element, an
            li element, a p element, a tbody element, a td element, a tfoot element, a th element, a thead
            element, a tr element, the body element, or the html element, then this is a parse error.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.TagCurrentlyOpen(System.String)">
            <summary>
            Checks if a tag with the given name is currently open.
            </summary>
            <param name="tagName">The name of the tag to check for.</param>
            <returns>True if such a tag is open, otherwise false.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.PreventNewLine">
            <summary>
            Gets the next token and removes the starting newline, if it has one.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.SetCharset(System.String)">
            <summary>
            Resolves the encoding from the given charset and sets it.
            </summary>
            <param name="charset">The charset string.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.End">
            <summary>
            8.2.6 The end.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddDoctype(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            Appends the doctype token to the document.
            </summary>
            <param name="doctypeToken">The doctypen token.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddRoot(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Adds the root element (html) to the document.
            </summary>
            <param name="tag">The token which started this process.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.CloseCurrentNode">
            <summary>
            Pops the last node from the stack of open nodes.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.SetupElement(AngleSharp.DOM.Element,AngleSharp.Parser.Html.HtmlTagToken,System.Boolean)">
            <summary>
            Modifies the node by appending all attributes and
            acknowledging the self-closing flag if set.
            </summary>
            <param name="element">The node which will be added to the list.</param>
            <param name="tag">The associated tag token.</param>
            <param name="acknowledgeSelfClosing">Should the self-closing be acknowledged?</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddElement(AngleSharp.Parser.Html.HtmlTagToken,System.Boolean)">
            <summary>
            Appends a node to the current node and
            modifies the node by appending all attributes and
            acknowledging the self-closing flag if set.
            </summary>
            <param name="tag">The associated tag token.</param>
            <param name="acknowledgeSelfClosing">Should the self-closing be acknowledged?</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddElement``1(AngleSharp.Parser.Html.HtmlTagToken,System.Boolean)">
            <summary>
            Appends a node to the current node and
            modifies the node by appending all attributes and
            acknowledging the self-closing flag if set.
            </summary>
            <typeparam name="TElement">The type of element to create.</typeparam>
            <param name="tag">The associated tag token.</param>
            <param name="acknowledgeSelfClosing">Should the self-closing be acknowledged?</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddElement(AngleSharp.DOM.Element,AngleSharp.Parser.Html.HtmlTagToken,System.Boolean)">
            <summary>
            Appends a node to the current node and
            modifies the node by appending all attributes and
            acknowledging the self-closing flag if set.
            </summary>
            <param name="element">The node which will be added to the list.</param>
            <param name="tag">The associated tag token.</param>
            <param name="acknowledgeSelfClosing">Should the self-closing be acknowledged?</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddElement(AngleSharp.DOM.Element)">
            <summary>
            Appends a configured node to the current node.
            </summary>
            <param name="element">The node which will be added to the list.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddElementWithFoster(AngleSharp.DOM.Element)">
            <summary>
            Appends a node to the appropriate foster parent.
            http://www.w3.org/html/wg/drafts/html/master/syntax.html#foster-parent
            </summary>
            <param name="element">The node which will be added to the list.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddForeignElement(AngleSharp.DOM.Element)">
            <summary>
            Appends a configured foreign node to the current node.
            </summary>
            <param name="element">The node which will be added to the list.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddCharacters(System.String)">
            <summary>
            Inserts the given characters into the current node.
            </summary>
            <param name="text">The characters to insert.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.AddCharactersWithFoster(System.String)">
            <summary>
            Inserts the given character into the foster parent.
            </summary>
            <param name="text">The character to insert.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ClearStackBackTo(System.String)">
            <summary>
            Clears the stack of open elements back to the given element name.
            </summary>
            <param name="tagName">The tag that will be the CurrentNode.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ClearStackBackTo``1">
            <summary>
            Clears the stack of open elements back to any heading element.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.GenerateImpliedEndTagsExceptFor(System.String)">
            <summary>
            Generates the implied end tags for the dd, dt, li, option, optgroup, p, rp, rt elements except for
            the tag given.
            </summary>
            <param name="tagName">The tag that will be excluded.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.GenerateImpliedEndTags">
            <summary>
            Generates the implied end tags for the dd, dt, li, option, optgroup, p, rp, rt elements.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.ReconstructFormatting">
            <summary>
            Reconstruct the list of active formatting elements, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlParser.RaiseErrorOccurred(AngleSharp.ErrorCode)">
            <summary>
            Fires an error occurred event.
            </summary>
            <param name="code">The associated error code.</param>
        </member>
        <member name="E:AngleSharp.Parser.Html.HtmlParser.ParseError">
            <summary>
            The event will be fired once an error has been detected.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlParser.Result">
            <summary>
            Gets the (maybe intermediate) result of the parsing process.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlParser.IsAsync">
            <summary>
            Gets if the parser has been started asynchronously.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlParser.IsFragmentCase">
            <summary>
            Gets if the tree builder has been created for
            parsing HTML fragments.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlParser.AdjustedCurrentNode">
            <summary>
            Gets the adjusted current node.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlParser.CurrentNode">
            <summary>
            Gets the current node.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlParser.PendingParsingBlock">
            <summary>
            Gets or sets the pending parsing block script.
            </summary>
        </member>
        <member name="T:AngleSharp.Extensions.PortableExtensions">
            <summary>
            Extensions for ensuring code portability.
            </summary>
        </member>
        <member name="T:AngleSharp.Specification">
            <summary>
            Contains useful information from the specification.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.EndOfFile">
            <summary>
            The end of file character 26.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Tilde">
            <summary>
            The tilde character ( ~ ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Pipe">
            <summary>
            The pipe character ( | ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Null">
            <summary>
            The null character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Ampersand">
            <summary>
            The ampersand character ( &amp; ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Num">
            <summary>
            The number sign character ( # ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Dollar">
            <summary>
            The dollar sign character ( $ ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Semicolon">
            <summary>
            The semicolon sign ( ; ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Asterisk">
            <summary>
            The asterisk character ( * ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Equality">
            <summary>
            The equals sign ( = ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Plus">
            <summary>
            The plus sign ( + ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Minus">
            <summary>
            The dash ( hypen minus, - ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Comma">
            <summary>
            The comma character ( , ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Dot">
            <summary>
            The full stop ( . ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Accent">
            <summary>
            The circumflex accent ( ^ ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.At">
            <summary>
            The commercial at ( @ ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.LessThan">
            <summary>
            The opening angle bracket ( LESS-THAN-SIGN ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.GreaterThan">
            <summary>
            The closing angle bracket ( GREATER-THAN-SIGN ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.SingleQuote">
            <summary>
            The single quote / quotation mark ( ' ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.DoubleQuote">
            <summary>
            The (double) quotation mark ( " ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.CurvedQuote">
            <summary>
            The (curved) quotation mark ( ` ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.QuestionMark">
            <summary>
            The question mark ( ? ).
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Tab">
            <summary>
            The tab character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.LineFeed">
            <summary>
            The line feed character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.CarriageReturn">
            <summary>
            The carriage return character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.FormFeed">
            <summary>
            The form feed character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Space">
            <summary>
            The space character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Solidus">
            <summary>
            The slash (solidus, /) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.NoBreakSpace">
            <summary>
            The no break space character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.ReverseSolidus">
            <summary>
            The backslash ( reverse-solidus, \ ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Colon">
            <summary>
            The colon ( : ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.ExclamationMark">
            <summary>
            The exclamation mark ( ! ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Replacement">
            <summary>
            The replacement character in case of errors.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Underscore">
            <summary>
            The low line ( _ ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.RoundBracketOpen">
            <summary>
            The round bracket open ( ( ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.RoundBracketClose">
            <summary>
            The round bracket close ( ) ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.SquareBracketOpen">
            <summary>
            The square bracket open ( [ ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.SquareBracketClose">
            <summary>
            The square bracket close ( ] ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.CurlyBracketOpen">
            <summary>
            The curly bracket open ( { ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.CurlyBracketClose">
            <summary>
            The curly bracket close ( } ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.Percent">
            <summary>
            The percent ( % ) character.
            </summary>
        </member>
        <member name="F:AngleSharp.Specification.MaximumCodepoint">
            <summary>
            The maximum allowed codepoint (defined in Unicode).
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.SvgHelpers">
            <summary>
            A collection of useful helpers when working with SVG.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.SvgHelpers.AdjustSvgTagName(System.String)">
            <summary>
            Adjusts the tag name to the correct capitalization.
            </summary>
            <param name="tagName">The name of adjust.</param>
            <returns>The name with the correct capitalization.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.SvgHelpers.AdjustSvgAttributeName(System.String)">
            <summary>
            Adjusts the attribute name to the correct capitalization.
            </summary>
            <param name="attributeName">The name of adjust.</param>
            <returns>The name with the correct capitalization.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlTokenizer">
            <summary>
            Performs the tokenization of the source code. Follows the tokenization algorithm at:
            http://www.w3.org/html/wg/drafts/html/master/syntax.html
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.#ctor(AngleSharp.ITextSource)">
            <summary>
            See 8.2.4 Tokenization
            </summary>
            <param name="source">The source code manager.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.Get">
            <summary>
            Gets the next available token.
            </summary>
            <returns>The next available token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.Plaintext(System.Char)">
            <summary>
            See 8.2.4.7 PLAINTEXT state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.Data(System.Char)">
            <summary>
            See 8.2.4.1 Data state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RCData(System.Char)">
            <summary>
            See 8.2.4.3 RCDATA state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RCDataLT">
            <summary>
            See 8.2.4.11 RCDATA less-than sign state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RCDataEndTag(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.12 RCDATA end tag open state
            </summary>
            <param name="position">The start position.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RCDataNameEndTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.13 RCDATA end tag name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.Rawtext(System.Char)">
            <summary>
            See 8.2.4.5 RAWTEXT state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RawtextLT">
            <summary>
            See 8.2.4.14 RAWTEXT less-than sign state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RawtextEndTag(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.15 RAWTEXT end tag open state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.RawtextNameEndTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.16 RAWTEXT end tag name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CData">
            <summary>
            See 8.2.4.68 CDATA section state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CharacterReference(System.Char,System.Char)">
            <summary>
            See 8.2.4.69 Tokenizing character references
            </summary>
            <param name="c">The next input character.</param>
            <param name="allowedCharacter">The additionally allowed character if there is one.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.TagOpen">
            <summary>
            See 8.2.4.8 Tag open state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.TagEnd(System.Char,AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.9 End tag open state
            </summary>
            <param name="c">The next input character.</param>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.TagName(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.10 Tag name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.TagSelfClosing(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.43 Self-closing start tag state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.MarkupDeclaration(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.45 Markup declaration open state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.BogusComment(System.Char,AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.44 Bogus comment state
            </summary>
            <param name="c">The current character.</param>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CommentStart(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.46 Comment start state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CommentDashStart(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.47 Comment start dash state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.Comment(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.48 Comment state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CommentDashEnd(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.49 Comment end dash state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CommentEnd(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.50 Comment end state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.CommentBangEnd(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.51 Comment end bang state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.Doctype(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.52 DOCTYPE state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeNameBefore(System.Char,AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.53 Before DOCTYPE name state
            </summary>
            <param name="c">The next input character.</param>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeName(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.54 DOCTYPE name state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeNameAfter(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.55 After DOCTYPE name state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypePublic(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.56 After DOCTYPE public keyword state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypePublicIdentifierBefore(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.57 Before DOCTYPE public identifier state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypePublicIdentifierDoubleQuoted(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.58 DOCTYPE public identifier (double-quoted) state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypePublicIdentifierSingleQuoted(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.59 DOCTYPE public identifier (single-quoted) state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypePublicIdentifierAfter(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.60 After DOCTYPE public identifier state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeBetween(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.61 Between DOCTYPE public and system identifiers state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeSystem(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.62 After DOCTYPE system keyword state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeSystemIdentifierBefore(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.63 Before DOCTYPE system identifier state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeSystemIdentifierDoubleQuoted(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.64 DOCTYPE system identifier (double-quoted) state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeSystemIdentifierSingleQuoted(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.65 DOCTYPE system identifier (single-quoted) state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.DoctypeSystemIdentifierAfter(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.66 After DOCTYPE system identifier state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.BogusDoctype(AngleSharp.Parser.Html.HtmlDoctypeToken)">
            <summary>
            See 8.2.4.67 Bogus DOCTYPE state
            </summary>
            <param name="doctype">The current doctype token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeBeforeName(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.34 Before attribute name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeName(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.35 Attribute name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeAfterName(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.36 After attribute name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeBeforeValue(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.37 Before attribute value state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeDoubleQuotedValue(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.38 Attribute value (double-quoted) state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeSingleQuotedValue(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.39 Attribute value (single-quoted) state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeUnquotedValue(System.Char,AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.40 Attribute value (unquoted) state
            </summary>
            <param name="c">The next input character.</param>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.AttributeAfterValue(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.42 After attribute value (quoted) state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptData(System.Char)">
            <summary>
            See 8.2.4.6 Script data state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataLT">
            <summary>
            See 8.2.4.17 Script data less-than sign state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEndTag(AngleSharp.Parser.TextPosition)">
            <summary>
            See 8.2.4.18 Script data end tag open state
            </summary>
            <param name="position">The start position.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataNameEndTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.19 Script data end tag name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataStartEscape(System.Char)">
            <summary>
            See 8.2.4.20 Script data escape start state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscaped(System.Char)">
            <summary>
            See 8.2.4.22 Script data escaped state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataStartEscapeDash(System.Char)">
            <summary>
            See 8.2.4.21 Script data escape start dash state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedDash">
            <summary>
            See 8.2.4.23 Script data escaped dash state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedDashDash">
            <summary>
            See 8.2.4.24 Script data escaped dash dash state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedLT">
            <summary>
            See 8.2.4.25 Script data escaped less-than sign state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedEndTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.26 Script data escaped end tag open state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedNameTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            See 8.2.4.27 Script data escaped end tag name state
            </summary>
            <param name="tag">The current tag token.</param>
            <returns>The emitted token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataStartDoubleEscape">
            <summary>
            See 8.2.4.28 Script data double escape start state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedDouble(System.Char)">
            <summary>
            See 8.2.4.29 Script data double escaped state
            </summary>
            <param name="c">The next input character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedDoubleDash">
            <summary>
            See 8.2.4.30 Script data double escaped dash state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedDoubleDashDash">
            <summary>
            See 8.2.4.31 Script data double escaped dash dash state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEscapedDoubleLT">
            <summary>
            See 8.2.4.32 Script data double escaped less-than sign state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.ScriptDataEndDoubleEscape">
            <summary>
            See 8.2.4.33 Script data double escape end state
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTokenizer.EmitTag(AngleSharp.Parser.Html.HtmlTagToken)">
            <summary>
            Emits the current token as a tag token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlTokenizer.IsAcceptingCharacterData">
            <summary>
            Gets or sets if CDATA sections are accepted.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlTokenizer.State">
            <summary>
            Gets or sets the current parse mode.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Css.CssDelimToken">
            <summary>
            The delimiter token that contains a series of characters.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssDelimToken.#ctor(System.Char)">
            <summary>
            Creates a new delimiter token with the given character.
            </summary>
            <param name="data">The character.</param>
        </member>
        <member name="M:AngleSharp.Parser.Css.CssDelimToken.ToValue">
            <summary>
            Gets a string which represents the original value.
            </summary>
            <returns>The original value.</returns>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlToken">
            <summary>
            The abstract base class of any HTML token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.Character(System.String)">
            <summary>
            Creates a new HTML character token based on the given characters.
            </summary>
            <param name="characters">The characters to contain.</param>
            <returns>The generated token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.Comment(System.String)">
            <summary>
            Creates a new HTML comment token based on the given string.
            </summary>
            <param name="comment">The comment to contain.</param>
            <returns>The generated token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.Doctype(System.Boolean)">
            <summary>
            Creates a new HTML doctype token.
            </summary>
            <param name="quirksmode">Determines if quirksmode will be forced.</param>
            <returns>The generated token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.OpenTag">
            <summary>
            Creates a new opening HtmlTagToken.
            </summary>
            <returns>The new HTML tag token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.CloseTag">
            <summary>
            Creates a new closing HtmlTagToken.
            </summary>
            <returns>The new HTML tag token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.OpenTag(System.String)">
            <summary>
            Creates a new opening HtmlTagToken for the given name.
            </summary>
            <param name="name">The name of the tag.</param>
            <returns>The new HTML tag token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.CloseTag(System.String)">
            <summary>
            Creates a new closing HtmlTagToken for the given name.
            </summary>
            <param name="name">The name of the tag.</param>
            <returns>The new HTML tag token.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.TrimStart">
            <summary>
            Removes all ignorable characters from the beginning.
            </summary>
            <returns>The trimmed characters.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.RemoveNewLine">
            <summary>
            Removes the a new line in the beginning, if any.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.AsTag">
            <summary>
            Converts the current token to a tag token.
            </summary>
            <returns>The tag token instance.</returns>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlToken.IsStartTag(System.String)">
            <summary>
            Finds out if the current token is a start tag token with the given name.
            </summary>
            <param name="name">The name of the tag.</param>
            <returns>True if the token is indeed a start tag token with the given name, otherwise false.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.EOF">
            <summary>
            Gets the end of file token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.IsEmpty">
            <summary>
            Gets if the character data is empty (null or length equal to zero).
            </summary>
            <returns>True if the character data is actually NULL or empty.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.HasContent">
            <summary>
            Gets if the character data contains actually a non-space character.
            </summary>
            <returns>True if the character data contains space character.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.Name">
            <summary>
            Gets or sets the name of a tag token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.Data">
            <summary>
            Gets the data of the comment or character token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.IsHtmlCompatible">
            <summary>
            Gets if the token can be used with IsHtmlTIP properties.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.IsSvg">
            <summary>
            Gets if the given token is a SVG root start tag.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.IsEof">
            <summary>
            Gets if the token is an end-of-file token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.IsMathCompatible">
            <summary>
            Gets if the token can be used with IsMathMLTIP properties.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlToken.Type">
            <summary>
            Gets the type of the token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlCharacterToken">
            <summary>
            The character token that contains a single character.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlCharacterToken.#ctor(System.String)">
            <summary>
            Creates a new character token with the given characters.
            </summary>
            <param name="data">The characters.</param>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlCommentToken">
            <summary>
            The token that is used for comments.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlCommentToken.#ctor(System.String)">
            <summary>
            Creates a new comment token with the supplied data.
            </summary>
            <param name="data">The data to set.</param>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlCommentToken.Start">
            <summary>
            Gets or sets the position of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlCommentToken.End">
            <summary>
            Gets or sets the position of the token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlDoctypeToken">
            <summary>
            The DOCTYPE token.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlDoctypeToken.#ctor(System.Boolean)">
            <summary>
            Creates a new DOCTYPE token with the quirks mode set initially.
            </summary>
            <param name="quirksForced">The state of the force-quirks flag.</param>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.Start">
            <summary>
            Gets or sets the position of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.End">
            <summary>
            Gets or sets the position of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsQuirksForced">
            <summary>
            Gets or sets the state of the force-quirks flag.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsNameMissing">
            <summary>
            Gets the state of the name.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsPublicIdentifierMissing">
            <summary>
            Gets the state of the public identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsSystemIdentifierMissing">
            <summary>
            Gets the state of the system identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.PublicIdentifier">
            <summary>
            Gets or sets the value of the public identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.SystemIdentifier">
            <summary>
            Gets or sets the value of the system identifier.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsLimitedQuirks">
            <summary>
            Gets if the given doctype token represents a limited quirks mode state.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsFullQuirks">
            <summary>
            Gets if the given doctype token represents a full quirks mode state.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlDoctypeToken.IsValid">
            <summary>
            Gets the status if the given doctype token matches one of the popular conditions.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlEndOfFileToken">
            <summary>
            Represents the final token to mark the EOF.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlEndOfFileToken.#ctor">
            <summary>
            Creates a new EOF token.
            </summary>
        </member>
        <member name="T:AngleSharp.Parser.Html.HtmlTagToken">
            <summary>
            Class for StartTagToken and EndTagToken.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTagToken.#ctor">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTagToken.#ctor(System.String)">
            <summary>
            Creates a new HTML TagToken with the defined name.
            </summary>
            <param name="name">The name of the tag.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTagToken.AddAttribute(System.String)">
            <summary>
            Adds a new attribute to the list of attributes. The value will
            be set to an empty string.
            </summary>
            <param name="name">The name of the attribute.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTagToken.AddAttribute(System.String,System.String)">
            <summary>
            Adds a new attribute to the list of attributes.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTagToken.SetAttributeValue(System.String)">
            <summary>
            Sets the value of the last added attribute.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:AngleSharp.Parser.Html.HtmlTagToken.GetAttribute(System.String)">
            <summary>
            Gets the value of the attribute with the given name or an empty
            string if the attribute is not available.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>The value of the attribute.</returns>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlTagToken.Start">
            <summary>
            Gets or sets the position of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlTagToken.End">
            <summary>
            Gets or sets the position of the token.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlTagToken.IsSelfClosing">
            <summary>
            Gets or sets the state of the self-closing flag.
            </summary>
        </member>
        <member name="P:AngleSharp.Parser.Html.HtmlTagToken.Attributes">
            <summary>
            Gets the list of attributes.
            </summary>
        </member>
        <member name="T:AngleSharp.Tools.AnalysisWindow">
            <summary>
            Represents a sample browsing Window implementation for
            automated tests, analysis and as a useful playground.
            </summary>
        </member>
        <member name="M:AngleSharp.Tools.AnalysisWindow.#ctor">
            <summary>
            Creates a new analysis windows context without any starting
            document. The height and width properties are also not set.
            </summary>
        </member>
        <member name="M:AngleSharp.Tools.AnalysisWindow.#ctor(AngleSharp.DOM.IDocument)">
            <summary>
            Creates a new analysis window starting with the given document.
            </summary>
            <param name="document">The document to use.</param>
        </member>
        <member name="M:AngleSharp.Tools.AnalysisWindow.GetComputedStyle(AngleSharp.DOM.IElement,System.String)">
            <summary>
            Gives the values of all the CSS properties of an element after
            applying the active stylesheets and resolving any basic computation
            those values may contain.
            </summary>
            <param name="element">The element to compute the styles for.</param>
            <param name="pseudo">The optional pseudo selector to use.</param>
            <returns>The style declaration describing the element.</returns>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.Document">
            <summary>
            Gets a reference to the document that the window contains.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.Name">
            <summary>
            Gets or sets the name of the window.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.OuterHeight">
            <summary>
            Gets or sets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.OuterWidth">
            <summary>
            Gets or sets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.ScreenX">
            <summary>
            Gets or sets the horizontal distance of the left border of the user's
            browser from the left side of the screen.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.ScreenY">
            <summary>
            Gets or sets the vertical distance of the top border of the user's
            browser from the top side of the screen.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.Location">
            <summary>
            Gets the location of the currently contained document.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.Status">
            <summary>
            Gets or sets the status string.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.Proxy">
            <summary>
            Gets the proxy to the current browsing context.
            </summary>
        </member>
        <member name="P:AngleSharp.Tools.AnalysisWindow.Navigator">
            <summary>
            Gets the user-agent information.
            </summary>
        </member>
        <member name="T:AngleSharp.Tools.DefaultEventLoop">
            <summary>
            Represents the default event loop, that just executes actions
            in the given order.
            </summary>
        </member>
    </members>
</doc>
